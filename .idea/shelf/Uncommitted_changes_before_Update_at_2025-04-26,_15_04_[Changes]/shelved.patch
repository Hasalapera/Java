Index: JavaMiniProject/src/database/DatabaseConnection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;\n\nimport java.sql.*;\n\npublic class DatabaseConnection {\n    private static final String URL = \"jdbc:mysql://localhost:3306/fot_management_system\";\n    private static final String USER = \"root\";\n    private static final String PASSWORD = \"\";\n\n    public static Connection connect() {\n        try {\n            return DriverManager.getConnection(URL, USER, PASSWORD);\n        } catch (SQLException e) {\n            System.out.println(e.getMessage());\n            e.printStackTrace();\n            return null;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaMiniProject/src/database/DatabaseConnection.java b/JavaMiniProject/src/database/DatabaseConnection.java
--- a/JavaMiniProject/src/database/DatabaseConnection.java	(revision 8bb9aa6a7b9e886a50aed4fc1bcb9dc6eb593ba9)
+++ b/JavaMiniProject/src/database/DatabaseConnection.java	(date 1745605089076)
@@ -5,7 +5,7 @@
 public class DatabaseConnection {
     private static final String URL = "jdbc:mysql://localhost:3306/fot_management_system";
     private static final String USER = "root";
-    private static final String PASSWORD = "";
+    private static final String PASSWORD = "1234";
 
     public static Connection connect() {
         try {
Index: JavaMiniProject/src/student/StuHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package student;\n\nimport database.DatabaseConnection;\nimport database.Session;\n\nimport javax.swing.*;\nimport javax.swing.table.DefaultTableModel;\nimport java.awt.*;\nimport java.awt.event.*;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.nio.file.StandardCopyOption;\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n//import net.proteanit.sql.DbUtils;\n\n\npublic class StuHome extends JFrame {\n    private JPanel mainPanel;\n    private JPanel headingPanel;\n    private JPanel btnPanel;\n    private JPanel cardMainPanel;\n    private JButton profileButton;\n    private JButton coursesButton;\n    private JButton gradeAndGPAButton;\n    private JButton attendanceButton;\n    private JButton medicalButton;\n    private JButton timeTableButton;\n    private JTextField fNameTxt;\n    private JTextField lNameTxt;\n    private JTextField addressTxt;\n    private JTextField emailTxt;\n    private JTextField pNoTxt;\n    private JTextField roleTxt;\n    private JPanel imgMainPanel;\n    private JPanel imgPanel;\n    private JLabel roleLbl;\n    private JLabel pNoLbl;\n    private JLabel emailLbl;\n    private JLabel addressLbl;\n    private JLabel lNameLbl;\n    private JLabel fNameLbl;\n    private JPanel detailPanel;\n    private JLabel profileHeadingLbl;\n    private JPanel profileCard;\n    private JLabel imageLbl;\n    private JButton noticeButton;\n    private JLabel stuManaSysLbl;\n    private JLabel FoTLbl;\n    private JPanel coursesCard;\n    private JLabel CoursesHeadingLbl;\n    private JComboBox comboBoxCourses;\n    private JLabel selectCourseLbl;\n    private JPanel gradeGPACard;\n    private JLabel gradeGPAHeadingLbl;\n    private JComboBox selectCrsComboBox;\n    private JTextField yourGradeTxt;\n    private JTextField sgpaTxt;\n    private JTextArea gradetxtArea;\n    private JPanel gradeTxtAreaPanel;\n    private JLabel yourGradeLbl;\n    private JLabel selectCrsLbl;\n    private JLabel sgpaLbl;\n    private JButton logOutButton;\n    private JPanel attendanceCard;\n    private JPanel medicalCard;\n    private JPanel timeTableCard;\n    private JPanel noticeCard;\n    private JLabel attendanceHeadingLbl;\n    private JLabel medicalHeadingLbl;\n    private JLabel noticeHeadingLbl;\n    private JComboBox selectAttCourseCombo;\n    private JComboBox selectCrsTypeCombo;\n    private JLabel selectAttCourseLbl;\n    private JButton clearButton;\n    private JButton OKButton;\n    private JPanel attViewPanel;\n    private JTable mediDetailsTable;\n    private JPanel mediDetailsTblPanel;\n    private JComboBox selectTitleCombo;\n    private JLabel selectTitleLbl;\n    private JLabel timeTableHeadingLbl;\n    private JPanel noticeTxtAreaPanel;\n    private JTextArea noticeTxtArea;\n    private JPanel timeTablePanel;\n    private JTable timeTableTable;\n    private JTable attTable;\n    private JScrollPane attScrollPane;\n    private JScrollPane mediScrollPane;\n    private JScrollPane noticeScrollPane;\n    private JScrollPane timeTableScrollPane;\n    private JButton updateProfileButton;\n    private JTable Course_materials;\n    private JButton updateTimeTableButton;\n    private JButton addButton;\n    private JButton checkEligibilityButton;\n    private JButton checkAttendanceEligibilityButton;\n    private JButton deleteProfilePictureButton;\n    private JButton okButtonCourses;\n    private JPanel displayDetailsPanel;\n    private JButton downloadButton;\n\n\n//    private String[] courseCodes = {\n//            \"ICT2113\",  // Index 0\n//            \"ICT2122\",  // Index 1\n//            \"ICT2132\",  // Index 2\n//            \"ICT2142\",  // Index 3\n//            \"ICT2152\"   // Index 4\n//    };\n\n    Connection con;\n    PreparedStatement pst;\n    ResultSet rs;\n\n\n    public StuHome() {\n//        JFrame frame = new JFrame(\"Student Management System - Home\");\n        setContentPane(mainPanel);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setTitle(\"Student Home\");\n        setSize(1000, 800);\n        setLocationRelativeTo(null);\n        setVisible(true);\n\n        displayProfileDetails();\n        showProfilePicture(imageLbl);\n//        getAllAttendanceCounts();\n\n        selectTitleCombo.setSelectedIndex(-1);  // Ensure no initial selection\n        noticeTxtArea.setText(\"\");\n\n        CardLayout cardLayout = (CardLayout) (cardMainPanel.getLayout());\n\n        // Button actions to switch cards\n        profileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                System.out.println(\"hi\");\n                cardLayout.show(cardMainPanel, \"profileCard\");\n            }\n        });\n\n        coursesButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"coursesCard\");\n\n            }\n        });\n\n        gradeAndGPAButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"gradeGPACard\");\n                calculateGPA();\n            }\n        });\n\n        attendanceButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"attendanceCard\");\n            }\n        });\n\n        medicalButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"medicalCard\");\n\n                String[] mediStatus = {\"Medical_id\", \"Course_code\", \"Course_name\", \"Week_No\", \"Day_No\", \"Status\"};\n                DefaultTableModel model = new DefaultTableModel(null, mediStatus);\n                mediDetailsTable.setModel(model);\n                viewMedicalStatus();\n            }\n        });\n\n        timeTableButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"timeTableCard\");\n                showTimeTable();\n            }\n        });\n\n        noticeButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"noticeCard\");\n                addNoticeTitlesToComboBox();\n                selectTitleCombo.setSelectedIndex(-1); // Reset selection\n                noticeTxtArea.setText(\"\"); // Clear previous content\n            }\n\n        });\n\n\n        updateProfileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new UpdateStudentProfile();\n                dispose();\n            }\n        });\n        logOutButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String password = \"\"                        ;\n                new Login();\n                dispose();\n            }\n        });\n        selectCrsComboBox.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = selectCrsComboBox.getSelectedIndex();\n\n//                String selectedCourseCode = courseCodes[selectedIndex];\n                List<String> courseCodes = getAllCourseCodes();\n\n                getGrade(courseCodes.get(selectedIndex));\n//                selectCrsComboBox.setSelectedIndex(-1);\n            }\n        });\n\n        selectTitleCombo.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                // Only proceed if an item is selected (index not -1)\n                if (selectTitleCombo.getSelectedIndex() != -1) {\n                    String selectedTitle = (String) selectTitleCombo.getSelectedItem();\n                    System.out.println(\"Selected Title: \" + selectedTitle);\n                    displayNoticeContent(selectedTitle);\n                } else {\n                    noticeTxtArea.setText(\"\"); // Clear if nothing selected\n                }\n            }\n        });\n\n        checkEligibilityButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new ShowCAEligibility();\n                dispose();\n            }\n        });\n        selectAttCourseCombo.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = selectAttCourseCombo.getSelectedIndex();\n//                String selectedCourseCode = courseCodes[selectedIndex];\n                List<String> selectedCourseCodes = getAllCourseCodes();\n                System.out.println(\"Selected CourseCode: \" + selectedCourseCodes.get(selectedIndex));\n            }\n        });\n\n        OKButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = selectAttCourseCombo.getSelectedIndex();\n                if (selectedIndex >= 0) {\n//                    String selectedCourseCode = courseCodes[selectedIndex];\n                    List<String> selectedCourseCodes = getAllCourseCodes();\n                    System.out.println(\"Selected CourseCode: \" + selectedCourseCodes.get(selectedIndex));\n                    viewAttendance(selectedCourseCodes.get(selectedIndex));\n                }else {\n                    JOptionPane.showMessageDialog(null, \"Please select a course\");\n                }\n            }\n        });\n        clearButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                //Reset ComboBox selection to no selection\n                selectAttCourseCombo.setSelectedIndex(0);  // or 0 if you want the first item\n\n                //Clear the table model (remove all data)\n                DefaultTableModel model = new DefaultTableModel(\n                        new String[]{\"Attendance Id\", \"Lecture Hour\", \"Week No\", \"Day No\", \"Status\", \"Course Type\"}, 0\n                );\n                attTable.setModel(model);\n            }\n        });\n//        checkAttendanceEligibilityButton.addActionListener(new ActionListener() {\n//            @Override\n//            public void actionPerformed(ActionEvent e) {\n//\n//            }\n//        });\n        checkAttendanceEligibilityButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new ShowAttendanceEligibility();\n                dispose();\n            }\n        });\n        deleteProfilePictureButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                deleteProfilePicture(imageLbl);\n                deleteProfilePictureButton.setEnabled(false);\n            }\n        });\n\n\n        comboBoxCourses.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int SelectedIndex = comboBoxCourses.getSelectedIndex();\n                List<String> selectedCourseCodeForMaterials = getAllCourseCodes();\n                System.out.println(\"Selected CourseCode: \" + selectedCourseCodeForMaterials.get(SelectedIndex));\n//                getGrade(selectedCourseCodeForMaterials.get(SelectedIndex));\n            }\n        });\n        okButtonCourses.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = comboBoxCourses.getSelectedIndex();\n                if (selectedIndex >= 0) {\n//                    String selectedCourseCode = courseCodes[selectedIndex];\n                    List<String> selectedCourseCodeForMaterials = getAllCourseCodes();\n                    String selectedCourseCode = selectedCourseCodeForMaterials.get(selectedIndex);\n                    System.out.println(\"Selected CourseCode: \" + selectedCourseCodeForMaterials.get(selectedIndex));\n                    viewCourseMaterials(selectedCourseCode);\n                }else {\n                    JOptionPane.showMessageDialog(null, \"Please select a course\");\n                }\n            }\n        });\n        downloadButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedRow = Course_materials.getSelectedRow();\n\n                if (selectedRow == -1) {\n                    JOptionPane.showMessageDialog(mainPanel, \"Please select a material to download.\");\n                    return;\n                }\n\n                // Get file path from selected row\n                String filePath = Course_materials.getValueAt(selectedRow, 3).toString();\n\n                // Call download method\n                downloadMaterial(filePath);\n            }\n        });\n\n    }\n\n\npublic double calculateGPA() {\n    Connection con = null;\n    PreparedStatement pstmt = null;\n    ResultSet rs = null;\n    double totalGradePoints = 0;\n    int totalCredits = 0;\n\n    try {\n        con = DatabaseConnection.connect();\n        // Query to get final exam marks and credits\n        String sql = \"SELECT g.Final_Exam_Mark, c.Credit \" +\n                \"FROM grade_letters g \" +\n                \"JOIN course c ON g.Course_code = c.Course_code \" +\n                \"WHERE g.Stu_id = ?\";\n        pstmt = con.prepareStatement(sql);\n        pstmt.setString(1, Session.loggedInUsername);\n        rs = pstmt.executeQuery();\n\n        while (rs.next()) {\n            double finalMark = rs.getDouble(\"Final_Exam_Mark\");\n            int credits = rs.getInt(\"Credit\");\n\n            double gradePoints = convertMarkToPoints(finalMark);\n            totalGradePoints += gradePoints * credits;\n            totalCredits += credits;\n        }\n\n        if (totalCredits > 0) {\n            double gpa = totalGradePoints / totalCredits;\n            sgpaTxt.setText(String.format(\"%.2f\", gpa));\n            return gpa;\n\n        } else {\n            JOptionPane.showMessageDialog(null, \"Please select a grade\");\n            return 0.0; // No courses found\n        }\n    } catch (Exception e) {\n        System.out.println(\"Error in calculating GPA: \" + e.getMessage());\n        e.printStackTrace();\n        return 0.0;\n    } finally {\n        try {\n            if (rs != null) rs.close();\n            if (pstmt != null) pstmt.close();\n            if (con != null) con.close();\n        } catch (SQLException se) {\n            System.out.println(\"Error closing resources: \" + se.getMessage());\n        }\n    }\n}\n\n    private double convertMarkToPoints(double finalMark) {\n        if (finalMark >= 90) return 4.0;\n        if (finalMark >= 84) return 4.0;\n        if (finalMark >= 75) return 3.7;\n        if (finalMark >= 70) return 3.3;\n        if (finalMark >= 65) return 3.0;\n        if (finalMark >= 60) return 2.7;\n        if (finalMark >= 55) return 2.3;\n        if (finalMark >= 50) return 2.0;\n        if (finalMark >= 45) return 1.7;\n        if (finalMark >= 40) return 1.3;\n        if (finalMark >= 35) return 1.0;\n        return 0.0;\n    }\n\n    public void getGrade(String courseCode) {\n        Connection con = null;\n        PreparedStatement pstmt = null;\n        ResultSet rs = null;\n\n        try {\n            con = DatabaseConnection.connect();  // Your method to connect to DB\n            String sql = \"SELECT Stu_id, Course_code, Final_Exam_Mark, Grade FROM Grade_Letters WHERE Course_code = ? AND Stu_id = ?\";\n            pstmt = con.prepareStatement(sql);\n\n            pstmt.setString(1, courseCode);\n            pstmt.setString(2, Session.loggedInUsername);  // Assuming you have a Session class\n\n            rs = pstmt.executeQuery();\n\n            if (rs.next()) {\n                String grade = rs.getString(\"Grade\");\n                yourGradeTxt.setText(grade);\n\n                System.out.println(\"Course Code: \" + courseCode + \" | Grade: \" + grade);\n            } else {\n                JOptionPane.showMessageDialog(null, \"No Grades Found\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in getting grade: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            try {\n                if (rs != null) rs.close();\n                if (pstmt != null) pstmt.close();\n                if (con != null) con.close();\n            } catch (SQLException se) {\n                System.out.println(\"Error closing resources: \" + se.getMessage());\n            }\n        }\n    }\n\n\n    // ******* Display Profile Details *****************\n\n    public void displayProfileDetails(){\n        con = DatabaseConnection.connect();\n\n        try {\n            String sql = \"SELECT FName, LName, Address, Email, Phone_No, Role FROM User WHERE UserName = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n\n            pstmt.setString(1, Session.loggedInUsername);\n\n            ResultSet rs = pstmt.executeQuery();\n\n            if(rs.next()){\n                String fName1 = rs.getString(\"FName\");\n                fNameTxt.setText(fName1);\n                System.out.println(\"fName1: \" + fName1);\n                String lName1 = rs.getString(\"LName\");\n                lNameTxt.setText(lName1);\n                System.out.println(\"lName1: \" + lName1);\n                String address1 = rs.getString(\"Address\");\n                addressTxt.setText(address1);\n                System.out.println(\"address1: \" + address1);\n                String email1 = rs.getString(\"Email\");\n                emailTxt.setText(email1);\n                System.out.println(\"email1: \" + email1);\n                String phoneNo1 = rs.getString(\"Phone_No\");\n                pNoTxt.setText(phoneNo1);\n                System.out.println(\"phoneNo1: \" + phoneNo1);\n                String role1 = rs.getString(\"Role\");\n                roleTxt.setText(role1);\n                System.out.println(\"role1: \" + role1);\n\n            }else {\n                JOptionPane.showMessageDialog(null, \"No Profile Found\");\n            }\n        }catch (Exception e){\n            System.out.println(\"Error in display Profile Details: \" + e.getMessage());\n        }\n    }\n\n    // ******* Time Table *****************\n\n    public void showTimeTable() {\n        con = DatabaseConnection.connect();\n\n        try {\n            String sql = \"SELECT * FROM TimeTable\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            String[] columnNames = {\"Department\", \"Course_Code\", \"Course_Name\", \"Time\", \"Day\"};\n            DefaultTableModel model = new DefaultTableModel(null, columnNames);\n\n            while (rs.next()) {\n                // Get the day number from the database\n                int dayNumber = rs.getInt(\"Day\");\n\n                // Map the day number to the corresponding weekday name\n                String dayName = mapDayNumberToName(dayNumber);\n\n                model.addRow(new Object[]{\n                        rs.getString(\"Department\"),\n                        rs.getString(\"Course_Code\"),\n                        rs.getString(\"Course_Name\"),\n                        rs.getString(\"Time\"),\n                        dayName\n                });\n            }\n            timeTableTable.setModel(model);\n        } catch (Exception e) {\n            System.out.println(\"Error in display Time Table: \" + e.getMessage());\n        }\n    }\n\n    // Map day numbers to weekday names\n    private String mapDayNumberToName(int dayNumber) {\n        switch (dayNumber) {\n            case 1: return \"Monday\";\n            case 2: return \"Tuesday\";\n            case 3: return \"Wednesday\";\n            case 4: return \"Thursday\";\n            case 5: return \"Friday\";\n            default: return \"Unknown\";\n        }\n    }\n\n    // Add Notice titles to the combo box *****************\n\n    public void addNoticeTitlesToComboBox(){\n        con = DatabaseConnection.connect();\n        try {\n            Connection conn = DatabaseConnection.connect();\n            String sql = \"SELECT * FROM Notice\";\n            PreparedStatement pstmt = conn.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            selectTitleCombo.removeAllItems(); // Clear existing items\n\n            // Add a placeholder or leave empty (optional)\n            // selectTitleCombo.addItem(\"-- Select a Notice --\");\n\n            while (rs.next()) {\n                String title = rs.getString(\"Title\");\n                selectTitleCombo.addItem(title);\n                System.out.println(\"Title: \" + title);\n            }\n\n            // Set initial selection to -1 (no selection)\n            selectTitleCombo.setSelectedIndex(-1);\n        } catch(Exception e) {\n            System.out.println(\"Error in addNoticeTitlesToComboBox: \" + e.getMessage());\n        }\n\n    }\n\n    public void displayNoticeContent(String title) {\n\n        try {\n            // Establish connection to the database to get the NoticeId based on the title\n            Connection con = DatabaseConnection.connect();\n            String sql = \"SELECT Notice_id FROM Notice WHERE Title = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, title);\n            ResultSet rs = pstmt.executeQuery();\n\n            // If the notice exists in the database\n            if (rs.next()) {\n                String noticeId = rs.getString(\"Notice_id\");\n                // Construct the file path using the noticeId\n                File noticeFile = new File(\"notices/notice_\" + noticeId + \".txt\");\n                System.out.println(\"Looking for file at: \" + noticeFile.getAbsolutePath());\n\n\n                // Check if the file exists\n                if (!noticeFile.exists()) {\n                    System.out.println(\"File not found: \" + noticeFile.getName());\n                    noticeTxtArea.setText(\"Notice file not found.\");\n                    return;\n                }\n\n                // Debug: Print the absolute path to ensure it's correct\n                System.out.println(\"Looking for file at: \" + noticeFile.getAbsolutePath());\n\n                // Read content from the file\n                try (BufferedReader reader = new BufferedReader(new FileReader(noticeFile))) {\n                    StringBuilder content = new StringBuilder();\n                    String line;\n                    while ((line = reader.readLine()) != null) {\n                        content.append(line).append(\"\\n\");\n                    }\n\n                    // Display the content in JTextArea\n                    noticeTxtArea.setText(content.toString());\n                } catch (IOException e) {\n                    System.out.println(\"Error reading file: \" + e.getMessage());\n                    noticeTxtArea.setText(\"Error reading the notice file.\");\n                    e.printStackTrace();\n                }\n            } else {\n                noticeTxtArea.setText(\"Notice not found in the database.\");\n            }\n\n        } catch (SQLException e) {\n            System.out.println(\"Error fetching Notice ID: \" + e.getMessage());\n            e.printStackTrace();\n            noticeTxtArea.setText(\"Error fetching notice details.\");\n        }\n    }\n\n\n    //************ Medical *******************\n\n    public void viewMedicalStatus(){\n        Connection con = DatabaseConnection.connect();\n        try{\n            System.out.println(\"LoggedIn Username = [\" + Session.loggedInUsername + \"]\");\n            String sql = \"SELECT med.Medical_id, med.Course_code, med.Week_No, med.Day_No, med.Status, c.Course_Name \" +\n                    \"FROM Medical med \" +\n                    \"JOIN Course c ON med.Course_code = c.Course_code \" +\n                    \"JOIN Student s ON med.Stu_id = s.Stu_id \" +\n                    \"JOIN User u ON s.UserName = u.UserName \" +\n                    \"WHERE u.UserName = ?\";\n\n\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, Session.loggedInUsername);\n\n            System.out.println(\"Executing query: \" + sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            DefaultTableModel model = (DefaultTableModel) mediDetailsTable.getModel();\n            model.setRowCount(0);\n            int count = 0;\n            boolean found = false;\n            while (rs.next()) {\n                count++;\n                found = true;\n                String medId = rs.getString(\"Medical_id\");\n                String courseCode = rs.getString(\"Course_code\");\n                String courseName = rs.getString(\"Course_Name\");\n                String weekNo = rs.getString(\"Week_No\");\n                String dayNo = rs.getString(\"Day_No\");\n                String status = rs.getString(\"Status\");\n\n                model.addRow(new Object[]{medId, courseCode, courseName, weekNo, dayNo, status});\n            }\n            System.out.println(\"Total Records Found: \" + count);\n//            if(count == 0){\n//                JOptionPane.showMessageDialog(null, \"No Records Found\");\n//                System.out.println(\"No Records Found\");\n//            }\n            if(!found){\n                JOptionPane.showMessageDialog(null, \"No Medical Found\");\n                System.out.println(\"No Medical Found\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in view Medical Status: \" + e.getMessage());\n        }\n    }\n\n// ************* Attendance **********************\n\n    public void viewAttendance(String Course_code) {\n        Connection con = DatabaseConnection.connect();\n        try {\n            System.out.println(\"LoggedIn Username = [\" + Session.loggedInUsername + \"]\");\n            String sql = \"SELECT a.Attendance_id, a.Lec_hour, a.Week_No, a.Day_No, a.Status, a.Course_type \" +\n                    \"FROM Attendance a \" +\n                    \"JOIN Course c ON c.Course_code = a.Course_code \" +\n                    \"JOIN Student s ON a.Stu_id = s.Stu_id \" +\n                    \"JOIN User u ON s.UserName = u.UserName \" +\n                    \"WHERE u.UserName = ? AND a.Course_code = ?\";\n\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, Session.loggedInUsername);\n            pstmt.setString(2, Course_code);\n\n            System.out.println(\"Executing query: \" + sql);\n\n            ResultSet rs = pstmt.executeQuery();\n\n            DefaultTableModel model = new DefaultTableModel(\n                    new String[]{\"Attendance Id\", \"Lecture Hour\", \"Week No\", \"Day No\", \"Status\", \"Course Type\"}, 0\n            );\n\n            while (rs.next()) {\n                String attendanceID = rs.getString(\"Attendance_id\");\n                String lecHour = rs.getString(\"Lec_hour\");\n                String weekNo = rs.getString(\"Week_No\");\n                String dayNo = rs.getString(\"Day_No\");\n                String status = rs.getString(\"Status\");\n                String courseType = rs.getString(\"Course_type\");\n\n                model.addRow(new Object[]{attendanceID, lecHour, weekNo, dayNo, status, courseType});\n\n            }\n            attTable.setModel(model);\n\n        } catch (Exception e) {\n            System.out.println(\"Error in view Attendance Eligibility: \" + e.getMessage());\n        }\n    }\n\n    public void showProfilePicture(JLabel imageLbl) {\n        Connection con = DatabaseConnection.connect();\n        try {\n            String sql = \"SELECT Profile_pic FROM User WHERE UserName = ?\";\n            PreparedStatement pst = con.prepareStatement(sql);\n            pst.setString(1, Session.loggedInUsername);\n            ResultSet rs = pst.executeQuery();\n\n            if (rs.next()) {\n                String fileName = rs.getString(\"Profile_pic\");\n\n                // If no profile picture set in DB, use default\n                if (fileName == null || fileName.trim().isEmpty()) {\n                    fileName = \"default.png\";\n                }\n\n                String path = \"user_Pro_Pic/\" + fileName;\n                File imageFile = new File(path);\n\n                // If image file does not exist, fallback to default image\n                if (!imageFile.exists()) {\n                    path = \"user_Pro_Pic/default.png\";\n                }\n\n                // Load and Resize Image to fit JLabel\n                ImageIcon imageIcon = new ImageIcon(path);\n\n                // Get JLabel size (designed from GUI builder)\n                int width = imageLbl.getWidth();\n                int height = imageLbl.getHeight();\n\n                // Default size safety check (in case label not ready)\n                if (width == 0 || height == 0) {\n                    width = 150;\n                    height = 150;\n                }\n\n                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);\n                imageLbl.setIcon(new ImageIcon(image));\n                imageLbl.repaint(); // Refresh label to show updated image\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in showProfilePicture: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n\n    public void deleteProfilePicture(JLabel imageLbl) {\n        Connection con = DatabaseConnection.connect();\n        try{\n            String sql = \"UPDATE User SET Profile_pic = NULL WHERE UserName = ?\";\n            PreparedStatement pst = con.prepareStatement(sql);\n            pst.setString(1, Session.loggedInUsername);\n\n            int result = pst.executeUpdate();\n\n            if (result > 0) {\n                // Set default image after deletion\n                String path = \"user_Pro_Pic/default.png\";\n\n                // Get label size\n                int width = imageLbl.getWidth();\n                int height = imageLbl.getHeight();\n\n                if (width == 0 || height == 0) {\n                    width = 150;\n                    height = 150;\n                }\n\n                ImageIcon imageIcon = new ImageIcon(path);\n                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);\n                imageLbl.setIcon(new ImageIcon(image));\n                imageLbl.repaint();  // Refresh label\n\n                System.out.println(\"Profile picture deleted successfully.\");\n            } else {\n                System.out.println(\"No profile picture was found or username invalid.\");\n            }\n\n        } catch (Exception e) {\n            System.out.println(\"Error in deleteProfilePicture: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n\n    public List<String> getAllCourseCodes() {\n        List<String> courseCodes = new ArrayList<>();\n        Connection con = DatabaseConnection.connect();\n        try {\n            String sql = \"SELECT Course_code FROM Course\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            while (rs.next()) {\n                courseCodes.add(rs.getString(\"Course_code\"));\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in get All CourseCodes: \" + e.getMessage());\n        }\n        return courseCodes;\n    }\n\n    // ************* Course materials **********************\n\n    private boolean listenerAdded = false;\n\n    public void viewCourseMaterials(String courseCode) {\n        Connection con = DatabaseConnection.connect();\n        try{\n            String sql = \"SELECT Material_id,Course_code,Lec_id, file_path, uploaded_on FROM lecture_materials WHERE Course_code = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, courseCode);\n            ResultSet rs = pstmt.executeQuery();\n\n            DefaultTableModel model = new DefaultTableModel() {\n                @Override\n                public boolean isCellEditable(int row, int column) {     // make jtable uneditable\n                    return false;\n                }\n            };\n            model.addColumn(\"Material ID\");\n            model.addColumn(\"Course Code\");\n            model.addColumn(\"Lecturer ID\");\n            model.addColumn(\"File Path\");\n            model.addColumn(\"Uploaded On\");\n\n            while (rs.next()) {\n                model.addRow(new Object[]{\n                        rs.getString(\"Material_id\"),\n                        rs.getString(\"Course_code\"),\n                        rs.getString(\"Lec_id\"),\n                        rs.getString(\"file_path\"),\n                        rs.getTimestamp(\"uploaded_on\")\n                });\n            }\n\n            Course_materials.setModel(model);\n            Course_materials.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\n            if (!listenerAdded) {\n                Course_materials.addMouseListener(new MouseAdapter() {\n                    public void mouseClicked(MouseEvent e) {\n                        int row = Course_materials.rowAtPoint(e.getPoint());\n                        int col = Course_materials.columnAtPoint(e.getPoint());\n\n                        if (row >= 0 && col == 3) {\n                            String filePath = Course_materials.getValueAt(row, col).toString();\n                            openMaterial(filePath);\n                        }\n                    }\n                });\n                listenerAdded = true;\n            }\n\n        } catch (Exception e) {\n            System.out.println(\"Error in view Course Materials: \" + e.getMessage());\n        }\n    }\n\n    private void openMaterial(String filePath) {\n        File file = new File(filePath);\n        if (file.exists()) {\n            try {\n                Desktop.getDesktop().open(file);\n            } catch (IOException e) {\n                JOptionPane.showMessageDialog(mainPanel, \"Error opening the file: \" + e.getMessage());\n            }\n        } else {\n            JOptionPane.showMessageDialog(mainPanel, \"File does not exist.\");\n        }\n    }\n\n    private void downloadMaterial(String sourcePath) {\n        JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Save As\");\n        fileChooser.setSelectedFile(new File(new File(sourcePath).getName())); // Default name\n\n        int userSelection = fileChooser.showSaveDialog(mainPanel);\n\n        if (userSelection == JFileChooser.APPROVE_OPTION) {\n            File destinationFile = fileChooser.getSelectedFile();\n            try {\n                Files.copy(Paths.get(sourcePath), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n                JOptionPane.showMessageDialog(mainPanel, \"File downloaded to: \" + destinationFile.getAbsolutePath());\n            } catch (IOException e) {\n                e.printStackTrace();\n                JOptionPane.showMessageDialog(mainPanel, \"Error downloading file: \" + e.getMessage());\n            }\n        }\n    }\n\n\n    public static void main(String[] args) {\n        new StuHome();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaMiniProject/src/student/StuHome.java b/JavaMiniProject/src/student/StuHome.java
--- a/JavaMiniProject/src/student/StuHome.java	(revision 8bb9aa6a7b9e886a50aed4fc1bcb9dc6eb593ba9)
+++ b/JavaMiniProject/src/student/StuHome.java	(date 1745659873666)
@@ -1,5 +1,6 @@
 package student;
 
+import Admin.ViewUserProfiles;
 import database.DatabaseConnection;
 import database.Session;
 
@@ -248,6 +249,11 @@
             public void actionPerformed(ActionEvent e) {
                 new ShowCAEligibility();
                 dispose();
+//                ShowCAEligibility showCAEligibility = new ShowCAEligibility(cardMainPanel, "cardMain");
+//                cardMainPanel.add(showCAEligibility, "showCAEligibilityCard");
+//
+//                CardLayout cl = (CardLayout) cardMainPanel.getLayout();
+//                cl.show(coursesCard, "showCAEligibilityCard");
             }
         });
         selectAttCourseCombo.addActionListener(new ActionListener() {
Index: JavaMiniProject/src/Admin/ViewUserProfiles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Admin;\n\nimport javax.swing.*;\nimport database.DatabaseConnection;\nimport javax.swing.table.DefaultTableModel;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.sql.*;\nimport java.awt.CardLayout;\n\npublic class ViewUserProfiles extends JFrame{\n    public JPanel Mainpanel;\n    private JPanel userdetailpanel;\n    private JTable usertable;\n    private JButton deleteButton;\n    private JTextField username;\n    private JButton clearButton;\n    private JButton exitButton;\n    private JPanel parentCardPanel;\n    private String returnCardName;\n\n\n    public ViewUserProfiles(JPanel cardpanel, String returnToCard) {\n\n//        setContentPane(Mainpanel);\n//        setTitle(\"View User Profiles\");\n//        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\n//        setLocationRelativeTo(null);\n//        setSize(1000, 800);\n//        setVisible(true);\n\n        this.parentCardPanel = cardpanel;\n        this.returnCardName = returnToCard;\n\n        loadUserTable(); // Load the table when the panel is initialized\n\n        deleteButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String usernameToDelete = username.getText().trim();\n                deleteUser(usernameToDelete);\n\n            }\n        });\n        clearButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                clearFields();\n            }\n        });\n        exitButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                CardLayout cl = (CardLayout) parentCardPanel.getLayout();\n                cl.show(parentCardPanel, returnCardName);\n                new AdHome(); // go back to admin home\n//                dispose();\n            }\n        });\n    }\n\n    public void loadUserTable() {\n        Connection conn = DatabaseConnection.connect();\n        if (conn != null) {\n            try {\n                String sql = \"SELECT * FROM user\"; // Change 'users' to your actual table name\n                PreparedStatement stmt = conn.prepareStatement(sql);\n                ResultSet rs = stmt.executeQuery();\n\n                // Get metadata to build column names dynamically\n                ResultSetMetaData metaData = rs.getMetaData();\n                int columnCount = metaData.getColumnCount();\n\n                // Table model\n                DefaultTableModel model = new DefaultTableModel();\n\n                // Add column names\n                for (int i = 1; i <= columnCount; i++) {\n                    model.addColumn(metaData.getColumnName(i));\n                }\n\n                // Add rows\n                while (rs.next()) {\n                    Object[] row = new Object[columnCount];\n                    for (int i = 1; i <= columnCount; i++) {\n                        row[i - 1] = rs.getObject(i);\n                    }\n                    model.addRow(row);\n                }\n\n                // Set model to the JTable\n                usertable.setModel(model);\n\n                // Optional: auto resize columns\n                usertable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\n\n                // Close connection\n                rs.close();\n                stmt.close();\n                conn.close();\n            } catch (SQLException e) {\n                JOptionPane.showMessageDialog(null, \"Error loading user data: \" + e.getMessage());\n                e.printStackTrace();\n            }\n        } else {\n            JOptionPane.showMessageDialog(null, \"Database connection failed.\");\n        }\n    }\n\n    private void selectUserInTable(String usernameToFind) {\n        DefaultTableModel model = (DefaultTableModel) usertable.getModel();\n        for (int i = 0; i < model.getRowCount(); i++) {\n            if (usernameToFind.equals(model.getValueAt(i, 0))) { // assuming username is in column 0\n                usertable.setRowSelectionInterval(i, i);\n                break;\n            }\n        }\n    }\n\n    private void deleteUser(String usernameToDelete) {\n        if (usernameToDelete == null || usernameToDelete.trim().isEmpty()) {\n            JOptionPane.showMessageDialog(null, \"Please enter a username.\");\n            return;\n        }\n\n        Connection conn = DatabaseConnection.connect();\n        if (conn != null) {\n            try {\n                String sql = \"DELETE FROM user WHERE username = ?\";\n                PreparedStatement stmt = conn.prepareStatement(sql);\n                stmt.setString(1, usernameToDelete);\n                int rowsDeleted = stmt.executeUpdate();\n\n                if (rowsDeleted > 0) {\n                    JOptionPane.showMessageDialog(null, \"User '\" + usernameToDelete + \"' deleted successfully.\");\n                    loadUserTable(); // Refresh table\n                } else {\n                    JOptionPane.showMessageDialog(null, \"User not found.\");\n                }\n\n                stmt.close();\n                conn.close();\n            } catch (SQLException e) {\n                JOptionPane.showMessageDialog(null, \"Error deleting user: \" + e.getMessage());\n                e.printStackTrace();\n            }\n        } else {\n            JOptionPane.showMessageDialog(null, \"Database connection failed.\");\n        }\n    }\n\n    private void clearFields() {\n        username.setText(\"\");\n    }\n\n\n\n//    public static void main(String[] args) {\n//        SwingUtilities.invokeLater(() -> {\n//            JFrame frame = new JFrame(\"View User Profiles\");\n//            ViewUserProfiles view = new ViewUserProfiles();\n//            frame.setContentPane(view.Mainpanel); // this must match the GUI-designed panel\n//            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n//            frame.setSize(800, 600);\n//            frame.setLocationRelativeTo(null);\n//            frame.setVisible(true);\n//        });\n//    }\n\n\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaMiniProject/src/Admin/ViewUserProfiles.java b/JavaMiniProject/src/Admin/ViewUserProfiles.java
--- a/JavaMiniProject/src/Admin/ViewUserProfiles.java	(revision 8bb9aa6a7b9e886a50aed4fc1bcb9dc6eb593ba9)
+++ b/JavaMiniProject/src/Admin/ViewUserProfiles.java	(date 1745656067536)
@@ -3,10 +3,10 @@
 import javax.swing.*;
 import database.DatabaseConnection;
 import javax.swing.table.DefaultTableModel;
+import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.sql.*;
-import java.awt.CardLayout;
 
 public class ViewUserProfiles extends JFrame{
     public JPanel Mainpanel;
@@ -15,7 +15,6 @@
     private JButton deleteButton;
     private JTextField username;
     private JButton clearButton;
-    private JButton exitButton;
     private JPanel parentCardPanel;
     private String returnCardName;
 
@@ -48,15 +47,7 @@
                 clearFields();
             }
         });
-        exitButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                CardLayout cl = (CardLayout) parentCardPanel.getLayout();
-                cl.show(parentCardPanel, returnCardName);
-                new AdHome(); // go back to admin home
-//                dispose();
-            }
-        });
+
     }
 
     public void loadUserTable() {
Index: JavaMiniProject/src/student/ShowCAEligibility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package student;\n\nimport database.DatabaseConnection;\nimport database.Session;\n\nimport javax.swing.*;\nimport javax.swing.table.DefaultTableModel;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.util.Arrays;\n\n\npublic class ShowCAEligibility extends JFrame {\n    private JLabel eligibilityLbl;\n    private JPanel mainPanel;\n    private JPanel eligibilityPanel;\n    private JTable eligibilityTable;\n    private JButton exitBtn;\n    private JScrollPane eligibilityScrollPane;\n\n    public ShowCAEligibility() {\n        setContentPane(mainPanel);\n        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n        setTitle(\"CA Eligibility\");\n        setSize(2000, 1000);\n        setLocationRelativeTo(null);\n        setVisible(true);\n\n        String[] caEligibility = {\"Course Code\", \"Course Name\", \"Eligibility Status\"};\n        DefaultTableModel model = new DefaultTableModel(null, caEligibility);\n\n        eligibilityTable.setModel(model);\n\n        checkCAEligibility();\n        exitBtn.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new StuHome();\n                dispose();\n            }\n        });\n    }\n\n    public void checkCAEligibility(){\n        Connection con = DatabaseConnection.connect();\n        try{\n            String sql = \"SELECT m.Stu_id, m.Course_code,c.Course_name, m.Quiz_01, m.Quiz_02, m.Quiz_03, m.Quiz_04, m.Assignment_01, m.Assignment_02, m.Mid_theory, m.Mid_practical FROM Marks m JOIN Course c ON m.Course_code = c.Course_code WHERE m.Stu_id = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, Session.loggedInUsername);\n\n            ResultSet rs = pstmt.executeQuery();\n\n            DefaultTableModel tableModel = (DefaultTableModel) eligibilityTable.getModel();\n\n            while (rs.next()) {\n                String stuId = rs.getString(\"Stu_id\");\n                String courseCode = rs.getString(\"Course_code\");\n                String courseName = rs.getString(\"Course_name\");\n\n                Double quiz01 = rs.getDouble(\"Quiz_01\");\n                Double quiz02 = rs.getDouble(\"Quiz_02\");\n                Double quiz03 = rs.getDouble(\"Quiz_03\");\n                Double quiz04 = rs.getDouble(\"Quiz_04\");\n\n\n                double[] quizArray;\n\n                if(courseCode.equals(\"ICT2122\")){\n                    quizArray = new double[]{quiz01, quiz02, quiz03, quiz04};\n                }else {\n                    quizArray = new double[]{quiz01, quiz02, quiz03};\n                }\n\n                Arrays.sort(quizArray);\n\n                double quizTotal;\n                if(courseCode.equals(\"ICT2122\")){\n                    quizTotal = quizArray[3] + quizArray[2] + quizArray[1];\n                    quizTotal = (quizTotal/ 3) * 0.10;\n                }else{\n                    quizTotal = quizArray[2] + quizArray[1];\n                    quizTotal = (quizTotal/ 2) * 0.10;\n                }\n\n                // Assignment\n\n                double ass1 = rs.getDouble(\"Assignment_01\");\n                double ass2 = rs.getDouble(\"Assignment_02\");\n                double assAvg = (ass1 + ass2) / 2;\n\n                double assMarks;\n                if (courseCode.equals(\"ICT2122\")){\n                    assMarks = assAvg * 0.10;\n                }else{\n                    assMarks = assAvg * 0.20;\n                }\n\n                double midTheory = rs.getDouble(\"Mid_theory\");\n                double midPractical = rs.getDouble(\"Mid_practical\");\n                double midAvg = (midTheory + midPractical)/2;\n                double midMarks = midAvg * 0.20;\n\n                double totalCAMarks = quizTotal + assMarks + midMarks;\n\n                double fullCAMark;\n                boolean isEligible = false;\n                if(courseCode.equals(\"ICT2122\") || courseCode.equals(\"ICT2133\") || courseCode.equals(\"ICT2152\")){\n                    fullCAMark = 30;\n                    if(totalCAMarks >= (fullCAMark/2) - 0.5){\n                        isEligible = true;\n                    }\n                }else{\n                    fullCAMark = 40;\n                    if(totalCAMarks >= (fullCAMark/2) - 0.5){\n                        isEligible = true;\n                    }\n                }\n\n                String CAEligibilityStatus;\n                if(isEligible){\n                    CAEligibilityStatus = \"Eligible\";\n                }else {\n                    CAEligibilityStatus = \"Not Eligible\";\n                }\n\n                tableModel.addRow(new Object[] {courseCode, courseName, CAEligibilityStatus});\n\n                if(isEligible) {\n                    System.out.println(\"Student_id: \" + stuId + \" Course_code: \" + courseCode + \" Total CAMarks: \" + String.format(\"%.2f\", totalCAMarks) + \" - Eligible\");\n                } else {\n                    System.out.println(\"Student_id: \" + stuId + \" Course_code: \" + courseCode + \" Total CAMarks: \" + String.format(\"%.2f\", totalCAMarks) + \" - Not Eligible\");\n                }\n\n\n            }\n        }catch (Exception e){\n            System.out.println(\"Error in get Highest Quizes: \" + e.getMessage());\n        }\n    }\n\n    public static void main(String[] args) {\n        new ShowCAEligibility();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaMiniProject/src/student/ShowCAEligibility.java b/JavaMiniProject/src/student/ShowCAEligibility.java
--- a/JavaMiniProject/src/student/ShowCAEligibility.java	(revision 8bb9aa6a7b9e886a50aed4fc1bcb9dc6eb593ba9)
+++ b/JavaMiniProject/src/student/ShowCAEligibility.java	(date 1745659873672)
@@ -5,6 +5,7 @@
 
 import javax.swing.*;
 import javax.swing.table.DefaultTableModel;
+import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.sql.Connection;
@@ -29,6 +30,10 @@
         setLocationRelativeTo(null);
         setVisible(true);
 
+
+
+//        checkCAEligibility();
+
         String[] caEligibility = {"Course Code", "Course Name", "Eligibility Status"};
         DefaultTableModel model = new DefaultTableModel(null, caEligibility);
 
@@ -40,6 +45,8 @@
             public void actionPerformed(ActionEvent e) {
                 new StuHome();
                 dispose();
+//                CardLayout cl = (CardLayout) cardpanel.getLayout();
+//                cl.show(cardpanel, returnToCard);
             }
         });
     }
@@ -141,7 +148,7 @@
         }
     }
 
-    public static void main(String[] args) {
-        new ShowCAEligibility();
-    }
+//    public static void main(String[] args) {
+//        new ShowCAEligibility();
+//    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"8ae815cf-9fa5-4977-835f-5b21a2f02ee3\" name=\"Changes\" comment=\"crs materials updated\">\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/Att_CA.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/Att_CA.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/LecHome.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/LecHome.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/database/DatabaseConnection.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/database/DatabaseConnection.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$10.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$10.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$11.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$11.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$12.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$12.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$13.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$13.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$14.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$14.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$15.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$15.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$16.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$16.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$17.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$17.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$18.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$18.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$19.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$19.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$2.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$20.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$20.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$22.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$22.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$3.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$4.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$4.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$5.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$5.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$6.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$6.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$7.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$7.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$8.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$8.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$9.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$9.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;Hasalapera&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\n  \"selectedUrlAndAccountId\": {\n    \"url\": \"https://github.com/Hasalapera/Java.git\",\n    \"accountId\": \"851966c5-c728-4543-9304-a162c1c561c2\"\n  }\n}]]></component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 7\n}</component>\n  <component name=\"ProjectId\" id=\"2vfC0jspa2Qlh6HVxuOlXRmIbzE\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.AdHome.executor\": \"Run\",\n    \"Application.AddCourse.executor\": \"Run\",\n    \"Application.AddNotices.executor\": \"Run\",\n    \"Application.AddTimeTable.executor\": \"Run\",\n    \"Application.LecHome.executor\": \"Run\",\n    \"Application.ProfileUpdate.executor\": \"Run\",\n    \"Application.ShowCAEligibility.executor\": \"Run\",\n    \"Application.StuHome.executor\": \"Run\",\n    \"Application.StudentManagement.executor\": \"Run\",\n    \"Application.UpdateCourse.executor\": \"Run\",\n    \"Application.UpdateTimeTable.executor\": \"Run\",\n    \"Application.toHome.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"UI_DESIGNER_EDITOR_MODE.PaletteManager.WIDTH\": \"113\",\n    \"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW\": \"true\",\n    \"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH\": \"240\",\n    \"git-widget-placeholder\": \"Testing3.0\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"C:/Users/ASUS/Desktop/New Folder/New folder/Git\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Project\",\n    \"project.structure.proportion\": \"0.0\",\n    \"project.structure.side.proportion\": \"0.0\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CreateClassDialog.RecentsKey\">\n      <recent name=\"Lecture\" />\n    </key>\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\HP\\Desktop\\my java\\JavaMiniProject\\notices\" />\n      <recent name=\"C:\\Users\\HP\\Desktop\\my java\\JavaMiniProject\\src\\Admin\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n    <key name=\"MoveInnerDialog.RECENTS_KEY\">\n      <recent name=\"\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"StudentManagement\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.StudentManagement\" />\n      <module name=\"Workshop\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"main.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.StudentManagement\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-a94e463ab2e7-intellij.indexing.shared.core-IU-243.25659.59\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-IU-243.25659.59\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"8ae815cf-9fa5-4977-835f-5b21a2f02ee3\" name=\"Changes\" comment=\"\" />\n      <created>1744526520616</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1744526520616</updated>\n      <workItem from=\"1744526521691\" duration=\"322000\" />\n      <workItem from=\"1744695138711\" duration=\"33562000\" />\n      <workItem from=\"1744785878940\" duration=\"37625000\" />\n      <workItem from=\"1744834241055\" duration=\"2995000\" />\n      <workItem from=\"1744870262173\" duration=\"37030000\" />\n      <workItem from=\"1744925327722\" duration=\"19000\" />\n      <workItem from=\"1744925644361\" duration=\"20000\" />\n      <workItem from=\"1744951210416\" duration=\"15950000\" />\n      <workItem from=\"1744986970679\" duration=\"3346000\" />\n      <workItem from=\"1745038260843\" duration=\"11155000\" />\n      <workItem from=\"1745050649249\" duration=\"64000\" />\n      <workItem from=\"1745075081510\" duration=\"113000\" />\n      <workItem from=\"1745229141321\" duration=\"16961000\" />\n      <workItem from=\"1745260035637\" duration=\"2477000\" />\n      <workItem from=\"1745263447632\" duration=\"14000\" />\n      <workItem from=\"1745348715033\" duration=\"330000\" />\n      <workItem from=\"1745489850757\" duration=\"8054000\" />\n      <workItem from=\"1745504247280\" duration=\"13613000\" />\n      <workItem from=\"1745518115011\" duration=\"15331000\" />\n      <workItem from=\"1745545255864\" duration=\"4000\" />\n      <workItem from=\"1745545277119\" duration=\"1252000\" />\n      <workItem from=\"1745546607029\" duration=\"60000\" />\n      <workItem from=\"1745557983542\" duration=\"8912000\" />\n      <workItem from=\"1745569185966\" duration=\"14048000\" />\n      <workItem from=\"1745602198145\" duration=\"953000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"dcbvv\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1744836790828</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1744836790828</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"dcbvv\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1744836912129</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1744836912129</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1744922099369</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1744922099369</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1745050504127</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1745050504127</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1745434035741</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1745434035741</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"crs materials updated\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1745437580111</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1745437580111</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"crs materials updated\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1745564119607</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1745564119607</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"origin/Navodya\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"dcbvv\" />\n    <MESSAGE value=\"ok\" />\n    <MESSAGE value=\"crs materials updated\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"crs materials updated\" />\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8bb9aa6a7b9e886a50aed4fc1bcb9dc6eb593ba9)
+++ b/.idea/workspace.xml	(date 1745659873743)
@@ -5,9 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="8ae815cf-9fa5-4977-835f-5b21a2f02ee3" name="Changes" comment="crs materials updated">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/Att_CA.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/Att_CA.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/LecHome.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/Lecture/LecHome.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/database/DatabaseConnection.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/database/DatabaseConnection.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/ShowCAEligibility$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/ShowCAEligibility$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/ShowCAEligibility.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/ShowCAEligibility.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$10.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$10.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$11.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$11.class" afterDir="false" />
@@ -21,6 +22,7 @@
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$19.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$19.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$2.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$20.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$20.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$21.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$21.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$22.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$22.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$3.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$4.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$4.class" afterDir="false" />
@@ -29,6 +31,12 @@
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$7.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$7.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$8.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$8.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$9.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome$9.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome.class" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/out/production/Workshop/student/StuHome.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/src/Admin/ViewUserProfiles.form" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/src/Admin/ViewUserProfiles.form" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/src/Admin/ViewUserProfiles.java" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/src/Admin/ViewUserProfiles.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/src/database/DatabaseConnection.java" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/src/database/DatabaseConnection.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/src/student/ShowCAEligibility.java" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/src/student/ShowCAEligibility.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/JavaMiniProject/src/student/StuHome.java" beforeDir="false" afterPath="$PROJECT_DIR$/JavaMiniProject/src/student/StuHome.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -56,12 +64,12 @@
     &quot;assignee&quot;: &quot;Hasalapera&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/Hasalapera/Java.git",
-    "accountId": "851966c5-c728-4543-9304-a162c1c561c2"
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/Hasalapera/Java.git&quot;,
+    &quot;accountId&quot;: &quot;851966c5-c728-4543-9304-a162c1c561c2&quot;
   }
-}]]></component>
+}</component>
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="CurrentFile" />
   </component>
@@ -91,7 +99,7 @@
     "RunOnceActivity.git.unshallow": "true",
     "UI_DESIGNER_EDITOR_MODE.PaletteManager.WIDTH": "113",
     "UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW": "true",
-    "UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH": "240",
+    "UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH": "261",
     "git-widget-placeholder": "Testing3.0",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "C:/Users/ASUS/Desktop/New Folder/New folder/Git",
@@ -180,7 +188,7 @@
       <workItem from="1745546607029" duration="60000" />
       <workItem from="1745557983542" duration="8912000" />
       <workItem from="1745569185966" duration="14048000" />
-      <workItem from="1745602198145" duration="953000" />
+      <workItem from="1745602198145" duration="7588000" />
     </task>
     <task id="LOCAL-00001" summary="dcbvv">
       <option name="closed" value="true" />
@@ -238,7 +246,15 @@
       <option name="project" value="LOCAL" />
       <updated>1745564119607</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="crs materials updated">
+      <option name="closed" value="true" />
+      <created>1745604795768</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1745604795768</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: JavaMiniProject/src/Admin/ViewUserProfiles.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<form xmlns=\"http://www.intellij.com/uidesigner/form/\" version=\"1\" bind-to-class=\"Admin.ViewUserProfiles\">\n  <grid id=\"27dc6\" binding=\"Mainpanel\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n    <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n    <constraints>\n      <xy x=\"20\" y=\"20\" width=\"807\" height=\"400\"/>\n    </constraints>\n    <properties/>\n    <border type=\"none\"/>\n    <children>\n      <grid id=\"1b2ef\" binding=\"userdetailpanel\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"5\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n        <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n        <constraints>\n          <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n        </constraints>\n        <properties>\n          <background color=\"-16758099\"/>\n        </properties>\n        <border type=\"none\"/>\n        <children>\n          <scrollpane id=\"1b97e\">\n            <constraints>\n              <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"5\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties/>\n            <border type=\"none\"/>\n            <children>\n              <component id=\"463d9\" class=\"javax.swing.JTable\" binding=\"usertable\">\n                <constraints/>\n                <properties/>\n              </component>\n            </children>\n          </scrollpane>\n          <component id=\"6d6aa\" class=\"javax.swing.JButton\" binding=\"deleteButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"1\" column=\"4\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"40\"/>\n                <maximum-size width=\"150\" height=\"40\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font size=\"20\"/>\n              <text value=\"Delete\"/>\n            </properties>\n          </component>\n          <component id=\"b7944\" class=\"javax.swing.JTextField\" binding=\"username\">\n            <constraints>\n              <grid row=\"1\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"200\" height=\"50\"/>\n                <maximum-size width=\"200\" height=\"50\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"a8292\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"4\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font name=\"Inter\" size=\"24\" style=\"1\"/>\n              <text value=\"Enter user name\"/>\n            </properties>\n          </component>\n          <component id=\"ec25a\" class=\"javax.swing.JButton\" binding=\"exitButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"2\" column=\"4\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"40\"/>\n                <maximum-size width=\"150\" height=\"40\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font size=\"18\"/>\n              <text value=\"Exit\"/>\n            </properties>\n          </component>\n          <component id=\"192bd\" class=\"javax.swing.JButton\" binding=\"clearButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"2\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"40\"/>\n                <maximum-size width=\"150\" height=\"40\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font size=\"18\" style=\"1\"/>\n              <text value=\"clear\"/>\n            </properties>\n          </component>\n        </children>\n      </grid>\n      <component id=\"c58c2\" class=\"javax.swing.JLabel\">\n        <constraints>\n          <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n        </constraints>\n        <properties>\n          <font name=\"Inter\" size=\"26\" style=\"1\"/>\n          <text value=\"All User Details\"/>\n        </properties>\n      </component>\n    </children>\n  </grid>\n</form>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaMiniProject/src/Admin/ViewUserProfiles.form b/JavaMiniProject/src/Admin/ViewUserProfiles.form
--- a/JavaMiniProject/src/Admin/ViewUserProfiles.form	(revision 8bb9aa6a7b9e886a50aed4fc1bcb9dc6eb593ba9)
+++ b/JavaMiniProject/src/Admin/ViewUserProfiles.form	(date 1745656067542)
@@ -61,21 +61,9 @@
               <text value="Enter user name"/>
             </properties>
           </component>
-          <component id="ec25a" class="javax.swing.JButton" binding="exitButton" default-binding="true">
-            <constraints>
-              <grid row="2" column="4" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="0" fill="1" indent="0" use-parent-layout="false">
-                <preferred-size width="150" height="40"/>
-                <maximum-size width="150" height="40"/>
-              </grid>
-            </constraints>
-            <properties>
-              <font size="18"/>
-              <text value="Exit"/>
-            </properties>
-          </component>
           <component id="192bd" class="javax.swing.JButton" binding="clearButton" default-binding="true">
             <constraints>
-              <grid row="2" column="2" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false">
+              <grid row="2" column="4" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false">
                 <preferred-size width="150" height="40"/>
                 <maximum-size width="150" height="40"/>
               </grid>
