Index: src/database/DatabaseConnection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;\n\nimport java.sql.*;\n\npublic class DatabaseConnection {\n    private static final String URL = \"jdbc:mysql://localhost:3306/techlms\";\n    private static final String USER = \"root\";\n    private static final String PASSWORD = \"\";\n\n    public static Connection connect() {\n        try {\n            return DriverManager.getConnection(URL, USER, PASSWORD);\n        } catch (SQLException e) {\n            System.out.println(e.getMessage());\n            e.printStackTrace();\n            return null;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/database/DatabaseConnection.java b/src/database/DatabaseConnection.java
--- a/src/database/DatabaseConnection.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/database/DatabaseConnection.java	(date 1745322647204)
@@ -5,7 +5,7 @@
 public class DatabaseConnection {
     private static final String URL = "jdbc:mysql://localhost:3306/techlms";
     private static final String USER = "root";
-    private static final String PASSWORD = "";
+    private static final String PASSWORD = "1234";
 
     public static Connection connect() {
         try {
Index: src/student/StuHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package student;\n\nimport database.DatabaseConnection;\nimport database.Session;\n\nimport javax.swing.*;\nimport javax.swing.table.DefaultTableModel;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n//import net.proteanit.sql.DbUtils;\n\n\npublic class StuHome extends JFrame {\n    private JPanel mainPanel;\n    private JPanel headingPanel;\n    private JPanel btnPanel;\n    private JPanel cardMainPanel;\n    private JButton profileButton;\n    private JButton coursesButton;\n    private JButton gradeAndGPAButton;\n    private JButton attendanceButton;\n    private JButton medicalButton;\n    private JButton timeTableButton;\n    private JTextField fNameTxt;\n    private JTextField lNameTxt;\n    private JTextField addressTxt;\n    private JTextField emailTxt;\n    private JTextField pNoTxt;\n    private JTextField roleTxt;\n    private JPanel imgMainPanel;\n    private JPanel imgPanel;\n    private JLabel roleLbl;\n    private JLabel pNoLbl;\n    private JLabel emailLbl;\n    private JLabel addressLbl;\n    private JLabel lNameLbl;\n    private JLabel fNameLbl;\n    private JPanel detailPanel;\n    private JLabel profileHeadingLbl;\n    private JPanel profileCard;\n    private JLabel imageLbl;\n    private JButton noticeButton;\n    private JLabel stuManaSysLbl;\n    private JLabel FoTLbl;\n    private JPanel coursesCard;\n    private JLabel CoursesHeadingLbl;\n    private JComboBox comboBoxCourses;\n    private JLabel selectCourseLbl;\n    private JPanel gradeGPACard;\n    private JLabel gradeGPAHeadingLbl;\n    private JComboBox selectCrsComboBox;\n    private JTextField yourGradeTxt;\n    private JTextField sgpaTxt;\n    private JTextArea gradetxtArea;\n    private JPanel gradeTxtAreaPanel;\n    private JLabel yourGradeLbl;\n    private JLabel selectCrsLbl;\n    private JLabel sgpaLbl;\n    private JButton logOutButton;\n    private JPanel attendanceCard;\n    private JPanel medicalCard;\n    private JPanel timeTableCard;\n    private JPanel noticeCard;\n    private JLabel attendanceHeadingLbl;\n    private JLabel medicalHeadingLbl;\n    private JLabel noticeHeadingLbl;\n    private JComboBox selectAttCourseCombo;\n    private JComboBox selectCrsTypeCombo;\n    private JLabel selectAttCourseLbl;\n    private JButton clearButton;\n    private JButton OKButton;\n    private JPanel attViewPanel;\n    private JTable mediDetailsTable;\n    private JPanel mediDetailsTblPanel;\n    private JComboBox selectTitleCombo;\n    private JLabel selectTitleLbl;\n    private JLabel timeTableHeadingLbl;\n    private JPanel noticeTxtAreaPanel;\n    private JTextArea noticeTxtArea;\n    private JPanel timeTablePanel;\n    private JTable timeTableTable;\n    private JTable attTable;\n    private JScrollPane attScrollPane;\n    private JScrollPane mediScrollPane;\n    private JScrollPane noticeScrollPane;\n    private JScrollPane timeTableScrollPane;\n    private JButton updateProfileButton;\n    private JTable table1;\n    private JButton updateTimeTableButton;\n    private JButton addButton;\n    private JButton checkEligibilityButton;\n    private JButton checkAttendanceEligibilityButton;\n    private JButton deleteProfilePictureButton;\n    private JButton okButtonCourses;\n    private JPanel displayDetailsPanel;\n\n    private JPanel displayDetailsPanel;\n\n\n//    private String[] courseCodes = {\n//            \"ICT2113\",  // Index 0\n//            \"ICT2122\",  // Index 1\n//            \"ICT2132\",  // Index 2\n//            \"ICT2142\",  // Index 3\n//            \"ICT2152\"   // Index 4\n//    };\n\n    Connection con;\n    PreparedStatement pst;\n    ResultSet rs;\n\n\n    public StuHome() {\n//        JFrame frame = new JFrame(\"Student Management System - Home\");\n        setContentPane(mainPanel);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setTitle(\"Student Home\");\n        setSize(2000, 1000);\n        setLocationRelativeTo(null);\n        setVisible(true);\n\n        displayProfileDetails();\n        showProfilePicture(imageLbl);\n//        getAllAttendanceCounts();\n\n        CardLayout cardLayout = (CardLayout) (cardMainPanel.getLayout());\n\n        // Button actions to switch cards\n        profileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                System.out.println(\"hi\");\n                cardLayout.show(cardMainPanel, \"profileCard\");\n            }\n        });\n\n        coursesButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"coursesCard\");\n\n            }\n        });\n\n        gradeAndGPAButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"gradeGPACard\");\n                getSGPA();\n            }\n        });\n\n        attendanceButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"attendanceCard\");\n            }\n        });\n\n        medicalButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"medicalCard\");\n\n                String[] mediStatus = {\"Medical_id\", \"Course_code\", \"Course_name\", \"Week_No\", \"Day_No\", \"Status\"};\n                DefaultTableModel model = new DefaultTableModel(null, mediStatus);\n                mediDetailsTable.setModel(model);\n                viewMedicalStatus();\n            }\n        });\n\n        timeTableButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"timeTableCard\");\n                showTimeTable();\n            }\n        });\n\n        noticeButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"noticeCard\");\n                addNoticeTitlesToComboBox();\n            }\n        });\n\n\n        updateProfileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new UpdateStudentProfile();\n                dispose();\n            }\n        });\n        logOutButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String password = \"\"                        ;\n                new Login();\n            }\n        });\n        selectCrsComboBox.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = selectCrsComboBox.getSelectedIndex();\n\n//                String selectedCourseCode = courseCodes[selectedIndex];\n                List<String> courseCodes = getAllCourseCodes();\n\n                getGrade(courseCodes.get(selectedIndex));\n            }\n        });\n\n        selectTitleCombo.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                // Get the selected title\n                String selectedTitle = (String) selectTitleCombo.getSelectedItem();\n                System.out.println(\"Selected Title: \" + selectedTitle);\n                // Display the content for the selected title\n                if (selectedTitle != null) {\n                    displayNoticeContent(selectedTitle);\n                }\n            }\n        });\n        checkEligibilityButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new ShowCAEligibility();\n//                dispose();\n            }\n        });\n        selectAttCourseCombo.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = selectAttCourseCombo.getSelectedIndex();\n//                String selectedCourseCode = courseCodes[selectedIndex];\n                List<String> selectedCourseCodes = getAllCourseCodes();\n                System.out.println(\"Selected CourseCode: \" + selectedCourseCodes.get(selectedIndex));\n            }\n        });\n\n        OKButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = selectAttCourseCombo.getSelectedIndex();\n                if (selectedIndex >= 0) {\n//                    String selectedCourseCode = courseCodes[selectedIndex];\n                    List<String> selectedCourseCodes = getAllCourseCodes();\n                    System.out.println(\"Selected CourseCode: \" + selectedCourseCodes.get(selectedIndex));\n                    viewAttendance(selectedCourseCodes.get(selectedIndex));\n                }else {\n                    JOptionPane.showMessageDialog(null, \"Please select a course\");\n                }\n            }\n        });\n        clearButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                //Reset ComboBox selection to no selection\n                selectAttCourseCombo.setSelectedIndex(0);  // or 0 if you want the first item\n\n                //Clear the table model (remove all data)\n                DefaultTableModel model = new DefaultTableModel(\n                        new String[]{\"Attendance Id\", \"Lecture Hour\", \"Week No\", \"Day No\", \"Status\", \"Course Type\"}, 0\n                );\n                attTable.setModel(model);\n            }\n        });\n//        checkAttendanceEligibilityButton.addActionListener(new ActionListener() {\n//            @Override\n//            public void actionPerformed(ActionEvent e) {\n//\n//            }\n//        });\n        checkAttendanceEligibilityButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new ShowAttendanceEligibility();\n                dispose();\n            }\n        });\n        deleteProfilePictureButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                deleteProfilePicture(imageLbl);\n                deleteProfilePictureButton.setEnabled(false);\n            }\n        });\n\n\n        comboBoxCourses.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int SelectedIndex = comboBoxCourses.getSelectedIndex();\n                List<String> selectedCourseCodeForMaterials = getAllCourseCodes();\n                System.out.println(\"Selected CourseCode: \" + selectedCourseCodeForMaterials.get(SelectedIndex));\n//                getGrade(selectedCourseCodeForMaterials.get(SelectedIndex));\n            }\n        });\n        okButtonCourses.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = comboBoxCourses.getSelectedIndex();\n                if (selectedIndex >= 0) {\n//                    String selectedCourseCode = courseCodes[selectedIndex];\n                    List<String> selectedCourseCodeForMaterials = getAllCourseCodes();\n                    String selectedCourseCode = selectedCourseCodeForMaterials.get(selectedIndex);\n                    System.out.println(\"Selected CourseCode: \" + selectedCourseCodeForMaterials.get(selectedIndex));\n                    viewCourseMaterials(selectedCourseCode);\n                }else {\n                    JOptionPane.showMessageDialog(null, \"Please select a course\");\n                }\n            }\n        });\n    }\n\n    // ******* Grade & GPA *****************\n\n    public void getSGPA(){\n        Connection con = null;\n        CallableStatement cstmt = null;\n        ResultSet rs = null;\n\n        try{\n            con = DatabaseConnection.connect();\n            String sql = \"{CALL Calculate_SGPA_For_Student(?)}\";\n            cstmt = con.prepareCall(sql);\n\n            cstmt.setString(1, Session.loggedInUsername);\n\n            rs = cstmt.executeQuery();\n\n            if(rs.next()){\n                double sgpa = rs.getDouble(\"SGPA\");\n                System.out.println(\"SGPA retrieved: \" + sgpa);\n\n                sgpaTxt.setText(String.format(\"%.2f\", sgpa));\n            }else{\n                JOptionPane.showMessageDialog(null, \"No SGPA Found\");\n            }\n\n        } catch (Exception e) {\n            System.out.println(\"error\");\n        }finally {\n            // Close resources properly\n            try {\n                if (rs != null) rs.close();\n                if (cstmt != null) cstmt.close();\n                if (con != null) con.close();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public void getGrade(String courseCode){\n        Connection con = null;\n        CallableStatement cstmt = null;\n        ResultSet rs = null;\n\n        try {\n            con = DatabaseConnection.connect();\n//            String sql = \"{CALL GetGradeByStudentAndCourse (?, ?)}\";\n            String sql = \"{CALL Get_Grade_By_Course_And_Student(?, ?)}\";\n            cstmt = con.prepareCall(sql);\n\n            cstmt.setString(1, courseCode);\n            cstmt.setString(2, Session.loggedInUsername);\n\n            rs = cstmt.executeQuery();\n\n            if(rs.next()){\n                String grade = rs.getString(\"Grade\");\n                yourGradeTxt.setText(grade);\n\n                System.out.println(\"Course Code: \" + courseCode + \" | Grade: \" + grade); // Print to console\n\n            } else {\n                JOptionPane.showMessageDialog(null, \"No Grades Found\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in getting grade: \" + e.getMessage());\n            e.printStackTrace();  // This will print the full stack trace to the console\n        } finally {\n            // Close resources to avoid memory leaks\n            try {\n                if (rs != null) rs.close();\n                if (cstmt != null) cstmt.close();\n                if (con != null) con.close();\n            } catch (SQLException se) {\n                System.out.println(\"Error closing resources: \" + se.getMessage());\n            }\n        }\n    }\n\n    // ******* Display Profile Details *****************\n\n    public void displayProfileDetails(){\n        con = DatabaseConnection.connect();\n\n        try {\n            String sql = \"SELECT FName, LName, Address, Email, Phone_No, Role FROM User WHERE UserName = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n\n            pstmt.setString(1, Session.loggedInUsername);\n\n            ResultSet rs = pstmt.executeQuery();\n\n            if(rs.next()){\n                String fName1 = rs.getString(\"FName\");\n                fNameTxt.setText(fName1);\n                System.out.println(\"fName1: \" + fName1);\n                String lName1 = rs.getString(\"LName\");\n                lNameTxt.setText(lName1);\n                System.out.println(\"lName1: \" + lName1);\n                String address1 = rs.getString(\"Address\");\n                addressTxt.setText(address1);\n                System.out.println(\"address1: \" + address1);\n                String email1 = rs.getString(\"Email\");\n                emailTxt.setText(email1);\n                System.out.println(\"email1: \" + email1);\n                String phoneNo1 = rs.getString(\"Phone_No\");\n                pNoTxt.setText(phoneNo1);\n                System.out.println(\"phoneNo1: \" + phoneNo1);\n                String role1 = rs.getString(\"Role\");\n                roleTxt.setText(role1);\n                System.out.println(\"role1: \" + role1);\n\n            }else {\n                JOptionPane.showMessageDialog(null, \"No Profile Found\");\n            }\n        }catch (Exception e){\n            System.out.println(\"Error in display Profile Details: \" + e.getMessage());\n        }\n    }\n\n    // ******* Time Table *****************\n\n    public void showTimeTable() {\n        con = DatabaseConnection.connect();\n\n        try {\n            String sql = \"SELECT * FROM TimeTable\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            String[] columnNames = {\"Department\", \"Course_Code\", \"Course_Name\", \"Time\", \"Day\"};\n            DefaultTableModel model = new DefaultTableModel(null, columnNames);\n\n            while (rs.next()) {\n                // Get the day number from the database\n                int dayNumber = rs.getInt(\"Day\");\n\n                // Map the day number to the corresponding weekday name\n                String dayName = mapDayNumberToName(dayNumber);\n\n                model.addRow(new Object[]{\n                        rs.getString(\"Department\"),\n                        rs.getString(\"Course_Code\"),\n                        rs.getString(\"Course_Name\"),\n                        rs.getString(\"Time\"),\n                        dayName\n                });\n            }\n            timeTableTable.setModel(model);\n        } catch (Exception e) {\n            System.out.println(\"Error in display Time Table: \" + e.getMessage());\n        }\n    }\n\n    // Map day numbers to weekday names\n    private String mapDayNumberToName(int dayNumber) {\n        switch (dayNumber) {\n            case 1: return \"Monday\";\n            case 2: return \"Tuesday\";\n            case 3: return \"Wednesday\";\n            case 4: return \"Thursday\";\n            case 5: return \"Friday\";\n            default: return \"Unknown\";\n        }\n    }\n\n    // Add Notice titles to the combo box *****************\n\n    public void addNoticeTitlesToComboBox(){\n        con = DatabaseConnection.connect();\n\n        try{\n            Connection conn = DatabaseConnection.connect();\n            String sql = \"SELECT * FROM Notice\";\n            PreparedStatement pstmt = conn.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            selectTitleCombo.removeAllItems();\n\n            while (rs.next()) {\n                String title = rs.getString(\"Title\");\n                selectTitleCombo.addItem(title); // Add each title to the combo box\n                System.out.println(\"Title: \" + title);\n            }\n        }catch(Exception e){\n            System.out.println(\"Error in add Notice Titles To ComboBox: \" + e.getMessage());\n        }\n    }\n\n    public void displayNoticeContent(String title) {\n        try {\n            noticeTxtArea.setText(\"\");\n            // Establish connection to the database to get the NoticeId based on the title\n            Connection con = DatabaseConnection.connect();\n            String sql = \"SELECT Notice_id FROM Notice WHERE Title = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, title);\n            ResultSet rs = pstmt.executeQuery();\n\n            if (rs.next()) {\n                String noticeId = rs.getString(\"Notice_id\");\n\n                // Read content from the corresponding text file (e.g., notice_1.txt)\n                File noticeFile = new File(\"notices/notice_\" + noticeId + \".txt\");\n                System.out.println(\"noticeFile: \" + noticeId+ \" Displayed\");\n                BufferedReader reader = new BufferedReader(new FileReader(noticeFile));\n                StringBuilder content = new StringBuilder();\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    content.append(line).append(\"\\n\");\n                }\n\n                // Display the content in the JTextArea\n                noticeTxtArea.setText(content.toString());\n            }\n        } catch (SQLException | IOException e) {\n            System.out.println(\"Error in display Notice Content: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n\n    //************ Medical *******************\n\n    public void viewMedicalStatus(){\n        Connection con = DatabaseConnection.connect();\n        try{\n            System.out.println(\"LoggedIn Username = [\" + Session.loggedInUsername + \"]\");\n            String sql = \"SELECT med.Medical_id, med.Course_code, med.Week_No, med.Day_No, med.Status, c.Course_Name \" +\n                    \"FROM Medical med \" +\n                    \"JOIN Course c ON med.Course_code = c.Course_code \" +\n                    \"JOIN Student s ON med.Stu_id = s.Stu_id \" +\n                    \"JOIN User u ON s.UserName = u.UserName \" +\n                    \"WHERE u.UserName = ?\";\n\n\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, Session.loggedInUsername);\n\n            System.out.println(\"Executing query: \" + sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            DefaultTableModel model = (DefaultTableModel) mediDetailsTable.getModel();\n            model.setRowCount(0);\n            int count = 0;\n            boolean found = false;\n            while (rs.next()) {\n                count++;\n                found = true;\n                String medId = rs.getString(\"Medical_id\");\n                String courseCode = rs.getString(\"Course_code\");\n                String courseName = rs.getString(\"Course_Name\");\n                String weekNo = rs.getString(\"Week_No\");\n                String dayNo = rs.getString(\"Day_No\");\n                String status = rs.getString(\"Status\");\n\n                model.addRow(new Object[]{medId, courseCode, courseName, weekNo, dayNo, status});\n            }\n            System.out.println(\"Total Records Found: \" + count);\n//            if(count == 0){\n//                JOptionPane.showMessageDialog(null, \"No Records Found\");\n//                System.out.println(\"No Records Found\");\n//            }\n            if(!found){\n                JOptionPane.showMessageDialog(null, \"No Medical Found\");\n                System.out.println(\"No Medical Found\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in view Medical Status: \" + e.getMessage());\n        }\n    }\n\n// ************* Attendance **********************\n\n    public void viewAttendance(String Course_code) {\n        Connection con = DatabaseConnection.connect();\n        try {\n            System.out.println(\"LoggedIn Username = [\" + Session.loggedInUsername + \"]\");\n            String sql = \"SELECT a.Attendance_id, a.Lec_hour, a.Week_No, a.Day_No, a.Status, a.Course_type \" +\n                    \"FROM Attendance a \" +\n                    \"JOIN Course c ON c.Course_code = a.Course_code \" +\n                    \"JOIN Student s ON a.Stu_id = s.Stu_id \" +\n                    \"JOIN User u ON s.UserName = u.UserName \" +\n                    \"WHERE u.UserName = ? AND a.Course_code = ?\";\n\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, Session.loggedInUsername);\n            pstmt.setString(2, Course_code);\n\n            System.out.println(\"Executing query: \" + sql);\n\n            ResultSet rs = pstmt.executeQuery();\n\n            DefaultTableModel model = new DefaultTableModel(\n                    new String[]{\"Attendance Id\", \"Lectur Hour\", \"Week No\", \"Day No\", \"Status\", \"Course Type\"}, 0\n            );\n\n            while (rs.next()) {\n                String attendanceID = rs.getString(\"Attendance_id\");\n                String lecHour = rs.getString(\"Lec_hour\");\n                String weekNo = rs.getString(\"Week_No\");\n                String dayNo = rs.getString(\"Day_No\");\n                String status = rs.getString(\"Status\");\n                String courseType = rs.getString(\"Course_type\");\n\n                model.addRow(new Object[]{attendanceID, lecHour, weekNo, dayNo, status, courseType});\n\n            }\n            attTable.setModel(model);\n\n        } catch (Exception e) {\n            System.out.println(\"Error in view Attendance Eligibility: \" + e.getMessage());\n        }\n    }\n\n    public void showProfilePicture(JLabel imageLbl) {\n        Connection con = DatabaseConnection.connect();\n        try {\n            String sql = \"SELECT Profile_pic FROM User WHERE UserName = ?\";\n            PreparedStatement pst = con.prepareStatement(sql);\n            pst.setString(1, Session.loggedInUsername);\n            ResultSet rs = pst.executeQuery();\n\n            if (rs.next()) {\n                String fileName = rs.getString(\"Profile_pic\");\n\n                // If no profile picture set in DB, use default\n                if (fileName == null || fileName.trim().isEmpty()) {\n                    fileName = \"default.png\";\n                }\n\n                String path = \"user_Pro_Pic/\" + fileName;\n                File imageFile = new File(path);\n\n                // If image file does not exist, fallback to default image\n                if (!imageFile.exists()) {\n                    path = \"user_Pro_Pic/default.png\";\n                }\n\n                // Load and Resize Image to fit JLabel\n                ImageIcon imageIcon = new ImageIcon(path);\n\n                // Get JLabel size (designed from GUI builder)\n                int width = imageLbl.getWidth();\n                int height = imageLbl.getHeight();\n\n                // Default size safety check (in case label not ready)\n                if (width == 0 || height == 0) {\n                    width = 150;\n                    height = 150;\n                }\n\n                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);\n                imageLbl.setIcon(new ImageIcon(image));\n                imageLbl.repaint(); // Refresh label to show updated image\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in showProfilePicture: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n\n    public void deleteProfilePicture(JLabel imageLbl) {\n        Connection con = DatabaseConnection.connect();\n        try{\n            String sql = \"UPDATE User SET Profile_pic = NULL WHERE UserName = ?\";\n            PreparedStatement pst = con.prepareStatement(sql);\n            pst.setString(1, Session.loggedInUsername);\n\n            int result = pst.executeUpdate();\n\n            if (result > 0) {\n                // Set default image after deletion\n                String path = \"JavaMiniProject/user_Pro_Pic/default.png\";\n\n                // Get label size\n                int width = imageLbl.getWidth();\n                int height = imageLbl.getHeight();\n\n                if (width == 0 || height == 0) {\n                    width = 150;\n                    height = 150;\n                }\n\n                ImageIcon imageIcon = new ImageIcon(path);\n                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);\n                imageLbl.setIcon(new ImageIcon(image));\n                imageLbl.repaint();  // Refresh label\n\n                System.out.println(\"Profile picture deleted successfully.\");\n            } else {\n                System.out.println(\"No profile picture was found or username invalid.\");\n            }\n\n        } catch (Exception e) {\n            System.out.println(\"Error in deleteProfilePicture: \" + e.getMessage());\n        }\n    }\n\n    public List<String> getAllCourseCodes() {\n        List<String> courseCodes = new ArrayList<>();\n        Connection con = DatabaseConnection.connect();\n        try {\n            String sql = \"SELECT Course_code FROM Course\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            while (rs.next()) {\n                courseCodes.add(rs.getString(\"Course_code\"));\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in get All CourseCodes: \" + e.getMessage());\n        }\n        return courseCodes;\n    }\n\n    public void viewCourseMaterials(String courseCode) {\n        Connection con = DatabaseConnection.connect();\n        try{\n            String sql = \"SELECT Course_Material FROM Course WHERE Course_Name = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n//            pstmt.setString(1, Session.loggedInUsername);\n            pstmt.setString(1, courseCode);\n            ResultSet rs = pstmt.executeQuery();\n            if (rs.next()) {\n                String materialLink = rs.getString(\"Course_Material\");\n                if(materialLink != null && !materialLink.isEmpty()) {\n                    // Show link or open browser\n                    JOptionPane.showMessageDialog(null, \"Download Course Material here:\\n\" + materialLink);\n                    // You can also open directly\n                    // Desktop.getDesktop().browse(new URI(materialLink));\n                } else {\n                    JOptionPane.showMessageDialog(null, \"No course material uploaded for this course.\");\n                }\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in view Course Materials: \" + e.getMessage());\n        }\n    }\n\n    public static void main(String[] args) {\n        new StuHome();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/student/StuHome.java b/src/student/StuHome.java
--- a/src/student/StuHome.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/student/StuHome.java	(date 1745331932742)
@@ -102,7 +102,7 @@
     private JButton okButtonCourses;
     private JPanel displayDetailsPanel;
 
-    private JPanel displayDetailsPanel;
+
 
 
 //    private String[] courseCodes = {
@@ -514,8 +514,9 @@
     }
 
     public void displayNoticeContent(String title) {
-        try {
-            noticeTxtArea.setText("");
+        noticeTxtArea.setText("");
+        try {
+
             // Establish connection to the database to get the NoticeId based on the title
             Connection con = DatabaseConnection.connect();
             String sql = "SELECT Notice_id FROM Notice WHERE Title = ?";
@@ -529,19 +530,27 @@
                 // Read content from the corresponding text file (e.g., notice_1.txt)
                 File noticeFile = new File("notices/notice_" + noticeId + ".txt");
                 System.out.println("noticeFile: " + noticeId+ " Displayed");
-                BufferedReader reader = new BufferedReader(new FileReader(noticeFile));
-                StringBuilder content = new StringBuilder();
-                String line;
-                while ((line = reader.readLine()) != null) {
-                    content.append(line).append("\n");
-                }
-
-                // Display the content in the JTextArea
-                noticeTxtArea.setText(content.toString());
+
+                try(BufferedReader reader = new BufferedReader(new FileReader(noticeFile))){
+                    StringBuilder content = new StringBuilder();
+
+                    String line;
+                    while ((line = reader.readLine()) != null) {
+                        content.append(line).append("\n");
+                    }
+                    // Display the content in the JTextArea
+                    noticeTxtArea.setText(content.toString());
+                }
+//                noticeTxtArea.setText(content.toString());
+            }else {
+                noticeTxtArea.setText("Notice not found");
             }
-        } catch (SQLException | IOException e) {
+        } catch (SQLException e) {
             System.out.println("Error in display Notice Content: " + e.getMessage());
             e.printStackTrace();
+        }catch (IOException e) {
+            System.out.println("File error in display Notice Content: " + e.getMessage());
+            e.printStackTrace();
         }
     }
 
@@ -696,7 +705,7 @@
 
             if (result > 0) {
                 // Set default image after deletion
-                String path = "JavaMiniProject/user_Pro_Pic/default.png";
+                String path = "user_Pro_Pic/default.png";
 
                 // Get label size
                 int width = imageLbl.getWidth();
@@ -719,6 +728,7 @@
 
         } catch (Exception e) {
             System.out.println("Error in deleteProfilePicture: " + e.getMessage());
+            e.printStackTrace();
         }
     }
 
Index: src/Admin/ProfileUpdate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Admin;\n\nimport javax.swing.*;\nimport database.DatabaseConnection;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\n\npublic class ProfileUpdate {\n    public JPanel MainPanel;\n    private JPanel DetailPanel;\n    private JTextField textField1;\n    private JTextField textField2;\n    private JTextField textField3;\n    private JTextField textField4;\n    private JTextField textField5;\n    private JTextField textField6;\n    private JTextField textField7;\n    private JTextField textField8;\n    private JTextField textField9;\n    private JTextField textField10;\n    private JButton updateProfileButton;\n    private JButton clearButton;\n    private JTextField textField11;\n    private JButton addPhotoButton;\n\n    public ProfileUpdate() {\n        // UPDATE button logic\n        updateProfileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                updateProfile();\n            }\n        });\n\n        // CLEAR button logic\n        clearButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                clearFields();\n            }\n        });\n}\n\n    private void updateProfile() {\n        String sql = \"UPDATE user SET Fname=?, Lname=?, DoB=?, Role=?, Enrollment_Date=?, Address=?, Email=?, Phone_No=?, Password=?, profile=? WHERE UserName=?\";\n\n        try (Connection conn = DatabaseConnection.connect();\n             PreparedStatement pstmt = conn.prepareStatement(sql)) {\n\n            pstmt.setString(1, textField2.getText());\n            pstmt.setString(2, textField3.getText());\n            pstmt.setString(3, textField4.getText());\n            pstmt.setString(4, textField5.getText());\n            pstmt.setString(5, textField6.getText());\n            pstmt.setString(6, textField7.getText());\n            pstmt.setString(7, textField8.getText());\n\n            // Convert phone number to int (handle empty or invalid input gracefully)\n            try {\n                pstmt.setInt(8, Integer.parseInt(textField9.getText()));\n            } catch (NumberFormatException ex) {\n                pstmt.setNull(8, java.sql.Types.INTEGER);\n            }\n\n            pstmt.setString(9, textField10.getText());\n            pstmt.setString(10, textField11.getText());\n\n            pstmt.setString(11, textField1.getText()); // WHERE UserName = ?\n\n            int rows = pstmt.executeUpdate();\n\n            if (rows > 0) {\n                JOptionPane.showMessageDialog(null, \"Profile updated successfully.\");\n            } else {\n                JOptionPane.showMessageDialog(null, \"No profile found for that username.\");\n            }\n\n        } catch (SQLException ex) {\n            ex.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error updating profile: \" + ex.getMessage());\n        }\n    }\n\n    private void clearFields() {\n        textField1.setText(\"\");\n        textField2.setText(\"\");\n        textField3.setText(\"\");\n        textField4.setText(\"\");\n        textField5.setText(\"\");\n        textField6.setText(\"\");\n        textField7.setText(\"\");\n        textField8.setText(\"\");\n        textField9.setText(\"\");\n        textField10.setText(\"\");\n        textField11.setText(\"\");\n    }\n\n    public static void main(String[] args) {\n        JFrame frame = new JFrame(\"Update Profile\");\n        frame.setContentPane(new ProfileUpdate().MainPanel);\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.pack();\n        frame.setLocationRelativeTo(null); // Center the frame\n        frame.setVisible(true);\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Admin/ProfileUpdate.java b/src/Admin/ProfileUpdate.java
--- a/src/Admin/ProfileUpdate.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Admin/ProfileUpdate.java	(date 1745346006828)
@@ -4,12 +4,13 @@
 import database.DatabaseConnection;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
+import java.io.File;
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.SQLException;
 
 
-public class ProfileUpdate {
+public class ProfileUpdate extends JFrame{
     public JPanel MainPanel;
     private JPanel DetailPanel;
     private JTextField textField1;
@@ -26,8 +27,16 @@
     private JButton clearButton;
     private JTextField textField11;
     private JButton addPhotoButton;
+    private JButton exitBtn;
 
     public ProfileUpdate() {
+        setContentPane(MainPanel);
+        setTitle("Update Profile");
+        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
+        setLocationRelativeTo(null);
+        setSize(1000, 800);
+        setVisible(true);
+
         // UPDATE button logic
         updateProfileButton.addActionListener(new ActionListener() {
             @Override
@@ -41,12 +50,26 @@
             @Override
             public void actionPerformed(ActionEvent e) {
                 clearFields();
+
+            }
+        });
+        addPhotoButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                uploadProfilePicture();
+            }
+        });
+        exitBtn.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                new AdHome();
+                dispose();
             }
         });
-}
+    }
 
     private void updateProfile() {
-        String sql = "UPDATE user SET Fname=?, Lname=?, DoB=?, Role=?, Enrollment_Date=?, Address=?, Email=?, Phone_No=?, Password=?, profile=? WHERE UserName=?";
+        String sql = "UPDATE user SET Fname=?, Lname=?, DoB=?, Role=?, Enrollment_Date=?, Address=?, Email=?, Phone_No=?, Password=?, Profile_pic=? WHERE UserName=?";
 
         try (Connection conn = DatabaseConnection.connect();
              PreparedStatement pstmt = conn.prepareStatement(sql)) {
@@ -85,6 +108,25 @@
         }
     }
 
+    public void uploadProfilePicture() {
+        JFileChooser fileChooser = new JFileChooser();
+        fileChooser.setDialogTitle("Select Profile Picture");
+
+        // Optional: allow only image files
+        fileChooser.setAcceptAllFileFilterUsed(false);
+        fileChooser.addChoosableFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif"));
+
+        int result = fileChooser.showOpenDialog(this);
+
+        if (result == JFileChooser.APPROVE_OPTION) {
+            File selectedFile = fileChooser.getSelectedFile();
+            String imagePath = selectedFile.getName();
+
+            // Set the selected file path into the text field
+            textField11.setText(imagePath);
+        }
+    }
+
     private void clearFields() {
         textField1.setText("");
         textField2.setText("");
@@ -100,12 +142,7 @@
     }
 
     public static void main(String[] args) {
-        JFrame frame = new JFrame("Update Profile");
-        frame.setContentPane(new ProfileUpdate().MainPanel);
-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        frame.pack();
-        frame.setLocationRelativeTo(null); // Center the frame
-        frame.setVisible(true);
+        new ProfileUpdate();
     }
 }
 
Index: src/Admin/AdHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Admin;\n\nimport javax.swing.*;\nimport java.awt.CardLayout;\nimport java.sql.Connection;\n\nimport database.DatabaseConnection;\n\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport javax.swing.table.DefaultTableModel;\n\nimport java.sql.Date;\n\nimport student.Login;\n\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.File;\n\n\n\n\n\n\n\n\npublic class AdHome extends JFrame {\n    private JPanel mainPanel;\n    private JButton profileButton;\n    private JButton courseButton;\n    private JButton timeTableButton;\n    private JButton noticeButton;\n    private JPanel headingpanel;\n    private JPanel buttonpanel;\n    private JPanel cardpanel;\n    private JPanel Profilecard;\n    private JTextField textField1;\n    private JTextField textField2;\n    private JButton updateProfileButton;\n    private JPanel profilepanel;\n    private JPanel imagemainpanel;\n    private JPanel imagepanel;\n    private JTextField textField3;\n    private JTextField textField4;\n    private JTextField textField5;\n    private JTextField textField6;\n    private JButton logOutButton;\n    private JTable CourseTable;\n    private JPanel CourseCard;\n    private JButton addCourseButton;\n    private JButton updateCourseButton;\n    private JButton deleteButton;\n    private JPanel TimeTableCard;\n    private JTable Timetable1;\n    private JButton addTimeTableButton;\n    private JButton updateTimeTableButton;\n    private JButton deleteButton1;\n    private JScrollPane TimeTable;\n    private JPanel buton;\n    private JPanel NoticeCard;\n    private JButton addNoticeButton;\n    private JButton deleteNoticeButton;\n    private JButton viewNoticeButton;\n    private JTextArea textArea1;\n    private JTable NoticeTable;\n    //private JTable noticeTable;\n\n\n\n\n    public AdHome() {\n\n        setTitle(\"Admin Home\");\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setContentPane(mainPanel); // IntelliJ should generate and initialize this\n        pack(); // Adjusts window size to fit content\n        setLocationRelativeTo(null);\n        setVisible(true);\n\n        courseButton.addActionListener(e -> {\n            CardLayout cl = (CardLayout) cardpanel.getLayout();\n            cl.show(cardpanel, \"Course\");\n            loadCourseData();// Make sure \"course\" matches the card name you set in Designer\n        });\n\n        // Load admin profile automatically when AdHome is initialized\n        loadAdminProfile();  // Call to load the admin details right after the window is shown\n\n        profileButton.addActionListener(e -> {\n            CardLayout cl = (CardLayout) cardpanel.getLayout();\n            cl.show(cardpanel, \"Profile\");\n            loadAdminProfile();\n        });\n\n\n        updateProfileButton.addActionListener(e -> {\n            JFrame frame = new JFrame(\"Update Profile\");\n            frame.setContentPane(new ProfileUpdate().MainPanel);\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n            frame.pack();\n            frame.setLocationRelativeTo(null); // Center on screen\n            frame.setVisible(true);\n        });\n\n\n        timeTableButton.addActionListener(e -> {\n            CardLayout cl = (CardLayout) cardpanel.getLayout();\n            cl.show(cardpanel, \"TimeTable\"); // The string must match the name you set in your CardLayout\n           loadTimeTableData(); // Optional: load data from DB\n        });\n\n\n        addCourseButton.addActionListener(e -> {\n            JFrame frame = new JFrame(\"Add Course\");\n            frame.setContentPane(new AddCourse().panel1);\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n            frame.pack();\n            frame.setLocationRelativeTo(null); // center it\n            frame.setVisible(true);\n        });\n\n        updateCourseButton.addActionListener(e -> {\n            JFrame frame = new JFrame(\"Update Course\");\n            frame.setContentPane(new UpdateCourse().panel1); // use mainPanel if that's your variable name\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n            frame.pack();\n            frame.setLocationRelativeTo(null);\n            frame.setVisible(true);\n        });\n\n        deleteButton.addActionListener(e -> {\n            int selectedRow = CourseTable.getSelectedRow();\n\n            if (selectedRow == -1) {\n                JOptionPane.showMessageDialog(null, \"Please select a course to delete.\");\n                return;\n            }\n\n            // Get course ID (or any unique key)\n            String courseId = CourseTable.getValueAt(selectedRow, 0).toString(); // assuming column 0 is course_id\n\n            int confirm = JOptionPane.showConfirmDialog(null, \"Are you sure you want to delete Course ID: \" + courseId + \"?\", \"Confirm Delete\", JOptionPane.YES_NO_OPTION);\n\n            if (confirm == JOptionPane.YES_OPTION) {\n                deleteCourseFromDatabase(courseId);\n                ((DefaultTableModel) CourseTable.getModel()).removeRow(selectedRow); // remove from table\n            }\n        });\n\n        addTimeTableButton.addActionListener(e -> {\n            JFrame frame = new JFrame(\"Add Time Table\");\n            frame.setContentPane(new AddTimeTable().panel1); // make sure `panel1` is public\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n            frame.pack();\n            frame.setLocationRelativeTo(null); // center it\n            frame.setVisible(true);\n        });\n\n        updateTimeTableButton.addActionListener(e -> {\n            JFrame frame = new JFrame(\"Update Time Table\");\n            frame.setContentPane(new UpdateTimeTable().panel1); // Make sure panel1 is public in UpdateTimeTable\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n            frame.pack();\n            frame.setLocationRelativeTo(null); // Center on screen\n            frame.setVisible(true);\n        });\n\n        deleteButton1.addActionListener(e -> {\n            int selectedRow = Timetable1.getSelectedRow();\n\n            if (selectedRow == -1) {\n                JOptionPane.showMessageDialog(null, \"Please select a timetable entry to delete.\");\n                return;\n            }\n\n            // Get the primary key (timetable_id) from the selected row\n            String timetableId = Timetable1.getValueAt(selectedRow, 0).toString(); // assuming column 0 is timetable_id\n\n            int confirm = JOptionPane.showConfirmDialog(null,\n                    \"Are you sure you want to delete TimeTable ID: \" + timetableId + \"?\",\n                    \"Confirm Delete\", JOptionPane.YES_NO_OPTION);\n\n            if (confirm == JOptionPane.YES_OPTION) {\n                deleteTimetableFromDatabase(timetableId);\n                ((DefaultTableModel) Timetable1.getModel()).removeRow(selectedRow); // Remove row from JTable\n            }\n        });\n\n\n        noticeButton.addActionListener(e -> {\n            CardLayout cl = (CardLayout) cardpanel.getLayout();\n            cl.show(cardpanel, \"Notice\");\n            loadNoticeData();\n        });\n\n\n\n        logOutButton.addActionListener(e -> {\n            // Close the current window\n            dispose();\n\n            // Open the login window\n            JFrame loginFrame = new JFrame(\"Login\");\n            loginFrame.setContentPane(new Login().mainPanel); // Adjust according to your Login class\n            loginFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n            loginFrame.pack();\n            loginFrame.setLocationRelativeTo(null);\n            loginFrame.setVisible(true);\n        });\n\n        viewNoticeButton.addActionListener(e -> {\n            int selectedRow = NoticeTable.getSelectedRow();\n\n            if (selectedRow == -1) {\n                JOptionPane.showMessageDialog(null, \"Please select a notice to view.\");\n                return;\n            }\n\n            // Get Notice ID from selected row (assume column 0)\n            String noticeId = NoticeTable.getValueAt(selectedRow, 0).toString(); // e.g., N1\n            String filename = \"notice_\"+ noticeId + \".txt\"; // e.g., N1.txt\n\n            // Build file path\n//            File file = new File(\"notices\", filename);\n              File file = new File(\"C:/Users/HP/Desktop/my java/JavaMiniProject/notices/\" + filename);\n\n            System.out.println(\"Trying to read from: \" + file.getAbsolutePath());\n\n            // Read and display the file\n            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n                StringBuilder content = new StringBuilder();\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    content.append(line).append(\"\\n\");\n                }\n                textArea1.setText(content.toString());\n\n            } catch (IOException ex) {\n                ex.printStackTrace();\n                JOptionPane.showMessageDialog(null, \"Unable to load notice content from file: \" + file.getName());\n            }\n        });\n\n        deleteNoticeButton.addActionListener(e -> {\n            int selectedRow = NoticeTable.getSelectedRow();\n\n            if (selectedRow == -1) {\n                JOptionPane.showMessageDialog(null, \"Please select a notice to delete.\");\n                return;\n            }\n\n            // Get the Notice ID (assuming it is in column 0 of the JTable)\n            String noticeId = NoticeTable.getValueAt(selectedRow, 0).toString();\n\n            // Confirm before deletion\n            int confirm = JOptionPane.showConfirmDialog(null, \"Are you sure you want to delete Notice ID: \" + noticeId + \"?\", \"Confirm Delete\", JOptionPane.YES_NO_OPTION);\n\n            if (confirm == JOptionPane.YES_OPTION) {\n                deleteNotice(noticeId);  // Call the combined method\n            }\n        });\n\n        addNoticeButton.addActionListener(e -> {\n            JFrame frame = new JFrame(\"Add Notice\");\n            frame.setContentPane(new AddNotices().MainPanel); // if AddNotice has a MainPanel\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n            frame.pack();\n            frame.setLocationRelativeTo(null); // center on screen\n            frame.setVisible(true);\n        });\n\n\n\n\n\n    }\n    private void loadAdminProfile() {\n        try {\n            Connection conn = DatabaseConnection.connect();\n            Statement stmt = conn.createStatement();\n\n            String query = \"SELECT * FROM user WHERE role = 'Admin' LIMIT 1\"; // Adjust if you use a session user ID\n            ResultSet rs = stmt.executeQuery(query);\n\n            if (rs.next()) {\n                textField1.setText(rs.getString(\"Fname\"));\n                textField2.setText(rs.getString(\"Lname\"));\n                textField3.setText(rs.getString(\"Address\"));\n                textField4.setText(rs.getString(\"Email\"));\n                textField5.setText(rs.getString(\"Phone_no\"));\n                textField6.setText(\"Admin\"); // Static assignment\n            } else {\n                JOptionPane.showMessageDialog(null, \"No Admin profile found.\");\n            }\n\n            rs.close();\n            stmt.close();\n            conn.close();\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error loading admin profile.\");\n        }\n    }\n\n\n\n    private void deleteCourseFromDatabase(String courseId) {\n        try {\n            Connection conn = DatabaseConnection.connect();\n            Statement stmt = conn.createStatement();\n            int rowsAffected = stmt.executeUpdate(\"DELETE FROM course WHERE course_id = '\" + courseId + \"'\");\n\n            if (rowsAffected > 0) {\n                JOptionPane.showMessageDialog(null, \"Course deleted successfully.\");\n            } else {\n                JOptionPane.showMessageDialog(null, \"Course not found or could not be deleted.\");\n            }\n\n            stmt.close();\n            conn.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error deleting course from database.\");\n        }\n    }\n\n\n\n    private void loadCourseData() {\n        try {\n            Connection conn = DatabaseConnection.connect();\n            Statement stmt = conn.createStatement();\n            ResultSet rs = stmt.executeQuery(\"SELECT * FROM course\");\n\n            DefaultTableModel model = new DefaultTableModel();\n            model.addColumn(\"Course ID\");\n            model.addColumn(\"Course Code\");\n            model.addColumn(\"Lecturer ID\");\n            model.addColumn(\"Course Type\");\n            model.addColumn(\"Course Name\");\n            model.addColumn(\"Credit\");\n\n            while (rs.next()) {\n                model.addRow(new Object[]{\n                        rs.getString(\"course_id\"),\n                        rs.getString(\"course_code\"),\n                        rs.getString(\"lec_id\"),\n                        rs.getString(\"course_type\"),\n                        rs.getString(\"course_name\"),\n                        rs.getInt(\"credit\")\n                });\n            }\n\n            CourseTable.setModel(model);\n\n            rs.close();\n            stmt.close();\n            conn.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error loading course data\");\n        }\n    }\n\n    private void loadTimeTableData() {\n        try {\n            Connection conn = DatabaseConnection.connect();\n            Statement stmt = conn.createStatement();\n            ResultSet rs = stmt.executeQuery(\"SELECT * FROM timetable\");\n\n            DefaultTableModel model = new DefaultTableModel();\n            model.addColumn(\"TimeTable ID\");\n            model.addColumn(\"Admin ID\");\n            model.addColumn(\"Department\");\n            model.addColumn(\"Course Code\");\n            model.addColumn(\"Course Name\");\n            model.addColumn(\"Time\");\n            model.addColumn(\"Day\");\n\n            while (rs.next()) {\n                String dayNumber = rs.getString(\"day\"); // Get the day number from DB\n                String dayName = convertDayNumberToName(dayNumber); // Convert to day name\n\n                model.addRow(new Object[]{\n                        rs.getString(\"timetable_id\"),\n                        rs.getString(\"ad_id\"),\n                        rs.getString(\"department\"),\n                        rs.getString(\"course_code\"),\n                        rs.getString(\"course_name\"),\n                        rs.getString(\"time\"),\n                        dayName\n                });\n            }\n\n            Timetable1.setModel(model);\n\n            rs.close();\n            stmt.close();\n            conn.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error loading timetable data\");\n        }\n    }\n\n    // This helper method converts numeric days to names\n    private String convertDayNumberToName(String dayNumber) {\n        switch (dayNumber) {\n            case \"1\": return \"Monday\";\n            case \"2\": return \"Tuesday\";\n            case \"3\": return \"Wednesday\";\n            case \"4\": return \"Thursday\";\n            default: return \"Unknown\";\n        }\n    }\n\n    private void deleteTimetableFromDatabase(String timetableId) {\n        try {\n            Connection conn = DatabaseConnection.connect();\n            Statement stmt = conn.createStatement();\n\n            int rowsAffected = stmt.executeUpdate(\"DELETE FROM timetable WHERE timetable_id = '\" + timetableId + \"'\");\n\n            if (rowsAffected > 0) {\n                JOptionPane.showMessageDialog(null, \"Timetable entry deleted successfully.\");\n            } else {\n                JOptionPane.showMessageDialog(null, \"Timetable ID not found or could not be deleted.\");\n            }\n\n            stmt.close();\n            conn.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error deleting timetable from database.\");\n        }\n    }\n\n    private void loadNoticeData() {\n        try {\n            Connection conn = DatabaseConnection.connect();\n            Statement stmt = conn.createStatement();\n            ResultSet rs = stmt.executeQuery(\"SELECT * FROM notice\");\n\n            // Define column names\n            String[] columnNames = {\"Notice ID\", \"Admin ID\", \"Title\", \"Date\"};\n\n            // Use DefaultTableModel to fill JTable\n            DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);\n\n            while (rs.next()) {\n                String id = rs.getString(\"Notice_id\");\n                String adId = rs.getString(\"Ad_id\");\n                String title = rs.getString(\"Title\");\n                Date date = rs.getDate(\"Date\");\n\n                Object[] row = {id, adId, title, date};\n                tableModel.addRow(row);\n            }\n\n            // Set model to your JTable\n            NoticeTable.setModel(tableModel);\n\n\n            rs.close();\n            stmt.close();\n            conn.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error loading notice data\");\n        }\n    }\n\n    private void deleteNotice(String noticeId) {\n        try {\n            // Step 1: Delete from the database\n            Connection conn = DatabaseConnection.connect();\n            Statement stmt = conn.createStatement();\n\n            // Execute the delete query\n            String deleteQuery = \"DELETE FROM notice WHERE Notice_id = '\" + noticeId + \"'\";\n            int rowsAffected = stmt.executeUpdate(deleteQuery);\n\n            if (rowsAffected > 0) {\n                JOptionPane.showMessageDialog(null, \"Notice deleted successfully.\");\n\n                // Step 2: Remove the selected row from the JTable\n                DefaultTableModel model = (DefaultTableModel) NoticeTable.getModel();\n                int selectedRow = NoticeTable.getSelectedRow();\n\n                if (selectedRow != -1) {\n                    // Remove the row from the JTable\n                    model.removeRow(selectedRow);\n                }\n            } else {\n                JOptionPane.showMessageDialog(null, \"Notice not found or could not be deleted.\");\n            }\n\n            // Step 3: Close connections\n            stmt.close();\n            conn.close();\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(null, \"Error deleting notice.\");\n        }\n    }\n\n\n\n\n\n\n\n    public static void main(String[] args) {\n        SwingUtilities.invokeLater(() -> {\n            JFrame frame = new JFrame(\"Admin Home\");\n            frame.setContentPane(new AdHome().mainPanel);\n            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n            frame.pack();\n            frame.setLocationRelativeTo(null); // Center the window\n            frame.setVisible(true);\n\n        });\n    }\n\n\n\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Admin/AdHome.java b/src/Admin/AdHome.java
--- a/src/Admin/AdHome.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Admin/AdHome.java	(date 1745345974386)
@@ -1,17 +1,16 @@
 package Admin;
 
 import javax.swing.*;
-import java.awt.CardLayout;
-import java.sql.Connection;
+import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.sql.*;
 
 import database.DatabaseConnection;
 
-import java.sql.ResultSet;
-import java.sql.Statement;
 import javax.swing.table.DefaultTableModel;
 
-import java.sql.Date;
-
+import database.Session;
 import student.Login;
 
 import java.io.BufferedReader;
@@ -20,12 +19,6 @@
 import java.io.File;
 
 
-
-
-
-
-
-
 public class AdHome extends JFrame {
     private JPanel mainPanel;
     private JButton profileButton;
@@ -65,28 +58,38 @@
     private JButton viewNoticeButton;
     private JTextArea textArea1;
     private JTable NoticeTable;
+    private JButton deleteProfilePictureButton;
+    private JLabel imgDisplayLbl;
+    private JButton updateProfilePictureButton;
     //private JTable noticeTable;
 
+    Connection con;
+    PreparedStatement pst;
+    ResultSet rs;
 
 
 
     public AdHome() {
-
-        setTitle("Admin Home");
+        setContentPane(mainPanel); // IntelliJ should generate and initialize this
         setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        setContentPane(mainPanel); // IntelliJ should generate and initialize this
+        setTitle("Admin Home");
         pack(); // Adjusts window size to fit content
+        setSize(1000, 800);
         setLocationRelativeTo(null);
         setVisible(true);
 
+        // Load admin profile automatically when AdHome is initialized
+        loadAdminProfile();  // Call to load the admin details right after the window is shown
+        showProfilePicture(imgDisplayLbl);
+//        showOnlyProfilePicture(imgDisplayLbl);
+
         courseButton.addActionListener(e -> {
             CardLayout cl = (CardLayout) cardpanel.getLayout();
             cl.show(cardpanel, "Course");
             loadCourseData();// Make sure "course" matches the card name you set in Designer
         });
 
-        // Load admin profile automatically when AdHome is initialized
-        loadAdminProfile();  // Call to load the admin details right after the window is shown
+
 
         profileButton.addActionListener(e -> {
             CardLayout cl = (CardLayout) cardpanel.getLayout();
@@ -96,12 +99,9 @@
 
 
         updateProfileButton.addActionListener(e -> {
-            JFrame frame = new JFrame("Update Profile");
-            frame.setContentPane(new ProfileUpdate().MainPanel);
-            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
-            frame.pack();
-            frame.setLocationRelativeTo(null); // Center on screen
-            frame.setVisible(true);
+            dispose();
+            new ProfileUpdate();
+
         });
 
 
@@ -272,10 +272,21 @@
         });
 
 
+        deleteProfilePictureButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                deleteProfilePicture(imgDisplayLbl);
+                deleteProfilePictureButton.setEnabled(false);
+            }
+        });
+//        updateProfilePictureButton.addActionListener(new ActionListener() {
+//            @Override
+//            public void actionPerformed(ActionEvent e) {
+//                uploadProfilePicture();
+//            }
+//        });
+    }
 
-
-
-    }
     private void loadAdminProfile() {
         try {
             Connection conn = DatabaseConnection.connect();
@@ -305,7 +316,90 @@
         }
     }
 
+    public void showProfilePicture(JLabel imgDisplayLbl) {
+        Connection con = DatabaseConnection.connect();
+        try {
+            String sql = "SELECT Profile_pic FROM User WHERE UserName = ?";
+            PreparedStatement pst = con.prepareStatement(sql);
+            pst.setString(1, Session.loggedInUsername);
+            ResultSet rs = pst.executeQuery();
+
+            if (rs.next()) {
+                String fileName = rs.getString("Profile_pic");
+
+                // If no profile picture set in DB, use default
+                if (fileName == null || fileName.trim().isEmpty()) {
+                    fileName = "default.png";
+                }
+
+                String path = "user_Pro_Pic/" + fileName;
+                File imageFile = new File(path);
+
+                // If image file does not exist, fallback to default image
+                if (!imageFile.exists()) {
+                    path = "user_Pro_Pic/default.png";
+                }
+
+                // Load and Resize Image to fit JLabel
+                ImageIcon imageIcon = new ImageIcon(path);
+
+                // Get JLabel size (designed from GUI builder)
+                int width = imgDisplayLbl.getWidth();
+                int height = imgDisplayLbl.getHeight();
+
+                // Default size safety check (in case label not ready)
+                if (width == 0 || height == 0) {
+                    width = 150;
+                    height = 150;
+                }
 
+                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
+                imgDisplayLbl.setIcon(new ImageIcon(image));
+                imgDisplayLbl.repaint(); // Refresh label to show updated image
+            }
+        } catch (Exception e) {
+            System.out.println("Error in show Profile Picture: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
+    public void deleteProfilePicture(JLabel imgDisplayLbl) {
+        Connection con = DatabaseConnection.connect();
+        try{
+            String sql = "UPDATE User SET Profile_pic = NULL WHERE UserName = ?";
+            PreparedStatement pst = con.prepareStatement(sql);
+            pst.setString(1, Session.loggedInUsername);
+
+            int result = pst.executeUpdate();
+
+            if (result > 0) {
+                // Set default image after deletion
+                String path = "user_Pro_Pic/default.png";
+
+                // Get label size
+                int width = imgDisplayLbl.getWidth();
+                int height = imgDisplayLbl.getHeight();
+
+                if (width == 0 || height == 0) {
+                    width = 150;
+                    height = 150;
+                }
+
+                ImageIcon imageIcon = new ImageIcon(path);
+                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
+                imgDisplayLbl.setIcon(new ImageIcon(image));
+                imgDisplayLbl.repaint();  // Refresh label
+
+                System.out.println("Profile picture deleted successfully.");
+            } else {
+                System.out.println("No profile picture was found or username invalid.");
+            }
+
+        } catch (Exception e) {
+            System.out.println("Error in deleteProfilePicture: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
 
     private void deleteCourseFromDatabase(String courseId) {
         try {
@@ -328,7 +422,6 @@
     }
 
 
-
     private void loadCourseData() {
         try {
             Connection conn = DatabaseConnection.connect();
@@ -509,11 +602,6 @@
     }
 
 
-
-
-
-
-
     public static void main(String[] args) {
         SwingUtilities.invokeLater(() -> {
             JFrame frame = new JFrame("Admin Home");
Index: src/Admin/AddNotices.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Admin;\n\nimport javax.swing.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport database.DatabaseConnection;\nimport database.Session;\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\nimport java.time.format.DateTimeParseException;\n\n\n\npublic class AddNotices {\n    public JPanel MainPanel;\n    private JTextField textField1;\n    private JTextField textField2;\n    private JTextField textField3;\n    private JTextField textField4;\n    private JButton addNoticeButton;\n    private JButton clearButton;\n\n    public AddNotices() {\n\n\n        addNoticeButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String noticeId = textField1.getText().trim();\n//                String adminId = textField2.getText().trim();\n                String title = textField3.getText().trim();\n                String date = textField4.getText().trim();\n//                String adId = Session.loggedInUsername; // assuming Session class has this\n                String adId = \"Admin01\";\n\n\n\n                if (noticeId.isEmpty() || title.isEmpty() || date.isEmpty() ) {\n                    JOptionPane.showMessageDialog(null, \"Please fill all fields!\");\n                    return;\n                }\n\n                /*if (!date.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {\n                    JOptionPane.showMessageDialog(null, \"Please enter a valid date (YYYY-MM-DD)\");\n                    return;\n                }*/\n\n                try {\n//                    String trimmedDate = date.trim(); // extra trimming\n                    String trimmedDate = date.trim().replaceAll(\"[\\\\n\\\\r\\\\t]\", \"\"); // strip newlines, tabs\n                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n                    LocalDate parsedDate = LocalDate.parse(trimmedDate, formatter); // this will throw if invalid\n                    date = parsedDate.toString();\n                } catch (DateTimeParseException ex) {\n                    JOptionPane.showMessageDialog(null, \"Invalid date! Please enter a correct date in YYYY-MM-DD format.\");\n                    return;\n                }\n\n\n                // 1. Insert into database\n                try {\n                    Connection conn = DatabaseConnection.connect();\n                    String sql = \"INSERT INTO notice (Notice_id, Ad_id, Title, Date) VALUES (?, ?, ?, ?)\";\n                    PreparedStatement stmt = conn.prepareStatement(sql);\n                    stmt.setString(1, noticeId);\n                    stmt.setString(2, adId);\n                    stmt.setString(3, title);\n                    stmt.setString(4, date);\n                    int rows = stmt.executeUpdate();\n\n\n\n\n                    if (rows > 0) {\n                        // 2. Create notice file\n                        File dir = new File(\"notices\");\n                        if (!dir.exists()) dir.mkdirs(); // Create directory if it doesn't exist\n                        File file = new File(dir, \"notice\" + noticeId + \".txt\");\n                        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {\n                            writer.write(\"Title: \" + title);\n                            writer.newLine();\n                            writer.write(\"Date: \" + date);\n                            writer.newLine();\n                            writer.write(\"Content:\");\n                            writer.newLine();\n//                            writer.write(content);\n                        }\n\n                        JOptionPane.showMessageDialog(null, \"Notice added successfully!\");\n                        clearFields();\n                    } else {\n                        JOptionPane.showMessageDialog(null, \"Failed to add notice.\");\n                    }\n\n                    stmt.close();\n                    conn.close();\n                } catch (Exception ex) {\n                    ex.printStackTrace();\n                    JOptionPane.showMessageDialog(null, \"Error: \" + ex.getMessage());\n                }\n            }\n        });\n\n        clearButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                clearFields();\n            }\n        });\n    }\n\n    private void clearFields() {\n        textField1.setText(\"\");\n        textField2.setText(\"\");\n        textField3.setText(\"\");\n        textField4.setText(\"\");\n    }\n\n    public JPanel getMainPanel() {\n        return MainPanel;\n    }\n\n\n\n    public static void main(String[] args) {\n        // Create the JFrame (window)\n        JFrame frame = new JFrame(\"Add Notices\");\n        frame.setContentPane(new AddNotices().getMainPanel());\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.pack(); // Adjust size to fit content\n        frame.setLocationRelativeTo(null); // Center on screen\n        frame.setVisible(true);\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Admin/AddNotices.java b/src/Admin/AddNotices.java
--- a/src/Admin/AddNotices.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Admin/AddNotices.java	(date 1745322431154)
@@ -78,7 +78,7 @@
                         // 2. Create notice file
                         File dir = new File("notices");
                         if (!dir.exists()) dir.mkdirs(); // Create directory if it doesn't exist
-                        File file = new File(dir, "notice" + noticeId + ".txt");
+                        File file = new File(dir, "notice_" + noticeId + ".txt");
                         try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
                             writer.write("Title: " + title);
                             writer.newLine();
Index: src/Lecture/LecHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Lecture;\n\nimport database.DatabaseConnection;\nimport student.Login;\n\nimport javax.swing.*;\nimport javax.swing.filechooser.FileNameExtensionFilter;\nimport javax.swing.table.DefaultTableModel;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.MouseAdapter;\nimport java.awt.event.MouseEvent;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.sql.*;\nimport java.util.*;\nimport java.util.List;\nimport java.nio.file.*;\n\npublic class LecHome extends JFrame {\n    private JPanel mainPanel;\n    private JPanel headingPanel;\n    private JLabel stuManaSysLbl;\n    private JLabel FoTLbl;\n    private JButton logOutButton;\n    private JPanel btnPanel;\n    private JButton profileButton;\n    private JButton addMarksButton;\n    private JButton gradeAndGPAButton;\n    private JButton attendanceButton;\n    private JButton CAEligibilityButton;\n    private JButton undergraduateDetailsButton;\n    private JButton noticeButton;\n    private JPanel cardMainPanel;\n    private JPanel profileCard;\n    private JLabel profileHeadingLbl;\n    private JPanel detailPanel;\n    private JLabel fNameLbl;\n    private JTextField fNameTxt;\n    private JLabel lNameLbl;\n    private JTextField lNameTxt;\n    private JLabel addressLbl;\n    private JTextField addressTxt;\n    private JLabel emailLbl;\n    private JTextField emailTxt;\n    private JLabel pNoLbl;\n    private JLabel roleLbl;\n    private JTextField pNoTxt;\n    private JTextField roleTxt;\n    private JPanel imgMainPanel;\n    private JPanel imgPanel;\n    private JLabel imageLbl;\n    private JButton deleteProfilePictureButton;\n    private JButton updateProfileButton;\n    private JPanel AddmarksCard;\n    private JPanel gradeGPACard;\n    private JPanel attendanceCard;\n    private JPanel CACard;\n    private JPanel noticeCard;\n    private JLabel noticeHeadingLbl;\n    private JLabel selectTitleLbl;\n    private JComboBox selectTitleCombo;\n    private JPanel noticeTxtAreaPanel;\n    private JScrollPane noticeScrollPane;\n    private JTextArea noticeTxtArea;\n    private JPanel UgdetailsCard;\n    private JPanel MainFrame;\n    private JTextField Mark_id_textfield;\n    private JTextField student_id_textField;\n    private JTextField mark_textField;\n    private JButton ADDButton;\n    private JButton deleteButton;\n    private JComboBox mark_type_comboBox;\n    private JComboBox coursecodecomboBox;\n    private JTable marktable;\n    private JTextField Stu_number;\n    private JButton gradegpuuniqshowButton;\n    private JButton gradegpuallshowButton;\n    private JTable Grade_GPA_Table;\n    private JPanel GradeMainpanle;\n    private JButton uniqugdetailsshowButton;\n    private JButton allugdetailsshowButton;\n    private JTable Stu_details_table;\n    private JTextField ugStudentNumber;\n    private JButton attuniqoneshowButton;\n    private JButton AllshowButton;\n    private JButton allAttendanceButton;\n    private JButton allMedicelsButton;\n    private JButton attcaeligibilityButton;\n    private JTable Attendance_table;\n    private JTextField attStu_number;\n    private JTextField CAstu_numbertextField;\n    private JButton Uniq_stu_CA_button;\n    private JTable CAEligibilitytable;\n    private JButton AllCAbutton;\n    private JButton Addmaterialsbtm;\n    private JPanel AddmaterialsCard;\n    private JTable Materials_Table;\n    private JButton lecmaterialsDeletebutton;\n    private JComboBox lecmaterialscoursecodedropdown;\n    private JButton lecmaterialsAddbutton;\n\n    private String[] courseCodes = {\n            \"ICT2113\",  // Index 0\n            \"ICT2122\",  // Index 1\n            \"ICT2132\",  // Index 2\n            \"ICT2142\",  // Index 3\n            \"ICT2152\"   // Index 4\n    };\n\n    Connection con;\n    PreparedStatement pst;\n    ResultSet rs;\n\n    String User;\n\n    public LecHome(String User_ID) {\n\n        setContentPane(mainPanel);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setTitle(\"Lecture Home\");\n        setSize(1024, 768);\n        setLocationRelativeTo(null);\n        setVisible(true);\n\n        displayProfileDetils(User_ID);\n        showProfilePicture( User,imageLbl);\n\n        User=User_ID;\n\n        CardLayout cardLayout = (CardLayout) (cardMainPanel.getLayout());\n\n        profileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"profileCard\");\n            }\n        });\n        addMarksButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"AddmarksCard\");\n                showmarkstable(User_ID);\n                coursecodeselection(User_ID);\n            }\n        });\n        updateProfileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n\n                    new Lec_profileupdate(User_ID);\n                dispose();\n\n            }\n        });\n        ADDButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                addmarks(User_ID);\n            }\n        });\n        deleteButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                selectdeletingrecord(User_ID);\n            }\n        });\n        logOutButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String password = \"\"                        ;\n                new Login();\n                dispose();\n            }\n        });\n        gradeAndGPAButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"gradeGPACard\");\n                Gradegpushowtable();\n            }\n        });\n        gradegpuallshowButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                Gradegpushowtable();\n            }\n        });\n        gradegpuuniqshowButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String studentId = Stu_number.getText().trim();\n                if (!studentId.isEmpty()) {\n                    Gradegpushowtable(studentId);\n                } else {\n                    JOptionPane.showMessageDialog(MainFrame, \"Please enter a student ID.\");\n                }\n            }\n        });\n        undergraduateDetailsButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"UgdetailsCard\");\n                allUgraduatesDetails();\n            }\n        });\n        allugdetailsshowButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                allUgraduatesDetails();\n            }\n        });\n        uniqugdetailsshowButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String st_Number = ugStudentNumber.getText().trim();\n                if (st_Number.isEmpty()) {\n                    JOptionPane.showMessageDialog(MainFrame, \"Please enter a student ID.\", \"Error\", JOptionPane.ERROR_MESSAGE);\n                }\n                else {\n                    filterUgraduatesDetails(st_Number);\n                }\n            }\n        });\n        attendanceButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"attendanceCard\");\n            }\n        });\n        allAttendanceButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                attendanceTable(User_ID);\n            }\n        });\n        allMedicelsButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                allMedicels(User_ID);\n            }\n        });\n\n        AllshowButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                allstudentattendanceprecent(User_ID);\n            }\n        });\n        attuniqoneshowButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String attstunum=attStu_number.getText().trim();\n                if (attstunum.isEmpty()){\n                    JOptionPane.showMessageDialog(MainFrame, \"Please enter a student ID.\", \"Error\", JOptionPane.ERROR_MESSAGE);\n                }\n                else {\n                    uniqstudentattendancepresent(attstunum,User_ID);\n                }\n            }\n        });\n        CAEligibilityButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"CACard\");\n            }\n        });\n        AllCAbutton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                allcamarks(User);\n            }\n        });\n        Uniq_stu_CA_button.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String CA_Stu_Number =CAstu_numbertextField.getText().trim();\n                if(CA_Stu_Number.isEmpty()){\n                    JOptionPane.showMessageDialog(MainFrame, \"Please enter a student ID.\", \"Error\", JOptionPane.ERROR_MESSAGE);\n                }\n                else {\n                    uniqcamarks(CA_Stu_Number,User);\n                }\n            }\n        });\n        attcaeligibilityButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n            new Att_CA();\n            }\n        });\n        selectTitleCombo.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                    // Get the selected title\n                    String selectedTitle = (String) selectTitleCombo.getSelectedItem();\n                    System.out.println(\"Selected Title: \" + selectedTitle);\n                    // Display the content for the selected title\n                    if (selectedTitle != null) {\n                        displayNoticeContent(selectedTitle);\n                    }\n                }\n        });\n        noticeButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"noticeCard\");\n                addNoticeTitlesToComboBox();\n            }\n        });\n        deleteProfilePictureButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                deleteProfilePicture(User,imageLbl);\n                deleteProfilePictureButton.setEnabled(false);\n            }\n        });\n        Addmaterialsbtm.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"AddmaterialsCard\");\n                showcoursetable(User_ID);\n                populateCourseComboBox(User_ID);\n            }\n        });\n        lecmaterialsAddbutton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                uploadfile(User_ID);\n            }\n        });\n        lecmaterialsDeletebutton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                deletematerial(User_ID);\n            }\n        });\n    }\n\n     //    ***** get courses ********\n\n    public List<String> getAllCourseCodes() {\n        List<String> courseCodes = new ArrayList<>();\n        Connection con = DatabaseConnection.connect();\n        try {\n            String sql = \"SELECT Course_code FROM Course\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            while (rs.next()) {\n                courseCodes.add(rs.getString(\"Course_code\"));\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in getAllCourseCodes: \" + e.getMessage());\n        }\n        return courseCodes;\n    }\n\n    public List<String> getCourseCodesByLecturer(String User) {\n        List<String> courseCodes = new ArrayList<>();\n        Connection con = DatabaseConnection.connect();\n        try {\n            String sql = \"SELECT Course_code FROM course_lecturer WHERE Lec_id = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, User);\n            ResultSet rs = pstmt.executeQuery();\n\n            while (rs.next()) {\n                courseCodes.add(rs.getString(\"Course_code\"));\n            }\n        } catch (SQLException e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n        return courseCodes;\n    }\n\n\n    // ******* Display Profile Details *****************\n\n    public void displayProfileDetils(String User_ID){\n        con = DatabaseConnection.connect();\n\n        try {\n            String sql = \"SELECT FName, LName, Address, Email, Phone_No, Role FROM User WHERE UserName = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n\n            pstmt.setString(1, User_ID);\n\n            ResultSet rs = pstmt.executeQuery();\n\n            if(rs.next()){\n                String fName1 = rs.getString(\"FName\");\n                fNameTxt.setText(fName1);\n                System.out.println(\"fName1: \" + fName1);\n                String lName1 = rs.getString(\"LName\");\n                lNameTxt.setText(lName1);\n                System.out.println(\"lName1: \" + lName1);\n                String address1 = rs.getString(\"Address\");\n                addressTxt.setText(address1);\n                System.out.println(\"address1: \" + address1);\n                String email1 = rs.getString(\"Email\");\n                emailTxt.setText(email1);\n                System.out.println(\"email1: \" + email1);\n                String phoneNo1 = rs.getString(\"Phone_No\");\n                pNoTxt.setText(phoneNo1);\n                System.out.println(\"phoneNo1: \" + phoneNo1);\n                String role1 = rs.getString(\"Role\");\n                roleTxt.setText(role1);\n                System.out.println(\"role1: \" + role1);\n\n            }else {\n                JOptionPane.showMessageDialog(null, \"No Profile Found\");\n            }\n        }catch (Exception e){\n            System.out.println(\"Error in displayProfileDetils: \" + e.getMessage());\n        }\n    }\n\n    // *******  Profile Picture *****************\n\n    public void showProfilePicture(String User,JLabel imageLbl) {\n        Connection con = DatabaseConnection.connect();\n        try {\n            String sql = \"SELECT Profile_pic FROM user WHERE UserName = ?\";\n            PreparedStatement pst = con.prepareStatement(sql);\n            pst.setString(1,User);\n            ResultSet rs = pst.executeQuery();\n\n            if (rs.next()) {\n                String fileName = rs.getString(\"Profile_pic\");\n\n                // If no profile picture set in DB, use default\n                if (fileName == null || fileName.trim().isEmpty()) {\n                    fileName = \"default.png\";\n                }\n\n                String path = \"JavaMiniProject/user_Pro_Pic/\" + fileName;\n                File imageFile = new File(path);\n\n                // If image file does not exist, fallback to default image\n                if (!imageFile.exists()) {\n                    path = \"JavaMiniProject/user_Pro_Pic/default.png\";\n                }\n\n                // Load and Resize Image to fit JLabel\n                ImageIcon imageIcon = new ImageIcon(path);\n\n                // Get JLabel size (designed from GUI builder)\n                int width = imageLbl.getWidth();\n                int height = imageLbl.getHeight();\n\n                // Default size safety check (in case label not ready)\n                if (width == 0 || height == 0) {\n                    width = 150;\n                    height = 150;\n                }\n\n                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);\n                imageLbl.setIcon(new ImageIcon(image));\n                imageLbl.repaint(); // Refresh label to show updated image\n            }\n        } catch (Exception e) {\n            System.out.println(\"Error in showProfilePicture: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n\n    public void deleteProfilePicture(String User,JLabel imageLbl) {\n        Connection con = DatabaseConnection.connect();\n        try{\n            String sql = \"UPDATE user SET Profile_pic = NULL WHERE UserName = ?\";\n            PreparedStatement pst = con.prepareStatement(sql);\n            pst.setString(1, User);\n\n            int result = pst.executeUpdate();\n\n            if (result > 0) {\n                // Set default image after deletion\n                String path = \"JavaMiniProject/user_Pro_Pic/default.png\";\n\n                // Get label size\n                int width = imageLbl.getWidth();\n                int height = imageLbl.getHeight();\n\n                if (width == 0 || height == 0) {\n                    width = 150;\n                    height = 150;\n                }\n\n                ImageIcon imageIcon = new ImageIcon(path);\n                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);\n                imageLbl.setIcon(new ImageIcon(image));\n                imageLbl.repaint();  // Refresh label\n\n                System.out.println(\"Profile picture deleted successfully.\");\n            } else {\n                System.out.println(\"No profile picture was found or username invalid.\");\n            }\n\n        } catch (Exception e) {\n            System.out.println(\"Error in deleteProfilePicture: \" + e.getMessage());\n        }\n    }\n\n    // ******* Add marks *****************\n\n    public void showmarkstable(String User_ID){\n       con = DatabaseConnection.connect();\n        try {\n\n            PreparedStatement pst = con.prepareStatement(\"SELECT * FROM marks WHERE Lec_id=?\"); {\n\n                pst.setString(1, User_ID);\n                ResultSet rs = pst.executeQuery();\n\n                DefaultTableModel model=new DefaultTableModel();\n\n                model.addColumn(\"Mark ID\");\n                model.addColumn(\"Student ID\");\n                model.addColumn(\"Lecturer ID\");\n                model.addColumn(\"Course Code\");\n                model.addColumn(\"Assignment 01\");\n                model.addColumn(\"Assignment 02\");\n                model.addColumn(\"Quiz_01\");\n                model.addColumn(\"Quiz_02\");\n                model.addColumn(\"Quiz_03\");\n                model.addColumn(\"Quiz_04\");\n                model.addColumn(\"Mid Exam Theory\");\n                model.addColumn(\"Mid Exam Practical\");\n                model.addColumn(\"End Exam Theory\");\n                model.addColumn(\"End Exam Practical\");\n\n                while (rs.next()) {\n                    model.addRow(new Object[]{\n                            rs.getString(\"Mark_id\"),\n                            rs.getString(\"Stu_id\"),\n                            rs.getString(\"Lec_id\"),\n                            rs.getString(\"Course_code\"),\n                            rs.getString(\"Assignment_01\"),\n                            rs.getString(\"Assignment_02\"),\n                            rs.getString(\"Quiz_01\"),\n                            rs.getString(\"Quiz_02\"),\n                            rs.getString(\"Quiz_03\"),\n                            rs.getString(\"Quiz_04\"),\n                            rs.getString(\"Mid_theory\"),\n                            rs.getString(\"Mid_practical\"),\n                            rs.getString(\"End_theory\"),\n                            rs.getString(\"End_practical\")\n                    });\n                }\n                marktable.setModel(model);\n            }\n        } catch (SQLException e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    public void addmarks(String User_ID){\n        con = DatabaseConnection.connect();\n\n        String MarkID = Mark_id_textfield.getText();\n        String studentId = student_id_textField.getText();\n        String coursecode = (String) coursecodecomboBox.getSelectedItem();\n        String markType = (String) mark_type_comboBox.getSelectedItem();\n        String mark = mark_textField.getText();\n\n        if (studentId.isEmpty() || MarkID.isEmpty() || mark.isEmpty()) {\n            JOptionPane.showMessageDialog(MainFrame, \"Please fill all the fields\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            return;\n        }\n\n        double markValue;\n\n        try {\n            markValue = Double.parseDouble(mark);\n        } catch (NumberFormatException e) {\n            JOptionPane.showMessageDialog(MainFrame, \"Only Accept numeric values\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            return;\n        }\n\n        try {\n            PreparedStatement checkStmt = con.prepareStatement(\"SELECT * FROM marks WHERE Stu_id=? AND Course_code=?\");\n            checkStmt.setString(1, studentId);\n            checkStmt.setString(2, coursecode);\n            ResultSet rs = checkStmt.executeQuery();\n\n            // 2. If not exists, insert with all zero values\n            if (!rs.next()) {\n                // Prepare the SQL query to insert values into the table\n                PreparedStatement insertStmt = con.prepareStatement(\n                        \"INSERT INTO marks (Mark_id,Stu_id, Course_code,Lec_id, Assignment_01,Assignment_02, Quiz_01, Quiz_02, Quiz_03, Quiz_04, Mid_theory, Mid_practical, End_theory, End_practical) \" +\n                                \"VALUES (?,?, ?, ?, 0,0,0,0,0,0,0,0,0,0)\");\n\n                // Set the parameters for the SQL statement\n                insertStmt.setString(1, MarkID);\n                insertStmt.setString(2, studentId);\n                insertStmt.setString(3, coursecode);\n                insertStmt.setString(4, User_ID);\n\n                insertStmt.executeUpdate();\n            }\n\n            // 3. Update the selected category with the actual mark\n            String updateQuery = \"UPDATE marks SET \" + markType + \"=? WHERE Stu_id=? AND Course_code=? AND Mark_id=?\";\n            PreparedStatement updateStmt = con.prepareStatement(updateQuery);\n            updateStmt.setDouble(1, markValue);\n            updateStmt.setString(2, studentId);\n            updateStmt.setString(3, coursecode);\n            updateStmt.setString(4, MarkID);\n            updateStmt.executeUpdate();\n            if(updateStmt.executeUpdate() == 0){\n                JOptionPane.showMessageDialog(MainFrame, \"No record was updated\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            }\n            else {\n                JOptionPane.showMessageDialog(MainFrame, \"Mark updated successfully!\");\n            }\n            student_id_textField.setText(\"\");\n            Mark_id_textfield.setText(\"\");\n            mark_textField.setText(\"\");\n            mark_type_comboBox.setSelectedIndex(-1);\n            coursecodecomboBox.setSelectedIndex(-1);\n\n            showmarkstable(User);\n\n        } catch (SQLException e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    public void deleteRecordFromTable(String markID){\n        con = DatabaseConnection.connect();\n\n        try {\n            PreparedStatement pstm = con.prepareStatement(\"DELETE FROM marks WHERE Mark_id=?\");\n            pstm.setString(1,markID);\n            int rowsAffected = pstm.executeUpdate();\n            if(rowsAffected<0){\n                JOptionPane.showMessageDialog(MainFrame, \"No record was deleted\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            }\n        }catch (SQLException e){\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    public void selectdeletingrecord(String User){\n        int selectedRow = marktable.getSelectedRow();\n        if (selectedRow == -1) {\n            JOptionPane.showMessageDialog(MainFrame, \"Please select a row to delete\", \"No Selection\", JOptionPane.WARNING_MESSAGE);\n        }\n        else {\n            String markID = marktable.getModel().getValueAt(selectedRow, 0).toString();\n            int confirm = JOptionPane.showConfirmDialog(MainFrame, \"Are you sure you want to delete this record?\", \"Confirm Delete\", JOptionPane.YES_NO_OPTION);\n            if (confirm == JOptionPane.YES_OPTION) {\n                deleteRecordFromTable(markID);\n                showmarkstable(User);\n            }}\n    }\n\n    public void coursecodeselection(String User_ID){\n        con = DatabaseConnection.connect();\n\n        try {\n\n            PreparedStatement ps = con.prepareStatement(\"SELECT Course_code FROM course WHERE Lec_id = ?\");\n            ps.setString(1, User_ID);\n            ResultSet rs = ps.executeQuery();\n\n            coursecodecomboBox.removeAllItems();\n            while (rs.next()) {\n                coursecodecomboBox.addItem(rs.getString(\"Course_code\"));\n            }\n\n            coursecodecomboBox.setSelectedIndex(-1);\n\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    // ******* Grade and GPU *****************\n\n    private void Gradegpushowtable(String studentId) {\n        con = DatabaseConnection.connect();\n\n        try {\n\n            PreparedStatement courseStmt = con.prepareStatement(\"SELECT DISTINCT Course_code FROM marks\");\n            ResultSet courseRs = courseStmt.executeQuery();\n\n            List<String> course_codes = new ArrayList<>();\n            while (courseRs.next()) {\n                course_codes.add(courseRs.getString(\"Course_code\"));\n            }\n\n            // Table column headers\n            String[] columns = new String[course_codes.size() + 2];\n            columns[0] = \"Stu_id\";\n            for (int i = 0; i < course_codes.size(); i++) {\n                columns[i + 1] = course_codes.get(i);\n            }\n            columns[columns.length - 1] = \"GPA\";\n            DefaultTableModel model = new DefaultTableModel(columns, 0);\n\n            // Only get the requested student\n            PreparedStatement studentStmt = con.prepareStatement(\"SELECT DISTINCT Stu_id FROM marks WHERE Stu_id = ?\");\n            studentStmt.setString(1, studentId);\n            ResultSet studentRs = studentStmt.executeQuery();\n\n            if (!studentRs.isBeforeFirst()) {\n                JOptionPane.showMessageDialog(MainFrame, \"Student ID not found!\", \"Error\", JOptionPane.ERROR_MESSAGE);\n                return;\n            }\n\n            while (studentRs.next()) {\n                String stu_id = studentRs.getString(\"Stu_id\");\n                Object[] row = new Object[columns.length];\n                row[0] = stu_id;\n\n                double totalGPA = 0.0;\n                double totalCredits = 0.0;\n\n                for (int i = 0; i < course_codes.size(); i++) {\n                    String courseId = course_codes.get(i);\n                    double totalMarks = Calculatetotalmarks(stu_id, courseId);\n\n                    double credit = getCredit(courseId);\n                    String grade = CalculateGrade(totalMarks);\n                    double gpa = getGpaValue(grade);\n\n                    row[i + 1] = grade;\n\n                    totalGPA += gpa * credit;\n                    totalCredits += credit;\n                }\n\n                if (totalCredits > 0) {\n                    double finalGPA = totalGPA / totalCredits;\n                    row[columns.length - 1] = String.format(\"%.2f\", finalGPA);\n                } else {\n                    row[columns.length - 1] = \"Hold\";\n                }\n\n                model.addRow(row);\n            }\n\n            Grade_GPA_Table.setModel(model);\n            Stu_number.setText(\"\");\n            con.close();\n\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    private void Gradegpushowtable() {\n\n        con = DatabaseConnection.connect();\n\n        try {\n\n            PreparedStatement courseStmt = con.prepareStatement(\"SELECT DISTINCT Course_code FROM marks\");\n            ResultSet courseRs = courseStmt.executeQuery();\n\n            List<String> course_codes = new ArrayList<>();\n\n            while (courseRs.next()) {\n                course_codes.add(courseRs.getString(\"Course_code\"));\n            }\n\n            // Set up table columns\n            String[] columns = new String[course_codes.size() + 2];\n            columns[0] = \"Stu_id\";\n            for (int i = 0; i < course_codes.size(); i++) {\n                columns[i + 1] = course_codes.get(i);\n            }\n            columns[columns.length - 1] = \"GPA\";\n            DefaultTableModel model = new DefaultTableModel(columns, 0);\n\n            // Get distinct student IDs\n            PreparedStatement studentStmt = con.prepareStatement(\"SELECT DISTINCT Stu_id FROM marks\");\n            ResultSet studentRs = studentStmt.executeQuery();\n\n            while (studentRs.next()) {\n                String stu_id = studentRs.getString(\"Stu_id\");\n                Object[] row = new Object[columns.length];\n                row[0] = stu_id;\n\n                double totalGPA = 0.0;\n                double totalCredits = 0.0;\n\n                for (int i = 0; i < course_codes.size(); i++) {\n                    String courseId = course_codes.get(i);\n\n                    double totalMarks = Calculatetotalmarks(stu_id, courseId);\n                    double credit = getCredit(courseId);\n                    String grade = CalculateGrade(totalMarks);\n                    double gpa = getGpaValue(grade);\n\n                    row[i + 1] = grade;\n\n                    totalGPA += gpa * credit;\n                    totalCredits += credit;\n                }\n\n                if (totalCredits > 0) {\n                    double finalGPA = totalGPA / totalCredits;\n                    row[columns.length - 1] = String.format(\"%.2f\", finalGPA);\n                } else {\n                    row[columns.length - 1] = \"Hold\";\n                }\n\n                model.addRow(row);\n            }\n\n            Grade_GPA_Table.setModel(model);\n            con.close();\n\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    private double Calculatetotalmarks(String stu_id,String course_Id) {\n\n        double Final_marks=0.0;\n\n        con = DatabaseConnection.connect();\n\n        try {\n            PreparedStatement markpstm = con.prepareStatement(\n                    \"SELECT Quiz_01, Quiz_02, Quiz_03, Quiz_04, Assignment_01,Assignment_02, Mid_theory, Mid_practical, End_theory, End_practical \" +\n                            \"FROM Marks WHERE Stu_id = ? AND Course_code = ?\"\n            );\n            markpstm.setString(1, stu_id);\n            markpstm.setString(2, course_Id);\n\n            ResultSet rs = markpstm.executeQuery();\n            if (rs.next()) {\n                double q1 = rs.getDouble(\"Quiz_01\");\n                double q2 = rs.getDouble(\"Quiz_02\");\n                double q3 = rs.getDouble(\"Quiz_03\");\n                double q4 = rs.getDouble(\"Quiz_04\");\n                double assignment01 = rs.getDouble(\"Assignment_01\");\n                double assignment02 = rs.getDouble(\"Assignment_02\");\n                double mid_theory = rs.getDouble(\"Mid_theory\");\n                double mid_practical = rs.getDouble(\"Mid_practical\");\n                double end_theory = rs.getDouble(\"End_theory\");\n                double end_practical = rs.getDouble(\"End_practical\");\n\n\n                double[] Quizzes = {q1, q2, q3, q4};\n                Arrays.sort(Quizzes);\n                double[] Assignments = {assignment01, assignment02};\n\n\n                switch (course_Id.trim()){\n\n                    case \"ICT2113\":\n                        double quizMark2113 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                        double midtermMark2113 = (mid_practical + mid_theory) / 2 * 0.20;\n                        double Finalmarks2113=(end_theory*0.40)+(end_practical*0.30);\n                        Final_marks=quizMark2113+midtermMark2113+Finalmarks2113;\n                        break;\n\n                    case \"ICT2122\":\n                        double quizMark2122 = (Quizzes[3] + Quizzes[2]+Quizzes[1]) / 3 * 0.10;\n                        Final_marks=quizMark2122+(Assignments[0]*0.10)+(mid_theory*0.20)+(end_theory*0.60);\n\n                        break;\n\n                    case \"ICT2132\":\n                        double quizMark2133 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                        double assessmentMark2133 = (Assignments[0] + Assignments[1]) / 2 * 0.20;\n                        double Finalmarks2133=(end_practical*0.70);\n                        Final_marks=quizMark2133+assessmentMark2133+Finalmarks2133;\n                        break;\n\n                    case \"ICT2142\":\n\n                        double AssessmentMark2142 = (Assignments[0])* 0.20;\n                        double MidtermMark2142 = (mid_practical)* 0.20;\n                        Final_marks=AssessmentMark2142+MidtermMark2142+(end_practical*0.60);\n                        break;\n\n                    case \"ICT2152\":\n\n                        double quizMark2152 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                        double assessmentMark2152 = (Assignments[0] + Assignments[1]) / 2 * 0.20;\n                        Final_marks=quizMark2152+assessmentMark2152+(end_theory*0.70);\n                        break;\n                }\n            }\n\n            con.close();\n\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n        return Final_marks;\n    }\n\n    private String CalculateGrade(double Final_marks) {\n        if (Final_marks >= 85) return \"A+\";\n        else if (Final_marks >= 70) return \"A\";\n        else if (Final_marks >= 65) return \"A-\";\n        else if (Final_marks >= 60) return \"B+\";\n        else if (Final_marks >= 55) return \"B\";\n        else if (Final_marks >= 50) return \"B-\";\n        else if (Final_marks >= 45) return \"C+\";\n        else if (Final_marks >= 40) return \"C\";\n        else if (Final_marks >= 35) return \"C-\";\n        else if (Final_marks >= 30) return \"D+\";\n        else if (Final_marks >= 25) return \"D\";\n        else return \"E\";\n    }\n\n    private double getCredit(String course_Id) {\n        double credit = 0.0;\n\n        con = DatabaseConnection.connect();\n\n        try {\n\n            PreparedStatement ps = con.prepareStatement(\"SELECT Credit FROM course WHERE Course_code = ?\");\n            ps.setString(1, course_Id);\n            ResultSet rs = ps.executeQuery();\n            if (rs.next()) {\n                credit = rs.getDouble(\"Credit\");\n            }\n\n            con.close();\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n\n        return credit;\n    }\n\n    private double getGpaValue(String grade) {\n        switch (grade) {\n            case \"A+\": case \"A\": return 4.0;\n            case \"A-\": return 3.7;\n            case \"B+\": return 3.3;\n            case \"B\": return 3.0;\n            case \"B-\": return 2.7;\n            case \"C+\": return 2.3;\n            case \"C\": return 2.0;\n            case \"C-\": return 1.7;\n            case \"D+\": return 1.3;\n            case \"D\": return 1.0;\n            case \"E\": default: return 0.0;\n        }\n    }\n\n    // ******* Undergraduate Details *****************\n\n    private void filterUgraduatesDetails(String stu_number) {\n\n        con = DatabaseConnection.connect();\n        try {\n\n            if (stu_number.startsWith(\"tg\")||stu_number.startsWith(\"TG\")) {\n\n                PreparedStatement pstm = con.prepareStatement(\"SELECT * FROM user WHERE UPPER(UserName) LIKE ?\");\n                pstm.setString(1, stu_number);\n\n                ResultSet rs = pstm.executeQuery();\n\n                String[] columnNames = {\"Student ID\", \"Name\",\"Date Of Birth\", \"Enrollment Date\", \"Address\", \"Email\", \"Phone Number\"};\n                DefaultTableModel model = new DefaultTableModel(columnNames, 0);\n\n                while (rs.next()) {\n                    model.addRow(new Object[]{\n                            rs.getString(\"UserName\"),\n                            rs.getString(\"Fname\")+\" \"+rs.getString(\"Lname\"),\n                            rs.getString(\"DoB\"),\n                            rs.getString(\"Enrollment_Date\"),\n                            rs.getString(\"Address\"),\n                            rs.getString(\"Email\"),\n                            rs.getString(\"Phone_No\")\n                    });\n                }\n\n                Stu_details_table.setModel(model);\n                ugStudentNumber.setText(\"\");\n\n                rs.close();\n                pstm.close();\n                con.close();\n            }\n            else {\n                JOptionPane.showMessageDialog(null, \"Access denied\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            }\n        }catch (SQLException ex){\n            JOptionPane.showMessageDialog(MainFrame, ex.getMessage(), \"Database Error\", JOptionPane.ERROR_MESSAGE);\n        }\n\n    }\n\n    private void allUgraduatesDetails(){\n\n        con = DatabaseConnection.connect();\n\n        try{\n            PreparedStatement pstm = con.prepareStatement(\" SELECT * FROM user WHERE LOWER(UserName)LIKE ?\");\n            pstm.setString(1,\"tg%\");\n            ResultSet rs = pstm.executeQuery();\n\n            String[] columnNames = {\"Student ID\", \"Name\",\"Date Of Birth\", \"Enrollment Date\", \"Address\", \"Email\", \"Phone Number\"};\n            DefaultTableModel model = new DefaultTableModel(columnNames, 0);\n\n            while (rs.next()) {\n                model.addRow(new Object[]{\n                        rs.getString(\"UserName\"),\n                        rs.getString(\"Fname\")+\" \"+rs.getString(\"Lname\"),\n                        rs.getString(\"DoB\"),\n                        rs.getString(\"Enrollment_Date\"),\n                        rs.getString(\"Address\"),\n                        rs.getString(\"Email\"),\n                        rs.getString(\"Phone_No\")\n                });\n            }\n\n            Stu_details_table.setModel(model);\n            Stu_number.setText(\"\");\n\n            rs.close();\n            pstm.close();\n            con.close();\n\n        }catch (SQLException x){\n            JOptionPane.showMessageDialog(MainFrame,x);\n        }\n    }\n\n    // ******* Attendance Eligibility *****************\n\n    private void attendanceTable(String User) {\n\n        con = DatabaseConnection.connect();\n        try {\n\n            PreparedStatement courseStmt = con.prepareStatement(\"SELECT DISTINCT Course_code FROM course WHERE Lec_id = ?\");\n            courseStmt.setString(1, User);\n            ResultSet courseRs = courseStmt.executeQuery();\n\n            List<String> lecturerCourses = new ArrayList<>();\n            while (courseRs.next()) {\n                lecturerCourses.add(courseRs.getString(\"Course_code\"));\n            }\n\n            String[] Column = new String[3 + 15];\n            Column[0] = \"Stu_id\";\n            Column[1] = \"Course_code\";\n            Column[2] = \"Course_type\";\n            for (int i = 1; i <= 15; i++) {\n                Column[2 + i] = \"Week \" + i;\n            }\n\n            Map<String, String[]> studentMap = new LinkedHashMap<>();\n\n            for (String Course_code : lecturerCourses) {\n                PreparedStatement pstm = con.prepareStatement(\"SELECT * FROM attendance WHERE Course_code = ?\");\n                pstm.setString(1, Course_code);\n                ResultSet rs = pstm.executeQuery();\n\n                while (rs.next()) {\n                    String Stu_id = rs.getString(\"Stu_id\");\n                    String Course_type = rs.getString(\"Course_type\");\n                    String status = rs.getString(\"Status\");\n                    int week_no = rs.getInt(\"Week_No\");\n\n                    String key = Stu_id + \"_\" + Course_code + \"_\" + Course_type;\n\n                    if (!studentMap.containsKey(key)) {\n                        String[] row = new String[3 + 15];\n                        row[0] = Stu_id;\n                        row[1] = Course_code;\n                        row[2] = Course_type;\n                        studentMap.put(key, row);\n                    }\n\n                    String[] existingRow = studentMap.get(key);\n                    if (week_no >= 1 && week_no <= 15) {\n                        existingRow[2 + week_no] = status;\n                    }\n                }\n            }\n\n            String[][] data = new String[studentMap.size()][3 + 15];\n            int i = 0;\n            for (String[] row : studentMap.values()) {\n                data[i++] = row;\n            }\n\n            Attendance_table.setModel(new javax.swing.table.DefaultTableModel(data, Column));\n            Attendance_table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\n\n        } catch (SQLException e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    private void allMedicels(String User) {\n\n        con=DatabaseConnection.connect();\n\n        try{\n\n            PreparedStatement courseStmt = con.prepareStatement(\"SELECT DISTINCT Course_code FROM course WHERE Lec_id = ?\");\n            courseStmt.setString(1, User);\n            ResultSet courseRs = courseStmt.executeQuery();\n\n            List<String> lecturerCourses = new ArrayList<>();\n            while (courseRs.next()) {\n                lecturerCourses.add(courseRs.getString(\"Course_code\"));\n            }\n\n            String[] Column = {\"Stu_id\", \"Course_code\", \"Week_No\", \"Day_No\", \"Status\"};\n            DefaultTableModel model = new DefaultTableModel(null, Column);\n            Attendance_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\n\n            boolean found = false;\n\n            for (String Course_code : lecturerCourses) {\n                PreparedStatement pstm = con.prepareStatement(\"SELECT * FROM Medical WHERE Course_code=? ORDER BY Stu_id\");\n                pstm.setString(1, Course_code);\n                ResultSet rs = pstm.executeQuery();\n\n                while (rs.next()) {\n                    found = true;\n                    String Stu_id = rs.getString(\"Stu_id\");\n                    String Medi_Course_code = rs.getString(\"Course_code\");\n                    String Week_No = rs.getString(\"Week_No\");\n                    String Day_No = rs.getString(\"Day_No\");\n                    String Status = rs.getString(\"Status\");\n\n                    model.addRow(new String[]{Stu_id, Medi_Course_code, Week_No, Day_No, Status});\n                }\n            }\n\n            if (!found) {\n                JOptionPane.showMessageDialog(MainFrame, \"Medical records not found\", \"Error\", JOptionPane.ERROR_MESSAGE);\n                return;\n            }\n\n            Attendance_table.setModel(model);\n        }catch (SQLException e){\n            JOptionPane.showMessageDialog(MainFrame,e);\n        }\n    }\n\n    private void allstudentattendanceprecent(String User) {\n\n        con=DatabaseConnection.connect();\n\n        try {\n            String[] Column = {\"Stu_id\", \"Course_Code\", \"Percentage\", \"Eligibility\"};\n            DefaultTableModel model = new DefaultTableModel(null, Column);\n            Attendance_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\n\n            PreparedStatement courseStmt = con.prepareStatement(\"SELECT DISTINCT Course_code FROM course WHERE Lec_id = ?\");\n            courseStmt.setString(1, User);\n            ResultSet courseRS = courseStmt.executeQuery();\n\n            while (courseRS.next()) {\n                String Course_code = courseRS.getString(\"Course_code\");\n\n                PreparedStatement studentStmt = con.prepareStatement(\"SELECT DISTINCT Stu_id FROM attendance WHERE Course_Code=?\");\n                studentStmt.setString(1, Course_code);\n                ResultSet studentRS = studentStmt.executeQuery();\n\n                while (studentRS.next()){\n                    String Stu_id = studentRS.getString(\"Stu_id\");\n\n                    PreparedStatement typeCheck = con.prepareStatement(\"SELECT DISTINCT Course_type FROM attendance WHERE Stu_id = ? AND Course_Code = ?\");\n                    typeCheck.setString(1, Stu_id);\n                    typeCheck.setString(2, Course_code);\n                    ResultSet typeRS = typeCheck.executeQuery();\n                    boolean hasTheory = false;\n                    boolean hasPractical = false;\n\n                    while (typeRS.next()) {\n                        String type = typeRS.getString(\"Course_type\");\n                        if (type.equalsIgnoreCase(\"Theory\")) hasTheory = true;\n                        if (type.equalsIgnoreCase(\"Practical\")) hasPractical = true;\n                    }\n\n                    double totalTheory = 0, presentTheory = 0;\n                    double totalPractical = 0, presentPractical = 0;\n\n                    PreparedStatement pstmTheory = con.prepareStatement(\"SELECT Lec_hour, Status FROM attendance WHERE Stu_id = ? AND Course_Code = ? AND Course_type = ?\");\n                    pstmTheory.setString(1, Stu_id);\n                    pstmTheory.setString(2, Course_code);\n                    pstmTheory.setString(3, \"Theory\");\n                    ResultSet rsTheory = pstmTheory.executeQuery();\n                    while (rsTheory.next()) {\n                        String status = rsTheory.getString(\"Status\");\n                        double lecHour = rsTheory.getDouble(\"Lec_hour\");\n\n                        totalTheory += lecHour;\n\n                        if (status.equalsIgnoreCase(\"Present\")) {\n                            presentTheory += lecHour;\n                        } else if (status.equalsIgnoreCase(\"Medical\")) {\n                            String medicalStatus = checkMedicalStatus(Stu_id, Course_code);\n                            if (medicalStatus.equalsIgnoreCase(\"Approved\")) {\n                                presentTheory += lecHour;\n                            }\n                        }\n\n                    }\n                    PreparedStatement pstmPractical = con.prepareStatement(\"SELECT Lec_hour, Status FROM attendance WHERE Stu_id = ? AND Course_Code = ? AND Course_type = ?\");\n                    pstmPractical.setString(1, Stu_id);\n                    pstmPractical.setString(2, Course_code);\n                    pstmPractical.setString(3, \"Practical\");\n                    ResultSet rsPractical = pstmPractical.executeQuery();\n\n                    while (rsPractical.next()) {\n                        String status = rsPractical.getString(\"Status\");\n                        double lecHour = rsPractical.getDouble(\"Lec_hour\");\n\n                        totalPractical += lecHour;\n\n                        if (status.equalsIgnoreCase(\"Present\")) {\n                            presentPractical += lecHour;\n\n                        } else if (status.equalsIgnoreCase(\"Medical\")) {\n                            String medicalStatus = checkMedicalStatus(Stu_id, Course_code);\n                            if (medicalStatus.equalsIgnoreCase(\"Approved\")) {\n                                presentPractical += lecHour;\n                            }\n                        }\n\n                    }\n\n                    double theoryPercent =(presentTheory / totalTheory) * 100;\n                    double practicalPercent =(presentPractical / totalPractical) * 100;\n                    double totalAll = totalTheory + totalPractical;\n                    double presentAll = presentTheory + presentPractical;\n                    double combinedPercent =(presentAll / totalAll) * 100;\n\n                    String theoryEligibility = (theoryPercent >= 80) ? \"Eligible\" : \"Not Eligible\";\n                    String practicalEligibility = (practicalPercent >= 80) ? \"Eligible\" : \"Not Eligible\";\n                    String combinedEligibility = (combinedPercent >= 80) ? \"Eligible\" : \"Not Eligible\";\n\n                    if (hasTheory && hasPractical) {\n                        model.addRow(new Object[]{Stu_id, Course_code + \"-T\", String.format(\"%.2f\", theoryPercent) + \"%\", theoryEligibility});\n                        model.addRow(new Object[]{Stu_id, Course_code + \"-P\", String.format(\"%.2f\", practicalPercent) + \"%\", practicalEligibility});\n                        model.addRow(new Object[]{Stu_id, Course_code + \"T,P\", String.format(\"%.2f\", combinedPercent) + \"%\", combinedEligibility});\n\n                    } else if (hasTheory) {\n                        model.addRow(new Object[]{Stu_id, Course_code, String.format(\"%.2f\", theoryPercent) + \"%\", theoryEligibility});\n\n                    } else if (hasPractical) {\n                        model.addRow(new Object[]{Stu_id, Course_code, String.format(\"%.2f\", practicalPercent) + \"%\", practicalEligibility});\n\n                    }\n\n                }\n\n            }\n\n            Attendance_table.setModel(model);\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n    private void uniqstudentattendancepresent(String Stu_id,String User) {\n\n        con = DatabaseConnection.connect();\n\n        try {\n            String[] Column = {\"Stu_id\", \"Course_Code\", \"Percentage\", \"Eligibility\"};\n            DefaultTableModel model = new DefaultTableModel(null, Column);\n            Attendance_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\n\n            PreparedStatement coursestm = con.prepareStatement(\"SELECT DISTINCT Course_code FROM course WHERE Lec_id = ?\");\n            coursestm.setString(1, User);\n            ResultSet courseRS = coursestm.executeQuery();\n\n            while (courseRS.next()) {\n                String Course_code1 = courseRS.getString(\"Course_code\");\n\n                PreparedStatement typeCheck = con.prepareStatement(\"SELECT DISTINCT Course_type FROM attendance WHERE Stu_id = ? AND Course_Code = ?\");\n                typeCheck.setString(1, Stu_id);\n                typeCheck.setString(2, Course_code1);\n                ResultSet typeRS = typeCheck.executeQuery();\n\n                boolean hasTheory = false;\n                boolean hasPractical = false;\n\n                while (typeRS.next()) {\n                    String type = typeRS.getString(\"Course_type\");\n                    if (type.equalsIgnoreCase(\"Theory\")) hasTheory = true;\n                    if (type.equalsIgnoreCase(\"Practical\")) hasPractical = true;\n                }\n\n                double totalTheory = 0, presentTheory = 0;\n                double totalPractical = 0, presentPractical = 0;\n\n                PreparedStatement pstmTheory = con.prepareStatement(\"SELECT Lec_hour, Status FROM attendance WHERE Stu_id = ? AND Course_Code = ? AND Course_type = ?\");\n                pstmTheory.setString(1, Stu_id);\n                pstmTheory.setString(2, Course_code1);\n                pstmTheory.setString(3, \"Theory\");\n                ResultSet rsTheory = pstmTheory.executeQuery();\n                while (rsTheory.next()) {\n                    double lecHour = rsTheory.getDouble(\"Lec_hour\");\n                    String status = rsTheory.getString(\"Status\");\n                    totalTheory += lecHour;\n                    if (status.equalsIgnoreCase(\"Present\")) {\n                        presentTheory += lecHour;\n                    } else if (status.equalsIgnoreCase(\"Medical\")) {\n                        String medicalStatus = checkMedicalStatus(Stu_id, Course_code1);\n                        if (medicalStatus.equalsIgnoreCase(\"Approved\")) {\n                            presentTheory += lecHour;\n                        }\n                    }\n                }\n\n                PreparedStatement pstmPractical = con.prepareStatement(\"SELECT Lec_hour, Status FROM attendance WHERE Stu_id = ? AND Course_Code = ? AND Course_type = ?\");\n                pstmPractical.setString(1, Stu_id);\n                pstmPractical.setString(2, Course_code1);\n                pstmPractical.setString(3, \"Practical\");\n                ResultSet rsPractical = pstmPractical.executeQuery();\n\n                while (rsPractical.next()) {\n                    double lecHour = rsPractical.getDouble(\"Lec_hour\");\n                    String status = rsPractical.getString(\"Status\");\n                    totalPractical += lecHour;\n                    if (status.equalsIgnoreCase(\"Present\")) {\n                        presentPractical += lecHour;\n                    } else if (status.equalsIgnoreCase(\"Medical\")) {\n                        String medicalStatus = checkMedicalStatus(Stu_id, Course_code1);\n                        if (medicalStatus.equalsIgnoreCase(\"Approved\")) {\n                            presentPractical += lecHour;\n                        }\n                    }\n                }\n\n                double theoryPercent = (presentTheory / totalTheory) * 100;\n                double practicalPercent = (presentPractical / totalPractical) * 100;\n                double totalAll = totalTheory + totalPractical;\n                double presentAll = presentTheory + presentPractical;\n                double combinedPercent = (presentAll / totalAll) * 100;\n\n                String theoryEligibility = (theoryPercent >= 80) ? \"Eligible\" : \"Not Eligible\";\n                String practicalEligibility = (practicalPercent >= 80) ? \"Eligible\" : \"Not Eligible\";\n                String combinedEligibility = (combinedPercent >= 80) ? \"Eligible\" : \"Not Eligible\";\n\n                if (hasTheory && hasPractical) {\n                    model.addRow(new Object[]{Stu_id, Course_code1 + \"-T\", String.format(\"%.2f\", theoryPercent) + \"%\", theoryEligibility});\n                    model.addRow(new Object[]{Stu_id, Course_code1 + \"-P\", String.format(\"%.2f\", practicalPercent) + \"%\", practicalEligibility});\n                    model.addRow(new Object[]{Stu_id, Course_code1 + \"-T,P\", String.format(\"%.2f\", combinedPercent) + \"%\", combinedEligibility});\n\n                } else if (hasTheory) {\n                    model.addRow(new Object[]{Stu_id, Course_code1, String.format(\"%.2f\", theoryPercent) + \"%\", theoryEligibility});\n                } else if (hasPractical) {\n                    model.addRow(new Object[]{Stu_id, Course_code1, String.format(\"%.2f\", practicalPercent) + \"%\", practicalEligibility});\n                }\n\n            }\n\n            Attendance_table.setModel(model);\n            showsingleattendancerecord(Stu_id,User);\n\n        }catch(Exception e){\n                JOptionPane.showMessageDialog(MainFrame, e);\n            }\n        }\n\n    private void showsingleattendancerecord(String Stu_id,String User){\n\n        con=DatabaseConnection.connect();\n\n        try{\n            PreparedStatement getCourses = con.prepareStatement(\"SELECT DISTINCT Course_Code FROM course WHERE Lec_id = ?\");\n            getCourses.setString(1, User);\n            ResultSet courseRS = getCourses.executeQuery();\n\n            String[] Column =new String[3+15];\n            Column[0]=\"Stu_id\";\n            Column[1]=\"Course_code\";\n            Column[2]=\"Course_type\";\n            for (int i = 1; i <= 15; i++) {\n                Column[2 + i] = \"Week \" + i;\n            }\n\n            Map<String,String[]>studentmap=new LinkedHashMap<>();\n\n            while (courseRS.next()){\n                String Course_code = courseRS.getString(\"Course_Code\");\n\n                PreparedStatement pstm = con.prepareStatement(\"SELECT * FROM attendance WHERE Stu_id=? AND Course_code=? ORDER BY Stu_id, Course_code, Week_No\");\n                pstm.setString(1,Stu_id);\n                pstm.setString(2,Course_code);\n                ResultSet rs = pstm.executeQuery();\n\n                while (rs.next()) {\n                    String Course_type=rs.getString(\"Course_type\");\n                    String status=rs.getString(\"Status\");\n\n                    int week_no=rs.getInt(\"Week_No\");\n\n                    String key=Stu_id+\"_\"+Course_code+\"_\"+Course_type;\n\n                    if(!studentmap.containsKey(key)){\n                        String[] row=new String[3+15];\n                        row[0]=Stu_id;\n                        row[1]=Course_code;\n                        row[2]=Course_type;\n                        studentmap.put(key,row);\n                    }\n                    String[] existingRow=studentmap.get(key);\n                    existingRow[2+week_no]=status;\n\n                }\n\n            }\n            String[][] data = new String[studentmap.size()][3 + 15];\n            int i = 0;\n            for (String[] row : studentmap.values()) {\n                data[i++] = row;\n            }\n\n            JFrame attendanceFrame = new JFrame(\"Attendance Records - Student: \" + Stu_id);\n            attendanceFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n            attendanceFrame.setSize(1000, 400); // Wider for more weeks\n            JTable table = new JTable(data, Column);\n            table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\n            JScrollPane scrollPane = new JScrollPane(table);\n            attendanceFrame.add(scrollPane);\n            attendanceFrame.setVisible(true);\n        }catch (SQLException e){\n            JOptionPane.showMessageDialog(MainFrame,e);\n        }\n    }\n\n    public String checkMedicalStatus(String Stu_id, String User) {\n\n        con=DatabaseConnection.connect();\n\n        try {\n            PreparedStatement getCourses = con.prepareStatement(\"SELECT DISTINCT Course_Code FROM course WHERE Lec_id = ?\"\n            );\n            getCourses.setString(1, User);\n            ResultSet courseRS = getCourses.executeQuery();\n\n            while (courseRS.next()) {\n                String Course_code = courseRS.getString(\"Course_Code\");\n\n                PreparedStatement med = con.prepareStatement(\"SELECT Status FROM medical WHERE Stu_id = ? AND Course_code = ?\");\n                med.setString(1, Stu_id);\n                med.setString(2, Course_code);\n                ResultSet rs = med.executeQuery();\n\n                while (rs.next()) {\n                    if (rs.getString(\"Status\").equalsIgnoreCase(\"Approved\")) {\n                        return \"Approved\";\n                    }\n                }\n\n            }\n\n        } catch (SQLException e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n        return \"None\";\n    }\n\n    // ******* CA Eligibility *****************\n\n    private void allcamarks(String User){\n\n        double CA_marks=0.0;\n\n        con=DatabaseConnection.connect();\n\n        try{\n\n            DefaultTableModel model=new DefaultTableModel();\n            model.setColumnIdentifiers(new String[]{\n                    \"Student_ID\",\"Course Code\",\"Quiz_01\", \"Quiz_02\", \"Quiz_03\", \"Quiz_04\",\n                    \"Assignment_01\", \"Assignment_02\", \"Mid_Theory\", \"Mid_Practical\",\n                    \"CA_Marks\", \"Eligibility\"\n\n            });\n\n            PreparedStatement courseStmt = con.prepareStatement(\"SELECT DISTINCT Course_code FROM course WHERE Lec_id = ?\");\n            courseStmt.setString(1, User);\n            ResultSet courseRS = courseStmt.executeQuery();\n\n            while (courseRS.next()) {\n                String Course_code = courseRS.getString(\"Course_code\");\n\n                PreparedStatement pstm=con.prepareStatement(\"select * from marks where Course_code=?\");\n                pstm.setString(1,Course_code);\n                ResultSet rs=pstm.executeQuery();\n\n                while(rs.next()){\n                    String stu_id=rs.getString(\"Stu_id\");\n                    double assignment1=rs.getDouble(\"Assignment_01\");\n                    double assignment2=rs.getDouble(\"Assignment_02\");\n                    double Quiz_01=rs.getDouble(\"Quiz_01\");\n                    double Quiz_02=rs.getDouble(\"Quiz_02\");\n                    double Quiz_03=rs.getDouble(\"Quiz_03\");\n                    double Quiz_04=rs.getDouble(\"Quiz_04\");\n                    double midtermtheory=rs.getDouble(\"Mid_theory\");\n                    double midtermpractical=rs.getDouble(\"Mid_practical\");\n\n\n                    double CA_cutoff1=19.5;\n                    double CA_cutoff2=15.0;\n                    String Eligibility=\"\";\n\n                    double[] Quizzes = {Quiz_01, Quiz_02, Quiz_03, Quiz_04};\n                    Arrays.sort(Quizzes);\n                    double[] Assignments = {assignment1, assignment2};\n\n\n                    switch (Course_code){\n                        case \"ICT2113\":\n\n                            double quizMark2113 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                            double midtermMark2113 = (midtermpractical + midtermtheory) / 2 * 0.20;\n                            CA_marks=quizMark2113+midtermMark2113;\n                            if(CA_marks>=CA_cutoff2){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2122\":\n\n                            double quizMark2122 = (Quizzes[3] + Quizzes[2]+Quizzes[1]) / 3 * 0.10;\n                            CA_marks=quizMark2122+(Assignments[0]*0.10)+(midtermtheory*0.20);\n                            if(CA_marks>=CA_cutoff1){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2132\":\n\n                            double quizMark2132 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                            double assessmentMark2132 = (Assignments[0] + Assignments[1]) / 2 * 0.20;\n                            CA_marks=quizMark2132+assessmentMark2132;\n                            if(CA_marks>=CA_cutoff2){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2142\":\n\n                            double AssessmentMark2142 = (Assignments[0])* 0.20;\n                            double MidtermMark2142 = (midtermpractical)* 0.20;\n                            CA_marks=AssessmentMark2142+MidtermMark2142;\n                            if(CA_marks>=CA_cutoff1){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2152\":\n\n                            double quizMark2152 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                            double assessmentMark2152 = (Assignments[0] + Assignments[1]) / 2 * 0.20;\n                            CA_marks=quizMark2152+assessmentMark2152;\n                            if(CA_marks>=CA_cutoff2){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                    }\n                    model.addRow(new Object[]{\n                            stu_id,Course_code,\n                            Quiz_01, Quiz_02, Quiz_03, Quiz_04,\n                            assignment1, assignment2,\n                            midtermtheory, midtermpractical,\n                            String.format(\"%.2f\", CA_marks),\n                            Eligibility\n                    });\n                }\n            }\n\n\n\n            CAEligibilitytable.setModel(model);\n\n        }catch (SQLException e){\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n//        return CA_marks;\n    }\n\n    private double uniqcamarks(String CA_Stu_Number,String User){\n\n        double CA_marks=0.0;\n\n        con=DatabaseConnection.connect();\n\n        try{\n\n            DefaultTableModel model=new DefaultTableModel();\n            model.setColumnIdentifiers(new String[]{\n                    \"Student_ID\",\"Course Code\", \"Quiz_01\", \"Quiz_02\", \"Quiz_03\", \"Quiz_04\",\n                    \"Assignment_01\", \"Assignment_02\", \"Mid_Theory\", \"Mid_Practical\",\n                    \"CA_Marks\", \"Eligibility\"\n\n            });\n\n            PreparedStatement courseStmt = con.prepareStatement(\"SELECT DISTINCT Course_code FROM course WHERE Lec_id = ?\");\n            courseStmt.setString(1, User);\n            ResultSet courseRS = courseStmt.executeQuery();\n\n            while (courseRS.next()) {\n                String Course_code = courseRS.getString(\"Course_code\");\n\n                PreparedStatement pstm=con.prepareStatement(\"select * from marks where Stu_id=? AND Course_code=?\");\n                pstm.setString(1,CA_Stu_Number);\n                pstm.setString(2,Course_code);\n                ResultSet rs=pstm.executeQuery();\n\n                while(rs.next()){\n\n                    double assignment1=rs.getDouble(\"Assignment_01\");\n                    double assignment2=rs.getDouble(\"Assignment_02\");\n                    double Quiz_01=rs.getDouble(\"Quiz_01\");\n                    double Quiz_02=rs.getDouble(\"Quiz_02\");\n                    double Quiz_03=rs.getDouble(\"Quiz_03\");\n                    double Quiz_04=rs.getDouble(\"Quiz_04\");\n                    double midtermtheory=rs.getDouble(\"Mid_theory\");\n                    double midtermpractical=rs.getDouble(\"Mid_practical\");\n\n\n                    double CA_cutoff1=19.5;\n                    double CA_cutoff2=15.0;\n                    String Eligibility=\"\";\n\n                    double[] Quizzes = {Quiz_01, Quiz_02, Quiz_03, Quiz_04};\n                    double[] Assignments = {assignment1, assignment2};\n\n                    switch (Course_code){\n                        case \"ICT2113\":\n                            Arrays.sort(Quizzes);\n                            double quizMark2113 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                            double midtermMark2113 = (midtermpractical + midtermtheory) / 2 * 0.20;\n                            CA_marks=quizMark2113+midtermMark2113;\n                            if(CA_marks>=CA_cutoff2){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2122\":\n                            Arrays.sort(Quizzes);\n                            double quizMark2122 = (Quizzes[3] + Quizzes[2]+Quizzes[1]) / 3 * 0.10;\n                            CA_marks=quizMark2122+(Assignments[0]*0.10)+(midtermtheory*0.20);\n                            if(CA_marks>=CA_cutoff1){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2132\":\n                            Arrays.sort(Quizzes);\n                            double quizMark2133 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                            double assessmentMark2133 = (Assignments[0] + Assignments[1]) / 2 * 0.20;\n                            CA_marks=quizMark2133+assessmentMark2133;\n                            if(CA_marks>=CA_cutoff2){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2142\":\n                            Arrays.sort(Quizzes);\n                            double AssessmentMark2142 = (Assignments[0])* 0.20;\n                            double MidtermMark2142 = (midtermpractical)* 0.20;\n                            CA_marks=AssessmentMark2142+MidtermMark2142;\n                            if(CA_marks>=CA_cutoff1){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                        case \"ICT2152\":\n                            Arrays.sort(Quizzes);\n                            double quizMark2152 = (Quizzes[3] + Quizzes[2]) / 2 * 0.10;\n                            double assessmentMark2152 = (Assignments[0] + Assignments[1]) / 2 * 0.20;\n                            CA_marks=quizMark2152+assessmentMark2152;\n                            if(CA_marks>=CA_cutoff2){\n                                Eligibility=\"Eligible\";\n                            }\n                            else{\n                                Eligibility=\"Not Eligible\";\n                            }\n                            break;\n                    }\n                    model.addRow(new Object[]{\n                            CA_Stu_Number,Course_code,\n                            Quiz_01, Quiz_02, Quiz_03, Quiz_04,\n                            assignment1, assignment2,\n                            midtermtheory, midtermpractical,\n                            String.format(\"%.2f\", CA_marks),\n                            Eligibility });\n            }\n\n            }\n\n            CAEligibilitytable.setModel(model);\n            CAstu_numbertextField.setText(\"\");\n\n        }catch (SQLException e){\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n        return CA_marks;\n    }\n\n    // ******* Notice *****************\n\n    public void addNoticeTitlesToComboBox(){\n        con = DatabaseConnection.connect();\n\n        try{\n            Connection conn = DatabaseConnection.connect();\n            String sql = \"SELECT * FROM Notice\";\n            PreparedStatement pstmt = conn.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            selectTitleCombo.removeAllItems();\n\n            while (rs.next()) {\n                String title = rs.getString(\"Title\");\n                selectTitleCombo.addItem(title); // Add each title to the combo box\n                System.out.println(\"Title: \" + title);\n            }\n        }catch(Exception e){\n            System.out.println(\"Error in add Notice Titles To ComboBox: \" + e.getMessage());\n        }\n    }\n\n    public void displayNoticeContent(String title) {\n        try {\n            noticeTxtArea.setText(\"\");\n            // Establish connection to the database to get the NoticeId based on the title\n            Connection con = DatabaseConnection.connect();\n            String sql = \"SELECT Notice_id FROM Notice WHERE Title = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, title);\n            ResultSet rs = pstmt.executeQuery();\n\n            if (rs.next()) {\n                String noticeId = rs.getString(\"Notice_id\");\n\n                // Read content from the corresponding text file (e.g., notice_1.txt)\n                File noticeFile = new File(\"JavaMiniProject/notices/notice_\" + noticeId + \".txt\");\n                System.out.println(\"noticeFile: \" + noticeId+ \" Displayed\");\n                BufferedReader reader = new BufferedReader(new FileReader(noticeFile));\n                StringBuilder content = new StringBuilder();\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    content.append(line).append(\"\\n\");\n                }\n\n                // Display the content in the JTextArea\n                noticeTxtArea.setText(content.toString());\n            }\n        } catch (SQLException | IOException e) {\n            System.out.println(\"Error in display Notice Content: \" + e.getMessage());\n        }\n    }\n\n    // ******* Add Materials *****************\n    private boolean listenerAdded = false;\n\n    private void showcoursetable(String User) {\n\n        con=DatabaseConnection.connect();\n\n        try{\n            PreparedStatement pstmt = con.prepareStatement(\"select Course_code,Course_name,Lecture_Material from course where lec_id=?\");\n            pstmt.setString(1, User);\n            ResultSet rs = pstmt.executeQuery();\n            DefaultTableModel model = new DefaultTableModel(new String[]{\"Course Code\", \"Course Name\", \"Lecture Material\"}, 0) {\n                @Override\n                public boolean isCellEditable(int row, int column) {\n                    return false; // Make all cells uneditable\n                }\n            };\n            while (rs.next()) {\n                model.addRow(new Object[]{\n                        rs.getString(\"Course_code\"),\n                        rs.getString(\"Course_name\"),\n                        rs.getString(\"Lecture_Material\")\n                });\n            }\n\n            Materials_Table.setModel(model);\n            Materials_Table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n            Materials_Table.setRowSelectionAllowed(true);\n            Materials_Table.setColumnSelectionAllowed(false);\n            Materials_Table.setCellSelectionEnabled(false);\n\n\n            if (!listenerAdded) {\n                Materials_Table.addMouseListener(new MouseAdapter() {\n                    public void mouseClicked(MouseEvent e) {\n                    if(e.getClickCount()==2) {\n                        int column = Materials_Table.columnAtPoint(e.getPoint());\n                        int row = Materials_Table.rowAtPoint(e.getPoint());\n\n                        // Check if clicked column is 'Lecture Material' (index 2)\n                        if (column == 2 && row != -1) {\n                            String filePath = Materials_Table.getValueAt(row, column).toString();\n                            openMaterial(filePath); // Call method to open the file\n                        }\n                    }\n                    }\n                });\n                listenerAdded = true; // Prevent multiple listener additions\n            }\n\n        }catch (SQLException e){\n            JOptionPane.showMessageDialog(MainFrame,e);\n        }\n    }\n\n    private void openMaterial(String filePath) {\n        File file = new File(filePath);\n        if (file.exists()) {\n            try {\n                Desktop.getDesktop().open(file); // Opens the file using the default system application\n            } catch (IOException e) {\n                JOptionPane.showMessageDialog(MainFrame, \"Error opening the file: \" + e.getMessage());\n            }\n        } else {\n            JOptionPane.showMessageDialog(MainFrame, \"File does not exist.\");\n        }\n    }\n\n    private void addmaterials(String Path,String User,String Course_code) {\n\n            con=DatabaseConnection.connect();\n\n        try{\n            PreparedStatement ps = con.prepareStatement(\"UPDATE course SET Lecture_Material = ? WHERE Lec_id = ? AND Course_code = ?\");\n\n            ps.setString(1, Path);\n            ps.setString(2, User);\n            ps.setString(3, Course_code);\n\n            int rowsUpdated = ps.executeUpdate();\n            if(rowsUpdated<0){\n                JOptionPane.showMessageDialog(MainFrame, \"Something went wrong\",\"Error\",JOptionPane.ERROR_MESSAGE);\n            }\n        }catch (SQLException e){\n            JOptionPane.showMessageDialog(MainFrame,e);\n        }\n    }\n\n    private void uploadfile(String User) {\n\n        String Course_code = (String) lecmaterialscoursecodedropdown.getSelectedItem();\n        if (Course_code == null) {\n            JOptionPane.showMessageDialog(MainFrame, \"Please select a course first!\",\"Error\",JOptionPane.ERROR_MESSAGE);\n            return;\n        }\n\n        JFileChooser fc = new JFileChooser();\n        fc.setDialogTitle(\"Select File\");\n        fc.setCurrentDirectory(new File(System.getProperty(\"user.home\")));\n        FileNameExtensionFilter filter = new FileNameExtensionFilter(\"PDF, Word, Excel Files\", \"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\");\n        fc.setFileFilter(filter);\n\n        int returnVal = fc.showOpenDialog(this);\n\n        if(returnVal == JFileChooser.APPROVE_OPTION) {\n            File selectedFile = fc.getSelectedFile();\n            String fileName = selectedFile.getName();\n\n            String destFolderPath = \"C:/Users/ASUS/Desktop/Git/JavaMiniProject/course_materials/\" + Course_code;\n            File destDir = new File(destFolderPath);\n            if (!destDir.exists()) {\n                destDir.mkdirs(); // Create folder if it doesn't exist\n            }\n\n            File destFile = new File(destDir, fileName);\n\n            try {\n                Files.copy(selectedFile.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\n                // Save relative or absolute path to DB\n                addmaterials(destFile.getAbsolutePath(), User, Course_code);\n                showcoursetable(User);\n                JOptionPane.showMessageDialog(MainFrame, \"Lecture material uploaded!\");\n            } catch (IOException e) {\n                JOptionPane.showMessageDialog(MainFrame, \"Failed to upload file: \" + e.getMessage());\n            }\n        }\n    }\n\n    private void deletematerial(String User) {\n\n        con=DatabaseConnection.connect();\n\n        try {\n            int selectedRow = Materials_Table.getSelectedRow();\n            if (selectedRow == -1) {\n                JOptionPane.showMessageDialog(MainFrame, \"Please select to delete\", \"No Selection\", JOptionPane.WARNING_MESSAGE);\n                return;\n            }\n            String Course_Code = Materials_Table.getModel().getValueAt(selectedRow, 0).toString();\n            String materialPath = Materials_Table.getModel().getValueAt(selectedRow, 2).toString();\n\n            int confirm = JOptionPane.showConfirmDialog(MainFrame, \"Are you sure you want to delete this material?\", \"Confirm Delete\", JOptionPane.YES_NO_OPTION);\n            if (confirm == JOptionPane.YES_OPTION) {\n                // 1. Delete the file from disk\n                File file = new File(materialPath);\n                if (file.exists() && file.delete()) {\n                    System.out.println(\"File deleted from system.\");\n                } else {\n                    System.out.println(\"File not found or could not be deleted.\");\n                }\n\n            PreparedStatement pstmt = con.prepareStatement(\"UPDATE course SET Lecture_Material = NULL WHERE Lec_id = ? AND Course_code =?\");\n            pstmt.setString(1, User);\n            pstmt.setString(2, Course_Code);\n            int rowsAffected = pstmt.executeUpdate();\n            if (rowsAffected > 0) {\n                JOptionPane.showMessageDialog(MainFrame, \"Lecture material deleted successfully.\");\n                showcoursetable(User);\n            } else {\n                JOptionPane.showMessageDialog(MainFrame, \"No record was deleted\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            }\n        }\n            showcoursetable(User);\n        }catch (SQLException e) {\n            JOptionPane.showMessageDialog(MainFrame,e);\n        }\n    }\n\n    private void populateCourseComboBox(String User) {\n        con=DatabaseConnection.connect();\n\n        try {\n            PreparedStatement ps = con.prepareStatement(\"SELECT Course_code FROM course WHERE Lec_id = ?\");\n            ps.setString(1, User);\n            ResultSet rs = ps.executeQuery();\n\n            lecmaterialscoursecodedropdown.removeAllItems();\n            while (rs.next()) {\n                lecmaterialscoursecodedropdown.addItem(rs.getString(\"Course_code\"));\n            }\n            lecmaterialscoursecodedropdown.setSelectedIndex(-1);\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(MainFrame, e);\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lecture/LecHome.java b/src/Lecture/LecHome.java
--- a/src/Lecture/LecHome.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Lecture/LecHome.java	(date 1745326429520)
@@ -7,10 +7,7 @@
 import javax.swing.filechooser.FileNameExtensionFilter;
 import javax.swing.table.DefaultTableModel;
 import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.awt.event.MouseAdapter;
-import java.awt.event.MouseEvent;
+import java.awt.event.*;
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileReader;
@@ -126,11 +123,11 @@
         setLocationRelativeTo(null);
         setVisible(true);
 
+        User=User_ID;
         displayProfileDetils(User_ID);
+        System.out.println("DEBUG - Username before calling showProfilePicture: " + User);
         showProfilePicture( User,imageLbl);
 
-        User=User_ID;
-
         CardLayout cardLayout = (CardLayout) (cardMainPanel.getLayout());
 
         profileButton.addActionListener(new ActionListener() {
@@ -150,8 +147,7 @@
         updateProfileButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-
-                    new Lec_profileupdate(User_ID);
+                new Lec_profileupdate(User_ID);
                 dispose();
 
             }
@@ -338,6 +334,23 @@
                 deletematerial(User_ID);
             }
         });
+
+        //###########################
+
+        imageLbl.addComponentListener(new ComponentAdapter() {
+            @Override
+            public void componentShown(ComponentEvent e) {
+                showProfilePicture(User, imageLbl);
+            }
+        });
+
+        // Inside your class
+//        imageLbl.addHierarchyListener(e -> {
+//            if ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0 && imageLbl.isShowing()) {
+//                showProfilePicture(User, imageLbl);
+//            }
+//        });
+
     }
 
      //    ***** get courses ********
@@ -421,52 +434,76 @@
 
     // *******  Profile Picture *****************
 
-    public void showProfilePicture(String User,JLabel imageLbl) {
-        Connection con = DatabaseConnection.connect();
+    public void showProfilePicture(String User, JLabel imageLbl) {
+        Connection con = null;
+        PreparedStatement pst = null;
+        ResultSet rs = null;
+
         try {
+            System.out.println("Connecting to database...");
+            con = DatabaseConnection.connect();
+            if (con == null) {
+                throw new Exception("Database connection is NULL.");
+            }
+
             String sql = "SELECT Profile_pic FROM user WHERE UserName = ?";
-            PreparedStatement pst = con.prepareStatement(sql);
-            pst.setString(1,User);
-            ResultSet rs = pst.executeQuery();
+            pst = con.prepareStatement(sql);
+            pst.setString(1, User);
+
+            System.out.println("Executing SQL query for user: " + User);
+            rs = pst.executeQuery();
 
             if (rs.next()) {
                 String fileName = rs.getString("Profile_pic");
+                System.out.println("Profile picture name from DB: " + fileName);
 
                 // If no profile picture set in DB, use default
                 if (fileName == null || fileName.trim().isEmpty()) {
                     fileName = "default.png";
+                    System.out.println("No picture found in DB, using: " + fileName);
                 }
 
-                String path = "JavaMiniProject/user_Pro_Pic/" + fileName;
+                String path = "user_Pro_Pic/" + fileName;
                 File imageFile = new File(path);
 
-                // If image file does not exist, fallback to default image
+                // Check if image file exists
                 if (!imageFile.exists()) {
-                    path = "JavaMiniProject/user_Pro_Pic/default.png";
+                    System.out.println("File not found at path: " + path + ", using default image.");
+                    path = "user_Pro_Pic/default.png";
                 }
 
-                // Load and Resize Image to fit JLabel
+                System.out.println("Final image path: " + path);
                 ImageIcon imageIcon = new ImageIcon(path);
 
-                // Get JLabel size (designed from GUI builder)
                 int width = imageLbl.getWidth();
                 int height = imageLbl.getHeight();
 
-                // Default size safety check (in case label not ready)
+                // Label size check
                 if (width == 0 || height == 0) {
+                    System.out.println("Label size not ready, setting to default 150x150.");
                     width = 150;
                     height = 150;
                 }
 
                 Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
                 imageLbl.setIcon(new ImageIcon(image));
-                imageLbl.repaint(); // Refresh label to show updated image
+                imageLbl.repaint(); // Refresh label
+                System.out.println("Profile picture loaded successfully!");
+
+            } else {
+                System.out.println("No user found with username: " + User);
             }
+
         } catch (Exception e) {
-            System.out.println("Error in showProfilePicture: " + e.getMessage());
+            System.out.println("Error in showProfilePicture(): " + e.getMessage());
             e.printStackTrace();
+        } finally {
+            try { if (rs != null) rs.close(); } catch (Exception e) { System.out.println("Error closing ResultSet: " + e.getMessage()); }
+            try { if (pst != null) pst.close(); } catch (Exception e) { System.out.println("Error closing PreparedStatement: " + e.getMessage()); }
+            try { if (con != null) con.close(); } catch (Exception e) { System.out.println("Error closing Connection: " + e.getMessage()); }
         }
     }
+
 
     public void deleteProfilePicture(String User,JLabel imageLbl) {
         Connection con = DatabaseConnection.connect();
Index: src/Lecture/Lec_profileupdate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Lecture;\n\nimport database.DatabaseConnection;\nimport database.Session;\nimport student.StuHome;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.File;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\n\npublic class Lec_profileupdate extends JFrame {\n    private JPanel mainPanel;\n    private JLabel updateProfileMainLbl;\n    private JPanel detailPanel;\n    private JLabel firstNameLbl;\n    private JTextField firstNameTxt;\n    private JLabel lastNameLbl;\n    private JTextField lastNameTxt;\n    private JLabel addressLbl;\n    private JLabel emailLbl;\n    private JLabel pNoLbl;\n    private JTextField addressTxt;\n    private JTextField emailTxt;\n    private JTextField pNoTxt;\n    private JTextField proPicTxt;\n    private JButton uploadAnImageButton;\n    private JButton updateProfileButton;\n    private JButton cancelButton;\n\n    public Lec_profileupdate(String User_ID) {\n        setContentPane(mainPanel);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setTitle(\"Student Home\");\n        setSize(1024, 768);\n        setLocationRelativeTo(null);\n        setVisible(true);\n        uploadAnImageButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                uploadProfilePicture();\n            }\n        });\n        updateProfileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                updateStudentDetails(User_ID);\n            }\n        });\n        cancelButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new StuHome();\n                dispose();\n            }\n        });\n    }\n\n    public void updateStudentDetails(String User_ID) {\n        String firstName = firstNameTxt.getText();\n        String lastName = lastNameTxt.getText();\n        String address = addressTxt.getText();\n        String email = emailTxt.getText();\n        String pNo = pNoTxt.getText();\n//        String proPic = proPicTxt.getText();\n\n        File file = new File(proPicTxt.getText());\n        String proPic = file.getName();\n\n        Connection con = null;\n        PreparedStatement pst = null;\n        ResultSet rs = null;\n\n        try {\n            con = DatabaseConnection.connect();\n            String sql = \"UPDATE User SET FName = ?, LName = ?, Address = ?, Email = ?, Phone_No = ?, Profile_pic = ? WHERE UserName = ?\";\n            pst = con.prepareStatement(sql);\n\n            pst.setString(1, firstName);\n            pst.setString(2, lastName);\n            pst.setString(3, address);\n            pst.setString(4, email);\n            pst.setString(5, pNo);\n            pst.setString(6, proPic);\n            pst.setString(7,User_ID);\n\n            int i = pst.executeUpdate();\n\n            if (i > 0) {\n                JOptionPane.showMessageDialog(null, \"Student Profile Updated\");\n            } else {\n                JOptionPane.showMessageDialog(null, \"Student Profile Not Updated\");\n            }\n\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(null, \"User Update Failed\");\n            e.printStackTrace();\n        }\n    }\n\n    public void uploadProfilePicture() {\n        JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Select Profile Picture\");\n\n        // Optional: allow only image files\n        fileChooser.setAcceptAllFileFilterUsed(false);\n        fileChooser.addChoosableFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(\"Image Files\", \"jpg\", \"jpeg\", \"png\", \"gif\"));\n\n        int result = fileChooser.showOpenDialog(this);\n\n        if (result == JFileChooser.APPROVE_OPTION) {\n            File selectedFile = fileChooser.getSelectedFile();\n            String imagePath = selectedFile.getAbsolutePath();\n\n            // Set the selected file path into the text field\n            proPicTxt.setText(imagePath);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lecture/Lec_profileupdate.java b/src/Lecture/Lec_profileupdate.java
--- a/src/Lecture/Lec_profileupdate.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Lecture/Lec_profileupdate.java	(date 1745323511288)
@@ -54,7 +54,7 @@
         cancelButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-                new StuHome();
+                new LecHome(User_ID);
                 dispose();
             }
         });
@@ -89,11 +89,12 @@
             pst.setString(7,User_ID);
 
             int i = pst.executeUpdate();
+            System.out.println("Selected lecture id : " +User_ID);
 
             if (i > 0) {
-                JOptionPane.showMessageDialog(null, "Student Profile Updated");
+                JOptionPane.showMessageDialog(null, "Lecturer Profile Updated");
             } else {
-                JOptionPane.showMessageDialog(null, "Student Profile Not Updated");
+                JOptionPane.showMessageDialog(null, "Lecturer Profile Not Updated");
             }
 
         } catch (Exception e) {
Index: src/Technical_officer/updateTOprofile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Technical_officer;\n\nimport database.DatabaseConnection;\nimport database.Session;\nimport student.StuHome;\n\nimport javax.swing.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.File;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\n\n\npublic class updateTOprofile extends JFrame {\n    private JPanel mainPanel;\n    private JLabel updateProfileMainLbl;\n    private JPanel detailPanel;\n    private JLabel firstNameLbl;\n    private JTextField firstNameTxt;\n    private JLabel lastNameLbl;\n    private JTextField lastNameTxt;\n    private JLabel addressLbl;\n    private JLabel emailLbl;\n    private JLabel pNoLbl;\n    private JTextField addressTxt;\n    private JTextField emailTxt;\n    private JTextField pNoTxt;\n    private JTextField proPicTxt;\n    private JButton uploadAnImageButton;\n    private JButton updateProfileButton;\n    private JButton cancelButton;\n\n    public updateTOprofile() {\n\n        setContentPane(mainPanel);\n        setTitle(\"Update to Profile\");\n        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n        setLocationRelativeTo(null);\n        setSize(2000, 1000);\n        setVisible(true);\n\n        uploadAnImageButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                uploadProfilePicture();\n            }\n        });\n        updateProfileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                System.out.println(\"Update Profile Button pressed\");\n                updateStudentDetails();\n            }\n        });\n        cancelButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new toHome();\n                dispose();\n            }\n        });\n    }\n    public void updateStudentDetails() {\n        String firstName = firstNameTxt.getText();\n        String lastName = lastNameTxt.getText();\n        String address = addressTxt.getText();\n        String email = emailTxt.getText();\n        String pNo = pNoTxt.getText();\n        String proPic = proPicTxt.getText();\n\n        Connection con = null;\n        PreparedStatement pst = null;\n        ResultSet rs = null;\n\n        try{\n            con = DatabaseConnection.connect();\n            String sql = \"UPDATE User SET FName = ?, LName = ?, Address = ?, Email = ?, Phone_No = ?, ProfilePic = ? WHERE UserName = ?\";\n            pst = con.prepareStatement(sql);\n\n            pst.setString(1, firstName);\n            pst.setString(2, lastName);\n            pst.setString(3, address);\n            pst.setString(4, email);\n            pst.setString(5, pNo);\n            pst.setString(6, proPic);\n            pst.setString(6, Session.loggedInUsername);\n\n            int i = pst.executeUpdate();\n\n            if(i>0){\n                JOptionPane.showMessageDialog(null, \"Student Profile Updated\");\n            }else{\n                JOptionPane.showMessageDialog(null, \"Student Profile Not Updated\");\n            }\n        }catch (Exception e){\n            JOptionPane.showMessageDialog(null, \"User Update Failed\");\n        }\n    }\n\n    public void uploadProfilePicture() {\n        JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Select Profile Picture\");\n\n        // Optional: allow only image files\n        fileChooser.setAcceptAllFileFilterUsed(false);\n        fileChooser.addChoosableFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(\"Image Files\", \"jpg\", \"jpeg\", \"png\", \"gif\"));\n\n        int result = fileChooser.showOpenDialog(this);\n\n        if (result == JFileChooser.APPROVE_OPTION) {\n            File selectedFile = fileChooser.getSelectedFile();\n            String imagePath = selectedFile.getAbsolutePath();\n\n            // Set the selected file path into the text field\n            proPicTxt.setText(imagePath);\n        }\n    }\n\n    public static void main(String[] args) {\n        new updateTOprofile();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Technical_officer/updateTOprofile.java b/src/Technical_officer/updateTOprofile.java
--- a/src/Technical_officer/updateTOprofile.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Technical_officer/updateTOprofile.java	(date 1745333804005)
@@ -35,7 +35,7 @@
     public updateTOprofile() {
 
         setContentPane(mainPanel);
-        setTitle("Update to Profile");
+        setTitle("Update Technical Officer Profile");
         setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
         setLocationRelativeTo(null);
         setSize(2000, 1000);
@@ -51,24 +51,28 @@
             @Override
             public void actionPerformed(ActionEvent e) {
                 System.out.println("Update Profile Button pressed");
-                updateStudentDetails();
+                updateTODetails();
             }
         });
         cancelButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-                new toHome();
                 dispose();
+                new toHome();
+
             }
         });
     }
-    public void updateStudentDetails() {
+    public void updateTODetails() {
         String firstName = firstNameTxt.getText();
         String lastName = lastNameTxt.getText();
         String address = addressTxt.getText();
         String email = emailTxt.getText();
         String pNo = pNoTxt.getText();
-        String proPic = proPicTxt.getText();
+//        String proPic = proPicTxt.getText();
+
+        File file = new File(proPicTxt.getText());
+        String proPic = file.getName();
 
         Connection con = null;
         PreparedStatement pst = null;
@@ -76,7 +80,7 @@
 
         try{
             con = DatabaseConnection.connect();
-            String sql = "UPDATE User SET FName = ?, LName = ?, Address = ?, Email = ?, Phone_No = ?, ProfilePic = ? WHERE UserName = ?";
+            String sql = "UPDATE User SET FName = ?, LName = ?, Address = ?, Email = ?, Phone_No = ?, Profile_pic = ? WHERE UserName = ?";
             pst = con.prepareStatement(sql);
 
             pst.setString(1, firstName);
@@ -85,7 +89,7 @@
             pst.setString(4, email);
             pst.setString(5, pNo);
             pst.setString(6, proPic);
-            pst.setString(6, Session.loggedInUsername);
+            pst.setString(7, Session.loggedInUsername);
 
             int i = pst.executeUpdate();
 
@@ -96,6 +100,7 @@
             }
         }catch (Exception e){
             JOptionPane.showMessageDialog(null, "User Update Failed");
+            e.printStackTrace();
         }
     }
 
@@ -118,7 +123,7 @@
         }
     }
 
-    public static void main(String[] args) {
-        new updateTOprofile();
-    }
+//    public static void main(String[] args) {
+//        new updateTOprofile();
+//    }
 }
Index: src/Admin/AdHome.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<form xmlns=\"http://www.intellij.com/uidesigner/form/\" version=\"1\" bind-to-class=\"Admin.AdHome\">\n  <grid id=\"27dc6\" binding=\"mainPanel\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n    <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n    <constraints>\n      <xy x=\"20\" y=\"20\" width=\"1408\" height=\"634\"/>\n    </constraints>\n    <properties>\n      <background color=\"-66049\"/>\n    </properties>\n    <border type=\"none\"/>\n    <children>\n      <grid id=\"25ce1\" binding=\"headingpanel\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n        <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n        <constraints>\n          <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n        </constraints>\n        <properties>\n          <background color=\"-16758099\"/>\n          <foreground color=\"-17063\"/>\n        </properties>\n        <border type=\"none\" title=\"\"/>\n        <children>\n          <component id=\"7ae68\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font name=\"Inter\" size=\"72\" style=\"1\"/>\n              <foreground color=\"-17063\"/>\n              <text value=\"STUDENT MANAGEMENT SYSTEM\"/>\n            </properties>\n          </component>\n          <component id=\"cdf39\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"24\" style=\"1\"/>\n              <text value=\"Faculty Of Technology University Of Ruhuna\"/>\n            </properties>\n          </component>\n          <hspacer id=\"51aad\">\n            <constraints>\n              <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n          </hspacer>\n          <component id=\"4eb17\" class=\"javax.swing.JButton\" binding=\"logOutButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"1\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"4\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"100\" height=\"40\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Log Out\"/>\n            </properties>\n          </component>\n        </children>\n      </grid>\n      <grid id=\"e3804\" binding=\"buttonpanel\" layout-manager=\"GridLayoutManager\" row-count=\"4\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n        <margin top=\"10\" left=\"50\" bottom=\"10\" right=\"50\"/>\n        <constraints>\n          <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n            <preferred-size width=\"10\" height=\"-1\"/>\n          </grid>\n        </constraints>\n        <properties>\n          <background color=\"-16758099\"/>\n        </properties>\n        <border type=\"none\"/>\n        <children>\n          <component id=\"cb7e4\" class=\"javax.swing.JButton\" binding=\"profileButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"1000\" height=\"60\"/>\n                <maximum-size width=\"1000\" height=\"60\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n              <font size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Profile\"/>\n            </properties>\n          </component>\n          <component id=\"6ce70\" class=\"javax.swing.JButton\" binding=\"courseButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"750\" height=\"60\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Course\"/>\n            </properties>\n          </component>\n          <component id=\"23224\" class=\"javax.swing.JButton\" binding=\"timeTableButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"750\" height=\"60\"/>\n                <maximum-size width=\"750\" height=\"60\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Time Table\"/>\n            </properties>\n          </component>\n          <component id=\"43a1a\" class=\"javax.swing.JButton\" binding=\"noticeButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"750\" height=\"60\"/>\n                <maximum-size width=\"750\" height=\"60\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Notice\"/>\n            </properties>\n          </component>\n        </children>\n      </grid>\n      <grid id=\"fbb4c\" binding=\"cardpanel\" layout-manager=\"CardLayout\" hgap=\"0\" vgap=\"0\">\n        <constraints>\n          <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n        </constraints>\n        <properties/>\n        <border type=\"none\"/>\n        <children>\n          <grid id=\"1f1a8\" binding=\"Profilecard\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"10\" left=\"10\" bottom=\"10\" right=\"10\"/>\n            <constraints>\n              <card name=\"Profile\"/>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n            </properties>\n            <border type=\"none\"/>\n            <children>\n              <grid id=\"b12ae\" binding=\"profilepanel\" layout-manager=\"GridLayoutManager\" row-count=\"7\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"10\" left=\"10\" bottom=\"10\" right=\"10\"/>\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-66049\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"f4288\" class=\"javax.swing.JLabel\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16758099\"/>\n                      <font name=\"Inter\" size=\"72\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Profile\"/>\n                    </properties>\n                  </component>\n                  <component id=\"a6aa\" class=\"javax.swing.JLabel\">\n                    <constraints>\n                      <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties>\n                      <font size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"First Name \"/>\n                    </properties>\n                  </component>\n                  <component id=\"2f8bb\" class=\"javax.swing.JTextField\" binding=\"textField1\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties/>\n                  </component>\n                  <component id=\"f544c\" class=\"javax.swing.JLabel\">\n                    <constraints>\n                      <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties>\n                      <font size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Last Name\"/>\n                    </properties>\n                  </component>\n                  <component id=\"ffbc0\" class=\"javax.swing.JTextField\" binding=\"textField2\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"2\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties/>\n                  </component>\n                  <component id=\"737dc\" class=\"javax.swing.JLabel\">\n                    <constraints>\n                      <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties>\n                      <font size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Adress\"/>\n                    </properties>\n                  </component>\n                  <component id=\"85bf7\" class=\"javax.swing.JLabel\">\n                    <constraints>\n                      <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties>\n                      <font size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Email Adress\"/>\n                    </properties>\n                  </component>\n                  <component id=\"f89cf\" class=\"javax.swing.JLabel\">\n                    <constraints>\n                      <grid row=\"5\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties>\n                      <font size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Phone Number\"/>\n                    </properties>\n                  </component>\n                  <component id=\"f6f4a\" class=\"javax.swing.JLabel\">\n                    <constraints>\n                      <grid row=\"6\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties>\n                      <font size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Role\"/>\n                    </properties>\n                  </component>\n                  <component id=\"c8bed\" class=\"javax.swing.JTextField\" binding=\"textField3\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"3\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties/>\n                  </component>\n                  <component id=\"cd254\" class=\"javax.swing.JTextField\" binding=\"textField4\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"4\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties/>\n                  </component>\n                  <component id=\"7d325\" class=\"javax.swing.JTextField\" binding=\"textField5\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"5\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties/>\n                  </component>\n                  <component id=\"a52d\" class=\"javax.swing.JTextField\" binding=\"textField6\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"6\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties/>\n                  </component>\n                </children>\n              </grid>\n              <grid id=\"e601d\" binding=\"imagemainpanel\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n                <constraints>\n                  <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n                    <preferred-size width=\"200\" height=\"200\"/>\n                  </grid>\n                </constraints>\n                <properties>\n                  <background color=\"-66049\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <grid id=\"56cec\" binding=\"imagepanel\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                    <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"300\" height=\"300\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16777216\"/>\n                    </properties>\n                    <border type=\"none\"/>\n                    <children/>\n                  </grid>\n                  <component id=\"6138\" class=\"javax.swing.JButton\" binding=\"updateProfileButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"1\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"300\" height=\"60\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"16\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Update Profile\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n            </children>\n          </grid>\n          <grid id=\"9871d\" binding=\"CourseCard\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n            <constraints>\n              <card name=\"Course\"/>\n            </constraints>\n            <properties/>\n            <border type=\"none\"/>\n            <children>\n              <scrollpane id=\"c2771\">\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties/>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"de61f\" class=\"javax.swing.JTable\" binding=\"CourseTable\">\n                    <constraints/>\n                    <properties/>\n                  </component>\n                </children>\n              </scrollpane>\n              <component id=\"d1f59\" class=\"javax.swing.JLabel\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <font size=\"24\" style=\"1\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"Course Details\"/>\n                </properties>\n              </component>\n              <grid id=\"4fed\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n                <constraints>\n                  <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties/>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"52bdb\" class=\"javax.swing.JButton\" binding=\"addCourseButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"20\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Add Course\"/>\n                    </properties>\n                  </component>\n                  <component id=\"96f7d\" class=\"javax.swing.JButton\" binding=\"updateCourseButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"20\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Update Course\"/>\n                    </properties>\n                  </component>\n                  <component id=\"82f66\" class=\"javax.swing.JButton\" binding=\"deleteButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"20\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Delete\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n            </children>\n          </grid>\n          <grid id=\"531cf\" binding=\"TimeTableCard\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n            <constraints>\n              <card name=\"TimeTable\"/>\n            </constraints>\n            <properties/>\n            <border type=\"none\"/>\n            <children>\n              <scrollpane id=\"2c0a8\" binding=\"TimeTable\">\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties/>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"90a80\" class=\"javax.swing.JTable\" binding=\"Timetable1\">\n                    <constraints/>\n                    <properties/>\n                  </component>\n                </children>\n              </scrollpane>\n              <component id=\"446c9\" class=\"javax.swing.JLabel\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <font size=\"20\" style=\"1\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"Time Table Details\"/>\n                </properties>\n              </component>\n              <grid id=\"10814\" binding=\"buton\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n                <constraints>\n                  <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties/>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"589b8\" class=\"javax.swing.JButton\" binding=\"addTimeTableButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                        <maximum-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"20\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Add Time Table\"/>\n                    </properties>\n                  </component>\n                  <component id=\"a93ef\" class=\"javax.swing.JButton\" binding=\"updateTimeTableButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                        <maximum-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"20\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Update Time Table\"/>\n                    </properties>\n                  </component>\n                  <component id=\"785a1\" class=\"javax.swing.JButton\" binding=\"deleteButton1\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                        <maximum-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"20\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Delete\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n            </children>\n          </grid>\n          <grid id=\"2d03a\" binding=\"NoticeCard\" layout-manager=\"GridLayoutManager\" row-count=\"4\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n            <constraints>\n              <card name=\"Notice\"/>\n            </constraints>\n            <properties/>\n            <border type=\"none\"/>\n            <children>\n              <scrollpane id=\"27874\">\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties/>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"618e1\" class=\"javax.swing.JTable\" binding=\"NoticeTable\">\n                    <constraints/>\n                    <properties/>\n                  </component>\n                </children>\n              </scrollpane>\n              <component id=\"56577\" class=\"javax.swing.JLabel\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <font size=\"26\" style=\"1\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"NOTICE\"/>\n                </properties>\n              </component>\n              <grid id=\"ee34a\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n                <constraints>\n                  <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties/>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"d8972\" class=\"javax.swing.JButton\" binding=\"addNoticeButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                        <maximum-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"16\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Add Notice \"/>\n                    </properties>\n                  </component>\n                  <component id=\"3f9d\" class=\"javax.swing.JButton\" binding=\"deleteNoticeButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                        <maximum-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"16\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Delete Notice\"/>\n                    </properties>\n                  </component>\n                  <component id=\"57789\" class=\"javax.swing.JButton\" binding=\"viewNoticeButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"0\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"150\" height=\"40\"/>\n                        <maximum-size width=\"150\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-2368285\"/>\n                      <font size=\"16\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"View Notice\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n              <component id=\"115fe\" class=\"javax.swing.JTextArea\" binding=\"textArea1\" default-binding=\"true\">\n                <constraints>\n                  <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n                    <preferred-size width=\"150\" height=\"150\"/>\n                  </grid>\n                </constraints>\n                <properties>\n                  <background color=\"-9264197\"/>\n                </properties>\n              </component>\n            </children>\n          </grid>\n        </children>\n      </grid>\n    </children>\n  </grid>\n</form>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Admin/AdHome.form b/src/Admin/AdHome.form
--- a/src/Admin/AdHome.form	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Admin/AdHome.form	(date 1745338119302)
@@ -3,7 +3,7 @@
   <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
     <margin top="0" left="0" bottom="0" right="0"/>
     <constraints>
-      <xy x="20" y="20" width="1408" height="634"/>
+      <xy x="20" y="20" width="1408" height="655"/>
     </constraints>
     <properties>
       <background color="-66049"/>
@@ -284,7 +284,7 @@
                 </properties>
                 <border type="none"/>
                 <children>
-                  <grid id="56cec" binding="imagepanel" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+                  <grid id="56cec" binding="imagepanel" layout-manager="GridLayoutManager" row-count="3" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
                     <margin top="0" left="0" bottom="0" right="0"/>
                     <constraints>
                       <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="0" indent="0" use-parent-layout="false">
@@ -292,10 +292,37 @@
                       </grid>
                     </constraints>
                     <properties>
-                      <background color="-16777216"/>
+                      <background color="-66049"/>
                     </properties>
                     <border type="none"/>
-                    <children/>
+                    <children>
+                      <component id="e1efb" class="javax.swing.JLabel" binding="imgDisplayLbl">
+                        <constraints>
+                          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="1" fill="0" indent="0" use-parent-layout="false">
+                            <preferred-size width="250" height="250"/>
+                          </grid>
+                        </constraints>
+                        <properties>
+                          <text value=""/>
+                        </properties>
+                      </component>
+                      <component id="ec9f4" class="javax.swing.JButton" binding="deleteProfilePictureButton" default-binding="true">
+                        <constraints>
+                          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+                        </constraints>
+                        <properties>
+                          <text value="Delete Profile Picture"/>
+                        </properties>
+                      </component>
+                      <component id="3c786" class="javax.swing.JButton" binding="updateProfilePictureButton" default-binding="true">
+                        <constraints>
+                          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+                        </constraints>
+                        <properties>
+                          <text value="Update Profile Picture"/>
+                        </properties>
+                      </component>
+                    </children>
                   </grid>
                   <component id="6138" class="javax.swing.JButton" binding="updateProfileButton" default-binding="true">
                     <constraints>
Index: src/Technical_officer/toHome.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<form xmlns=\"http://www.intellij.com/uidesigner/form/\" version=\"1\" bind-to-class=\"Technical_officer.toHome\">\n  <grid id=\"27dc6\" binding=\"mainPanel\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n    <margin top=\"10\" left=\"10\" bottom=\"10\" right=\"10\"/>\n    <constraints>\n      <xy x=\"20\" y=\"20\" width=\"1104\" height=\"906\"/>\n    </constraints>\n    <properties>\n      <background color=\"-1\"/>\n      <maximumSize width=\"1038\" height=\"778\"/>\n      <minimumSize width=\"1104\" height=\"906\"/>\n      <preferredSize width=\"1038\" height=\"778\"/>\n    </properties>\n    <border type=\"none\"/>\n    <children>\n      <grid id=\"5a177\" binding=\"headingPanel\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n        <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"10\"/>\n        <constraints>\n          <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n        </constraints>\n        <properties>\n          <background color=\"-16758099\"/>\n        </properties>\n        <border type=\"none\"/>\n        <children>\n          <component id=\"4a9e\" class=\"javax.swing.JLabel\" binding=\"stuManaSysLbl\">\n            <constraints>\n              <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"200\" height=\"40\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font name=\"Krungthep\" size=\"72\" style=\"1\"/>\n              <foreground color=\"-17063\"/>\n              <text value=\"Student Management System\"/>\n            </properties>\n          </component>\n          <component id=\"3ad9b\" class=\"javax.swing.JLabel\" binding=\"FoTLbl\">\n            <constraints>\n              <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font name=\"Menlo\" size=\"24\" style=\"1\"/>\n              <text value=\"Faculty of Technology University of Ruhuna\"/>\n            </properties>\n          </component>\n          <component id=\"650e0\" class=\"javax.swing.JButton\" binding=\"logOutButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"1\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"100\" height=\"40\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <font name=\"Kannada MN\" size=\"16\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Log Out\"/>\n            </properties>\n          </component>\n          <hspacer id=\"bdb5e\">\n            <constraints>\n              <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n          </hspacer>\n        </children>\n      </grid>\n      <grid id=\"fd6b2\" binding=\"btnPanel\" layout-manager=\"GridLayoutManager\" row-count=\"5\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"0\" vgap=\"0\">\n        <margin top=\"10\" left=\"0\" bottom=\"10\" right=\"0\"/>\n        <constraints>\n          <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n            <preferred-size width=\"250\" height=\"-1\"/>\n          </grid>\n        </constraints>\n        <properties>\n          <background color=\"-16758099\"/>\n          <font name=\"Krungthep\" size=\"20\" style=\"0\"/>\n        </properties>\n        <border type=\"none\"/>\n        <children>\n          <component id=\"40953\" class=\"javax.swing.JButton\" binding=\"profileButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"220\" height=\"80\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n              <font name=\"Krungthep\" size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <horizontalTextPosition value=\"11\"/>\n              <text value=\"Profile\"/>\n            </properties>\n          </component>\n          <component id=\"23a0\" class=\"javax.swing.JButton\" binding=\"attendanceButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"220\" height=\"80\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n              <font name=\"Krungthep\" size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Attendance\"/>\n            </properties>\n          </component>\n          <component id=\"7ab12\" class=\"javax.swing.JButton\" binding=\"medicalButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"220\" height=\"80\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n              <font name=\"Krungthep\" size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Medical\"/>\n            </properties>\n          </component>\n          <component id=\"2e91\" class=\"javax.swing.JButton\" binding=\"timeTableButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"220\" height=\"80\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n              <font name=\"Krungthep\" size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Time Table\"/>\n            </properties>\n          </component>\n          <component id=\"efcc9\" class=\"javax.swing.JButton\" binding=\"noticeButton\">\n            <constraints>\n              <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"220\" height=\"80\"/>\n              </grid>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n              <font name=\"Krungthep\" size=\"20\" style=\"0\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Notice\"/>\n            </properties>\n          </component>\n        </children>\n      </grid>\n      <grid id=\"3e308\" binding=\"cardMainPanel\" layout-manager=\"CardLayout\" hgap=\"0\" vgap=\"0\">\n        <constraints>\n          <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n            <preferred-size width=\"900\" height=\"500\"/>\n          </grid>\n        </constraints>\n        <properties>\n          <background color=\"-66049\"/>\n        </properties>\n        <border type=\"line\">\n          <color color=\"-16758099\"/>\n        </border>\n        <children>\n          <grid id=\"de0d6\" binding=\"profileCard\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"10\" left=\"10\" bottom=\"10\" right=\"10\"/>\n            <constraints>\n              <card name=\"profileCard\"/>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n              <name value=\"\"/>\n            </properties>\n            <border type=\"none\"/>\n            <children>\n              <component id=\"6cd23\" class=\"javax.swing.JLabel\" binding=\"profileHeadingLbl\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-66049\"/>\n                  <font name=\"Krungthep\" size=\"48\" style=\"1\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"Profile\"/>\n                </properties>\n              </component>\n              <hspacer id=\"5bbb6\">\n                <constraints>\n                  <grid row=\"0\" column=\"1\" row-span=\"2\" col-span=\"1\" vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n              </hspacer>\n              <grid id=\"de12c\" binding=\"detailPanel\" layout-manager=\"GridLayoutManager\" row-count=\"6\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"10\" left=\"50\" bottom=\"10\" right=\"10\"/>\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"2\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-66049\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"da82\" class=\"javax.swing.JLabel\" binding=\"fNameLbl\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"100\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <font name=\"Kannada MN\" size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"First Name\"/>\n                    </properties>\n                  </component>\n                  <component id=\"8c999\" class=\"javax.swing.JTextField\" binding=\"fNameTxt\">\n                    <constraints>\n                      <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-3289651\"/>\n                      <editable value=\"false\"/>\n                      <font name=\"Courier New\" size=\"14\" style=\"0\"/>\n                      <foreground color=\"-16777216\"/>\n                      <horizontalAlignment value=\"0\"/>\n                    </properties>\n                  </component>\n                  <component id=\"71459\" class=\"javax.swing.JLabel\" binding=\"lNameLbl\">\n                    <constraints>\n                      <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"100\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <font name=\"Kannada MN\" size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Last Name\"/>\n                    </properties>\n                  </component>\n                  <component id=\"5979a\" class=\"javax.swing.JTextField\" binding=\"lNameTxt\">\n                    <constraints>\n                      <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-3289651\"/>\n                      <editable value=\"false\"/>\n                      <font name=\"Courier New\" size=\"14\" style=\"0\"/>\n                      <foreground color=\"-16777216\"/>\n                      <horizontalAlignment value=\"0\"/>\n                    </properties>\n                  </component>\n                  <component id=\"c2bba\" class=\"javax.swing.JLabel\" binding=\"addressLbl\">\n                    <constraints>\n                      <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"100\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <font name=\"Kannada MN\" size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Address\"/>\n                    </properties>\n                  </component>\n                  <component id=\"57026\" class=\"javax.swing.JTextField\" binding=\"addressTxt\">\n                    <constraints>\n                      <grid row=\"2\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-3289651\"/>\n                      <editable value=\"false\"/>\n                      <font name=\"Courier New\" size=\"14\" style=\"0\"/>\n                      <foreground color=\"-16777216\"/>\n                      <horizontalAlignment value=\"0\"/>\n                    </properties>\n                  </component>\n                  <component id=\"3771\" class=\"javax.swing.JLabel\" binding=\"emailLbl\">\n                    <constraints>\n                      <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"100\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <font name=\"Kannada MN\" size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Email Address\"/>\n                    </properties>\n                  </component>\n                  <component id=\"b5bdc\" class=\"javax.swing.JTextField\" binding=\"emailTxt\">\n                    <constraints>\n                      <grid row=\"3\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-3289651\"/>\n                      <editable value=\"false\"/>\n                      <font name=\"Courier New\" size=\"14\" style=\"0\"/>\n                      <foreground color=\"-16777216\"/>\n                      <horizontalAlignment value=\"0\"/>\n                    </properties>\n                  </component>\n                  <component id=\"9d7a6\" class=\"javax.swing.JLabel\" binding=\"pNoLbl\">\n                    <constraints>\n                      <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"100\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <font name=\"Kannada MN\" size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Phone Number\"/>\n                    </properties>\n                  </component>\n                  <component id=\"ace9b\" class=\"javax.swing.JLabel\" binding=\"roleLbl\">\n                    <constraints>\n                      <grid row=\"5\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"100\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <font name=\"Kannada MN\" size=\"18\" style=\"1\"/>\n                      <foreground color=\"-16758099\"/>\n                      <text value=\"Role\"/>\n                    </properties>\n                  </component>\n                  <component id=\"dc4f1\" class=\"javax.swing.JTextField\" binding=\"pNoTxt\">\n                    <constraints>\n                      <grid row=\"4\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-3289651\"/>\n                      <editable value=\"false\"/>\n                      <font name=\"Courier New\" size=\"14\" style=\"0\"/>\n                      <foreground color=\"-16777216\"/>\n                      <horizontalAlignment value=\"0\"/>\n                    </properties>\n                  </component>\n                  <component id=\"db0b5\" class=\"javax.swing.JTextField\" binding=\"roleTxt\">\n                    <constraints>\n                      <grid row=\"5\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"40\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-3289651\"/>\n                      <editable value=\"false\"/>\n                      <font name=\"Courier New\" size=\"14\" style=\"0\"/>\n                      <foreground color=\"-16777216\"/>\n                      <horizontalAlignment value=\"0\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n              <grid id=\"fe0d1\" binding=\"imgMainPanel\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n                <constraints>\n                  <grid row=\"2\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n                    <preferred-size width=\"200\" height=\"200\"/>\n                  </grid>\n                </constraints>\n                <properties>\n                  <background color=\"-66049\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <grid id=\"fd2b1\" binding=\"imgPanel\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                    <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"2\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"1\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"300\" height=\"300\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <foreground color=\"-6569222\"/>\n                    </properties>\n                    <border type=\"none\"/>\n                    <children>\n                      <component id=\"41ca8\" class=\"javax.swing.JLabel\" binding=\"imageLbl\">\n                        <constraints>\n                          <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                        </constraints>\n                        <properties>\n                          <text value=\"No Image\"/>\n                        </properties>\n                      </component>\n                    </children>\n                  </grid>\n                  <component id=\"421fd\" class=\"javax.swing.JButton\" binding=\"updateProfileButton\" default-binding=\"true\">\n                    <constraints>\n                      <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"2\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"300\" height=\"60\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <text value=\"Update Profile\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n            </children>\n          </grid>\n          <grid id=\"8c4ed\" binding=\"noticeCard\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"10\" left=\"10\" bottom=\"10\" right=\"10\"/>\n            <constraints>\n              <card name=\"noticeCard\"/>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n            </properties>\n            <border type=\"none\"/>\n            <children>\n              <component id=\"c0942\" class=\"javax.swing.JLabel\" binding=\"noticeHeadingLbl\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"9\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <font name=\"Krungthep\" size=\"48\" style=\"1\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"Notice\"/>\n                </properties>\n              </component>\n              <component id=\"d97b8\" class=\"javax.swing.JLabel\" binding=\"selectTitleLbl\">\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <font name=\"Kannada MN\" size=\"22\" style=\"1\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"Select Titile\"/>\n                </properties>\n              </component>\n              <component id=\"deac4\" class=\"javax.swing.JComboBox\" binding=\"selectTitleCombo\">\n                <constraints>\n                  <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <foreground color=\"-16758099\"/>\n                </properties>\n              </component>\n              <grid id=\"6be22\" binding=\"noticeTxtAreaPanel\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n                <constraints>\n                  <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-16758099\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <scrollpane id=\"f7e10\" binding=\"noticeScrollPane\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                    </constraints>\n                    <properties/>\n                    <border type=\"none\"/>\n                    <children>\n                      <component id=\"972e1\" class=\"javax.swing.JTextArea\" binding=\"noticeTxtArea\">\n                        <constraints/>\n                        <properties>\n                          <editable value=\"false\"/>\n                          <foreground color=\"-16758099\"/>\n                        </properties>\n                      </component>\n                    </children>\n                  </scrollpane>\n                </children>\n              </grid>\n            </children>\n          </grid>\n          <grid id=\"2a8a\" binding=\"timeTableCard\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"10\" left=\"10\" bottom=\"10\" right=\"10\"/>\n            <constraints>\n              <card name=\"timeTableCard\"/>\n            </constraints>\n            <properties>\n              <background color=\"-66049\"/>\n            </properties>\n            <border type=\"none\"/>\n            <children>\n              <component id=\"e0ed3\" class=\"javax.swing.JLabel\" binding=\"timeTableHeadingLbl\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"9\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <font name=\"Krungthep\" size=\"48\" style=\"1\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"TimeTable\"/>\n                </properties>\n              </component>\n              <grid id=\"1b878\" binding=\"timeTablePanel\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-16758099\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <scrollpane id=\"b7d3b\" binding=\"timeTableScrollPane\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"1000\" height=\"500\"/>\n                        <maximum-size width=\"1000\" height=\"500\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-1\"/>\n                    </properties>\n                    <border type=\"none\"/>\n                    <children>\n                      <component id=\"bf282\" class=\"javax.swing.JTable\" binding=\"timeTableTable\">\n                        <constraints/>\n                        <properties/>\n                      </component>\n                    </children>\n                  </scrollpane>\n                </children>\n              </grid>\n            </children>\n          </grid>\n          <grid id=\"19f3e\" binding=\"attendanceCard\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n            <constraints>\n              <card name=\"Card1\"/>\n            </constraints>\n            <properties>\n              <background color=\"-1\"/>\n            </properties>\n            <border type=\"none\"/>\n            <children>\n              <component id=\"79794\" class=\"javax.swing.JLabel\" binding=\"headingLabel\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-1\"/>\n                  <font name=\"JetBrains Mono ExtraBold\" size=\"48\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"Attendance\"/>\n                </properties>\n              </component>\n              <grid id=\"6b09\" binding=\"buttons\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"20\" left=\"20\" bottom=\"20\" right=\"20\"/>\n                <constraints>\n                  <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-1\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"b35f9\" class=\"javax.swing.JButton\" binding=\"add\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"50\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16758099\"/>\n                      <font name=\"JetBrains Mono ExtraBold\" size=\"18\"/>\n                      <foreground color=\"-1\"/>\n                      <text value=\"Add\"/>\n                    </properties>\n                  </component>\n                  <component id=\"d025c\" class=\"javax.swing.JButton\" binding=\"update\">\n                    <constraints>\n                      <grid row=\"0\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"50\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16758099\"/>\n                      <font name=\"JetBrains Mono ExtraBold\" size=\"18\"/>\n                      <foreground color=\"-1\"/>\n                      <text value=\"Update\"/>\n                    </properties>\n                  </component>\n                  <component id=\"145cf\" class=\"javax.swing.JButton\" binding=\"delete\">\n                    <constraints>\n                      <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"50\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16758099\"/>\n                      <font name=\"JetBrains Mono ExtraBold\" size=\"18\"/>\n                      <foreground color=\"-1\"/>\n                      <text value=\"Delete\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n              <grid id=\"9be1f\" binding=\"viewPanel\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n                    <preferred-size width=\"400\" height=\"600\"/>\n                  </grid>\n                </constraints>\n                <properties>\n                  <background color=\"-1\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children/>\n              </grid>\n            </children>\n          </grid>\n          <grid id=\"75832\" binding=\"medicalCard\" layout-manager=\"GridLayoutManager\" row-count=\"3\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n            <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n            <constraints>\n              <card name=\"Card2\"/>\n            </constraints>\n            <properties>\n              <background color=\"-1\"/>\n            </properties>\n            <border type=\"none\"/>\n            <children>\n              <component id=\"149ec\" class=\"javax.swing.JLabel\" binding=\"heading\">\n                <constraints>\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-1\"/>\n                  <font name=\"JetBrains Mono ExtraBold\" size=\"48\"/>\n                  <foreground color=\"-16758099\"/>\n                  <text value=\"Medical\"/>\n                </properties>\n              </component>\n              <grid id=\"4029e\" binding=\"view\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\n                <constraints>\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\n                    <preferred-size width=\"400\" height=\"600\"/>\n                  </grid>\n                </constraints>\n                <properties>\n                  <background color=\"-1\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children/>\n              </grid>\n              <grid id=\"d8986\" binding=\"buttonPanel\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n                <margin top=\"20\" left=\"20\" bottom=\"20\" right=\"20\"/>\n                <constraints>\n                  <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\n                </constraints>\n                <properties>\n                  <background color=\"-1\"/>\n                </properties>\n                <border type=\"none\"/>\n                <children>\n                  <component id=\"28d6f\" class=\"javax.swing.JButton\" binding=\"addbtn\">\n                    <constraints>\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"50\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16758099\"/>\n                      <font name=\"JetBrains Mono ExtraBold\" size=\"18\"/>\n                      <foreground color=\"-1\"/>\n                      <text value=\"Add\"/>\n                    </properties>\n                  </component>\n                  <component id=\"d2d3d\" class=\"javax.swing.JButton\" binding=\"updatebtn\">\n                    <constraints>\n                      <grid row=\"0\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"1\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"50\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16758099\"/>\n                      <font name=\"JetBrains Mono ExtraBold\" size=\"18\"/>\n                      <foreground color=\"-1\"/>\n                      <text value=\"Update\"/>\n                    </properties>\n                  </component>\n                  <component id=\"136ae\" class=\"javax.swing.JButton\" binding=\"deletebtn\">\n                    <constraints>\n                      <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n                        <preferred-size width=\"200\" height=\"50\"/>\n                      </grid>\n                    </constraints>\n                    <properties>\n                      <background color=\"-16758099\"/>\n                      <font name=\"JetBrains Mono ExtraBold\" size=\"18\"/>\n                      <foreground color=\"-1\"/>\n                      <text value=\"Delete\"/>\n                    </properties>\n                  </component>\n                </children>\n              </grid>\n            </children>\n          </grid>\n          <vspacer id=\"b9e64\">\n            <constraints>\n              <card name=\"Card3\"/>\n            </constraints>\n          </vspacer>\n        </children>\n      </grid>\n    </children>\n  </grid>\n</form>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Technical_officer/toHome.form b/src/Technical_officer/toHome.form
--- a/src/Technical_officer/toHome.form	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Technical_officer/toHome.form	(date 1745328955051)
@@ -364,7 +364,7 @@
                 </properties>
                 <border type="none"/>
                 <children>
-                  <grid id="fd2b1" binding="imgPanel" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+                  <grid id="fd2b1" binding="imgPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
                     <margin top="0" left="0" bottom="0" right="0"/>
                     <constraints>
                       <grid row="0" column="0" row-span="2" col-span="1" vsize-policy="3" hsize-policy="3" anchor="1" fill="0" indent="0" use-parent-layout="false">
@@ -372,16 +372,27 @@
                       </grid>
                     </constraints>
                     <properties>
+                      <background color="-66049"/>
                       <foreground color="-6569222"/>
                     </properties>
                     <border type="none"/>
                     <children>
                       <component id="41ca8" class="javax.swing.JLabel" binding="imageLbl">
                         <constraints>
-                          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+                          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false">
+                            <preferred-size width="250" height="250"/>
+                          </grid>
                         </constraints>
                         <properties>
-                          <text value="No Image"/>
+                          <text value=""/>
+                        </properties>
+                      </component>
+                      <component id="7c6c1" class="javax.swing.JButton" binding="deleteProfilePictureButton" default-binding="true">
+                        <constraints>
+                          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+                        </constraints>
+                        <properties>
+                          <text value="Delete Profile Picture"/>
                         </properties>
                       </component>
                     </children>
Index: src/Technical_officer/toHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Technical_officer;\n\nimport database.DatabaseConnection;\nimport database.Session;\nimport student.Login;\n\nimport javax.swing.*;\nimport javax.swing.table.DefaultTableModel;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.sql.*;\nimport java.util.Vector;\n\npublic class toHome extends  JFrame {\n    private JPanel mainPanel;\n    private JPanel headingPanel;\n    private JLabel stuManaSysLbl;\n    private JLabel FoTLbl;\n    private JButton logOutButton;\n    private JPanel btnPanel;\n    private JButton profileButton;\n    private JButton attendanceButton;\n    private JButton medicalButton;\n    private JButton timeTableButton;\n    private JButton noticeButton;\n    private JPanel cardMainPanel;\n    private JPanel profileCard;\n    private JLabel profileHeadingLbl;\n    private JPanel detailPanel;\n    private JLabel fNameLbl;\n    private JTextField fNameTxt;\n    private JLabel lNameLbl;\n    private JTextField lNameTxt;\n    private JLabel addressLbl;\n    private JTextField addressTxt;\n    private JLabel emailLbl;\n    private JTextField emailTxt;\n    private JLabel pNoLbl;\n    private JLabel roleLbl;\n    private JTextField pNoTxt;\n    private JTextField roleTxt;\n    private JPanel imgMainPanel;\n    private JPanel imgPanel;\n    private JLabel imageLbl;\n    private JButton updateProfileButton;\n    private JPanel noticeCard;\n    private JLabel noticeHeadingLbl;\n    private JLabel selectTitleLbl;\n    private JComboBox selectTitleCombo;\n    private JPanel noticeTxtAreaPanel;\n    private JScrollPane noticeScrollPane;\n    private JTextArea noticeTxtArea;\n    private JPanel timeTableCard;\n    private JLabel timeTableHeadingLbl;\n    private JPanel timeTablePanel;\n    private JScrollPane timeTableScrollPane;\n    private JPanel attendanceCard;\n    private JLabel headingLabel;\n    private JPanel medicalCard;\n    private JLabel heading;\n    private JPanel viewPanel;\n    private JButton add;\n    private JButton update;\n    private JPanel buttons;\n    private JPanel view;\n    private JPanel buttonPanel;\n    private JButton addbtn;\n    private JButton updatebtn;\n    private JTable timeTableTable;\n    private JButton delete;\n    private JButton deletebtn;\n\n    public toHome() {\n\n        CardLayout cardLayout = (CardLayout) (cardMainPanel.getLayout());\n        displayProfileDetils();\n\n        cardMainPanel.add(profileCard, \"profileCard\");\n        cardMainPanel.add(attendanceCard, \"attendanceCard\");\n        cardMainPanel.add(medicalCard, \"medicalCard\");\n        cardMainPanel.add(timeTableCard, \"timeTableCard\");\n        cardMainPanel.add(noticeCard, \"noticeCard\");\n\n        setContentPane(mainPanel);\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setTitle(\"to home\");\n        setSize(400,400);\n        setVisible(true);\n        setLocationRelativeTo(null);\n\n        logOutButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                String password = \"\"                        ;\n                new Login();\n            }\n        });\n\n        profileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"profileCard\");\n            }\n        });\n        updateProfileButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                new updateTOprofile();\n\n            }\n        });\n        attendanceButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"attendanceCard\");\n                showAttendancetable();\n            }\n        });\n        medicalButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"medicalCard\");\n                showMedicaltable();\n            }\n        });\n        timeTableButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"timeTableCard\");\n                showTimeTable();\n            }\n        });\n        noticeButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                cardLayout.show(cardMainPanel, \"noticeCard\");\n                addNoticeTitlesToComboBox();\n            }\n        });\n        selectTitleCombo.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                // Get the selected title\n                String selectedTitle = (String) selectTitleCombo.getSelectedItem();\n                System.out.println(\"Selected Title: \" + selectedTitle);\n                // Display the content for the selected title\n                if (selectedTitle != null) {\n                    displayNoticeContent(selectedTitle);\n                }\n            }\n        });\n\n        //Add attendance\n        add.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                AddAttendance addForm = new AddAttendance();\n                addForm.setVisible(true);// make sure class name matches\n            }\n        });\n\n        //Update attendance\n        update.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                updateAttendance updateForm = new updateAttendance();\n                updateForm.setVisible(true);\n            }\n        });\n\n        //Add medical\n        addbtn.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                addmedical addmedi = new addmedical();\n                addmedi.setVisible(true);\n            }\n        });\n\n        //Update medical\n        updatebtn.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                updateMedical upmedi = new  updateMedical();\n                upmedi.setVisible(true);\n            }\n        });\n\n        //delete attendance\n        delete.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                deleteSelectedAttendanceRow();\n            }\n        });\n\n        //delete medical\n        deletebtn.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                deleteSelectedMedicalRow();\n            }\n        });\n    }\n\n    private Connection con;\n    private void connectToDatabase() {\n        try {\n            String url = \"jdbc:mysql://localhost:3306/techlms\";\n            String user = \"root\";\n            String password = \"1234\"; // Change if you use a password\n            con = DriverManager.getConnection(url, user, password);\n        } catch (SQLException e) {\n            JOptionPane.showMessageDialog(this, \"Database connection failed: \" + e.getMessage());\n        }\n    }\n\n    //Attendance table\n    private void showAttendancetable() {\n        try{\n            connectToDatabase();\n            Statement st = con.createStatement();\n            String query = \"select * from attendance\";\n            ResultSet rs = st.executeQuery(query);\n\n            ResultSetMetaData rsmd = rs.getMetaData();\n            int columnCount = rsmd.getColumnCount();\n            Vector<String> columnNames = new Vector<String>();\n            for(int i=1;i<=columnCount;i++){\n                columnNames.add(rsmd.getColumnName(i));\n            }\n\n            Vector<Vector<Object>> data = new Vector<>();\n            while(rs.next()){\n                Vector<Object> row = new Vector<>();\n                for(int i=1;i<=columnCount;i++){\n                    row.add(rs.getObject(i));\n                }\n                data.add(row);\n            }\n\n            JTable table = new JTable(data,columnNames);\n            JScrollPane scrollPane = new JScrollPane(table);\n            scrollPane.setPreferredSize(new Dimension(580,300));\n\n            viewPanel.removeAll();\n            viewPanel.setLayout(new BorderLayout());\n            viewPanel.add(scrollPane,BorderLayout.CENTER);\n            viewPanel.revalidate();\n            viewPanel.repaint();\n\n            rs.close();\n            st.close();\n            con.close();\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(this,\"Database error\");\n        }\n    }\n\n    //Delete Attendance\n    private void deleteSelectedAttendanceRow() {\n        // Find the JTable in the viewPanel\n        for (Component comp : viewPanel.getComponents()) {\n            if (comp instanceof JScrollPane) {\n                JScrollPane scrollPane = (JScrollPane) comp;\n                JViewport viewport = scrollPane.getViewport();\n                Component view = viewport.getView();\n\n                if (view instanceof JTable) {\n                    JTable table = (JTable) view;\n\n                    // Optional: Check if this table is the attendance table by checking column headers\n                    if (table.getColumnName(0).equalsIgnoreCase(\"Attendance_id\")) {\n                        int selectedRow = table.getSelectedRow();\n\n                        if (selectedRow == -1) {\n                            JOptionPane.showMessageDialog(this, \"Please select a row to delete.\");\n                            return;\n                        }\n\n                        Object idValue = table.getValueAt(selectedRow, 0); // Attendance_id\n                        int confirm = JOptionPane.showConfirmDialog(this, \"Are you sure you want to delete this attendance record?\", \"Confirm Delete\", JOptionPane.YES_NO_OPTION);\n\n                        if (confirm == JOptionPane.YES_OPTION) {\n                            try {\n                                connectToDatabase();\n                                String sql = \"DELETE FROM attendance WHERE Attendance_id = ?\";\n                                PreparedStatement pstmt = con.prepareStatement(sql);\n                                pstmt.setObject(1, idValue);\n\n                                int rowsAffected = pstmt.executeUpdate();\n                                if (rowsAffected > 0) {\n                                    JOptionPane.showMessageDialog(this, \"Record deleted successfully.\");\n                                    showAttendancetable(); // Refresh the table\n                                } else {\n                                    JOptionPane.showMessageDialog(this, \"Failed to delete record.\");\n                                }\n\n                                pstmt.close();\n                                con.close();\n                            } catch (SQLException e) {\n                                e.printStackTrace();\n                                JOptionPane.showMessageDialog(this, \"Error deleting attendance: \" + e.getMessage());\n                            }\n                        }\n\n                        return; // Exit after handling the table\n                    }\n                }\n            }\n        }\n\n        // If no suitable table is found\n        JOptionPane.showMessageDialog(this, \"Attendance table not found.\");\n    }\n\n    //Medical\n    private void showMedicaltable() {\n        try {\n            connectToDatabase();\n            Statement st = con.createStatement();\n            String query = \"SELECT * FROM medical\";\n            ResultSet rs = st.executeQuery(query);\n\n            ResultSetMetaData rsmd = rs.getMetaData();\n            int columnCount = rsmd.getColumnCount();\n            Vector<String> columnNames = new Vector<String>();\n            for (int i = 1; i <= columnCount; i++) {\n                columnNames.add(rsmd.getColumnName(i));\n            }\n\n            Vector<Vector<Object>> data = new Vector<>();\n            while (rs.next()) {\n                Vector<Object> row = new Vector<>();\n                for (int i = 1; i <= columnCount; i++) {\n                    row.add(rs.getObject(i));\n                }\n                data.add(row);\n            }\n\n            JTable table = new JTable(data, columnNames);\n            JScrollPane scrollPane = new JScrollPane(table);\n            scrollPane.setPreferredSize(new Dimension(580, 300));\n\n            view.removeAll();\n            view.setLayout(new BorderLayout());\n            view.add(scrollPane, BorderLayout.CENTER);\n            view.revalidate();\n            view.repaint();\n\n            rs.close();\n            st.close();\n            con.close();\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n            JOptionPane.showMessageDialog(this, \"Database error while loading medical table\");\n        }\n    }\n\n    //Delete Medical\n    private void deleteSelectedMedicalRow() {\n        int selectedRow = -1;\n\n        for (Component comp : view.getComponents()) {\n            if (comp instanceof JScrollPane) {\n                JScrollPane scrollPane = (JScrollPane) comp;\n                JViewport viewport = scrollPane.getViewport();\n                Component viewComponent = viewport.getView();\n                if (viewComponent instanceof JTable) {\n                    JTable table = (JTable) viewComponent;\n                    selectedRow = table.getSelectedRow();\n\n                    if (selectedRow == -1) {\n                        JOptionPane.showMessageDialog(this, \"Please select a medical row to delete.\");\n                        return;\n                    }\n\n                    Object idValue = table.getValueAt(selectedRow, 0); // Assume first column is ID\n                    int confirm = JOptionPane.showConfirmDialog(this, \"Are you sure you want to delete this medical record?\", \"Confirm Delete\", JOptionPane.YES_NO_OPTION);\n\n                    if (confirm == JOptionPane.YES_OPTION) {\n                        try {\n                            connectToDatabase();\n                            String sql = \"DELETE FROM medical WHERE Medical_id = ?\";\n                            PreparedStatement pstmt = con.prepareStatement(sql);\n                            pstmt.setObject(1, idValue);\n\n                            int rowsAffected = pstmt.executeUpdate();\n                            if (rowsAffected > 0) {\n                                JOptionPane.showMessageDialog(this, \"Medical record deleted successfully.\");\n                                showMedicaltable(); // Refresh\n                            } else {\n                                JOptionPane.showMessageDialog(this, \"Failed to delete medical record.\");\n                            }\n\n                            pstmt.close();\n                            con.close();\n                        } catch (SQLException e) {\n                            e.printStackTrace();\n                            JOptionPane.showMessageDialog(this, \"Error deleting medical record: \" + e.getMessage());\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (selectedRow == -1) {\n            JOptionPane.showMessageDialog(this, \"Medical table not found.\");\n        }\n    }\n\n\n    //Timetable\n    public void showTimeTable() {\n        try {\n            connectToDatabase();\n            String sql = \"SELECT * FROM TimeTable\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            String[] columnNames = {\"Department\", \"Course_Code\", \"Course_Name\", \"Time\", \"Day\"};\n            DefaultTableModel model = new DefaultTableModel(null, columnNames);\n\n            while (rs.next()) {\n                // Get the day number from the database\n                int dayNumber = rs.getInt(\"Day\");\n\n                // Map the day number to the corresponding weekday name\n                String dayName = mapDayNumberToName(dayNumber);\n\n                model.addRow(new Object[]{\n                        rs.getString(\"Department\"),\n                        rs.getString(\"Course_Code\"),\n                        rs.getString(\"Course_Name\"),\n                        rs.getString(\"Time\"),\n                        dayName\n                });\n            }\n            timeTableTable.setModel(model);\n        } catch (Exception e) {\n            System.out.println(\"Error in display Time Table: \" + e.getMessage());\n        }\n    }\n\n    private String mapDayNumberToName(int dayNumber) {\n        switch (dayNumber) {\n            case 1: return \"Monday\";\n            case 2: return \"Tuesday\";\n            case 3: return \"Wednesday\";\n            case 4: return \"Thursday\";\n            case 5: return \"Friday\";\n            default: return \"Unknown\";\n        }\n    }\n\n    //Notices\n    public void addNoticeTitlesToComboBox(){\n        con = DatabaseConnection.connect();\n\n        try{\n            Connection conn = DatabaseConnection.connect();\n            String sql = \"SELECT * FROM Notice\";\n            PreparedStatement pstmt = conn.prepareStatement(sql);\n            ResultSet rs = pstmt.executeQuery();\n\n            selectTitleCombo.removeAllItems();\n\n            while (rs.next()) {\n                String title = rs.getString(\"Title\");\n                selectTitleCombo.addItem(title); // Add each title to the combo box\n                System.out.println(\"Title: \" + title);\n            }\n        }catch(Exception e){\n            System.out.println(\"Error in add Notice Titles To ComboBox: \" + e.getMessage());\n        }\n    }\n\n    public void displayNoticeContent(String title) {\n        try {\n            noticeTxtArea.setText(\"\");\n            // Establish connection to the database to get the NoticeId based on the title\n            Connection con = DatabaseConnection.connect();\n            String sql = \"SELECT Notice_id FROM Notice WHERE Title = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n            pstmt.setString(1, title);\n            ResultSet rs = pstmt.executeQuery();\n\n            if (rs.next()) {\n                String noticeId = rs.getString(\"Notice_id\");\n\n                // Read content from the corresponding text file (e.g., notice_1.txt)\n                File noticeFile = new File(\"C:\\\\Users\\\\Gayan\\\\Desktop\\\\Java\\\\JavaMiniProject\\\\Notices\\\\notice_\" + noticeId + \".txt\");\n                BufferedReader reader = new BufferedReader(new FileReader(noticeFile));\n                StringBuilder content = new StringBuilder();\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    content.append(line).append(\"\\n\");\n                }\n\n                // Display the content in the JTextArea\n                noticeTxtArea.setText(content.toString());\n            }\n        } catch (SQLException | IOException e) {\n            System.out.println(\"Error in display Notice Content: \" + e.getMessage());\n        }\n    }\n\n    //Profile\n    public void displayProfileDetils(){\n        con = DatabaseConnection.connect();\n\n        try {\n            String sql = \"SELECT FName, LName, Address, Email, Phone_No, Role FROM User WHERE UserName = ?\";\n            PreparedStatement pstmt = con.prepareStatement(sql);\n\n            pstmt.setString(1, Session.loggedInUsername);\n\n            ResultSet rs = pstmt.executeQuery();\n\n            if(rs.next()){\n                String fName1 = rs.getString(\"FName\");\n                fNameTxt.setText(fName1);\n                System.out.println(\"fName1: \" + fName1);\n                String lName1 = rs.getString(\"LName\");\n                lNameTxt.setText(lName1);\n                System.out.println(\"lName1: \" + lName1);\n                String address1 = rs.getString(\"Address\");\n                addressTxt.setText(address1);\n                System.out.println(\"address1: \" + address1);\n                String email1 = rs.getString(\"Email\");\n                emailTxt.setText(email1);\n                System.out.println(\"email1: \" + email1);\n                String phoneNo1 = rs.getString(\"Phone_No\");\n                pNoTxt.setText(phoneNo1);\n                System.out.println(\"phoneNo1: \" + phoneNo1);\n                String role1 = rs.getString(\"Role\");\n                roleTxt.setText(role1);\n                System.out.println(\"role1: \" + role1);\n\n            }else {\n                JOptionPane.showMessageDialog(null, \"No Profile Found\");\n            }\n        }catch (Exception e){\n            System.out.println(\"Error in displayProfileDetils: \" + e.getMessage());\n        }\n    }\n\n    public static void main(String[] args) {\n        new toHome();\n        try{\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Technical_officer/toHome.java b/src/Technical_officer/toHome.java
--- a/src/Technical_officer/toHome.java	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Technical_officer/toHome.java	(date 1745334005535)
@@ -74,24 +74,32 @@
     private JTable timeTableTable;
     private JButton delete;
     private JButton deletebtn;
+    private JButton deleteProfilePictureButton;
 
     public toHome() {
 
-        CardLayout cardLayout = (CardLayout) (cardMainPanel.getLayout());
+        setContentPane(mainPanel);
+        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+        setTitle("to home");
+        setSize(1000,800);
+        setVisible(true);
+        setLocationRelativeTo(null);
+
+
         displayProfileDetils();
+        showProfilePicture(imageLbl);
+
+
+        CardLayout cardLayout = (CardLayout) (cardMainPanel.getLayout());
 
         cardMainPanel.add(profileCard, "profileCard");
         cardMainPanel.add(attendanceCard, "attendanceCard");
         cardMainPanel.add(medicalCard, "medicalCard");
         cardMainPanel.add(timeTableCard, "timeTableCard");
         cardMainPanel.add(noticeCard, "noticeCard");
+        cardLayout.show(cardMainPanel, "profileCard");
 
-        setContentPane(mainPanel);
-        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        setTitle("to home");
-        setSize(400,400);
-        setVisible(true);
-        setLocationRelativeTo(null);
+
 
         logOutButton.addActionListener(new ActionListener() {
             @Override
@@ -111,7 +119,7 @@
             @Override
             public void actionPerformed(ActionEvent e) {
                 new updateTOprofile();
-
+                dispose();
             }
         });
         attendanceButton.addActionListener(new ActionListener() {
@@ -206,6 +214,14 @@
                 deleteSelectedMedicalRow();
             }
         });
+
+        deleteProfilePictureButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                deleteProfilePicture(imageLbl);
+                deleteProfilePictureButton.setEnabled(false);
+            }
+        });
     }
 
     private Connection con;
@@ -498,7 +514,7 @@
                 String noticeId = rs.getString("Notice_id");
 
                 // Read content from the corresponding text file (e.g., notice_1.txt)
-                File noticeFile = new File("C:\\Users\\Gayan\\Desktop\\Java\\JavaMiniProject\\Notices\\notice_" + noticeId + ".txt");
+                File noticeFile = new File("notices/notice_" + noticeId + ".txt");
                 BufferedReader reader = new BufferedReader(new FileReader(noticeFile));
                 StringBuilder content = new StringBuilder();
                 String line;
@@ -554,12 +570,94 @@
         }
     }
 
-    public static void main(String[] args) {
-        new toHome();
-        try{
-            Class.forName("com.mysql.cj.jdbc.Driver");
-        } catch (ClassNotFoundException e) {
+    // *******  Profile Picture *****************
+
+    public void showProfilePicture(JLabel imageLbl) {
+        Connection con = DatabaseConnection.connect();
+        try {
+            String sql = "SELECT Profile_pic FROM User WHERE UserName = ?";
+            PreparedStatement pst = con.prepareStatement(sql);
+            pst.setString(1, Session.loggedInUsername);
+            ResultSet rs = pst.executeQuery();
+
+            if (rs.next()) {
+                String fileName = rs.getString("Profile_pic");
+
+                // If no profile picture set in DB, use default
+                if (fileName == null || fileName.trim().isEmpty()) {
+                    fileName = "default.png";
+                }
+
+                String path = "user_Pro_Pic/" + fileName;
+                File imageFile = new File(path);
+
+                // If image file does not exist, fallback to default image
+                if (!imageFile.exists()) {
+                    path = "user_Pro_Pic/default.png";
+                }
+
+                // Load and Resize Image to fit JLabel
+                ImageIcon imageIcon = new ImageIcon(path);
+
+                // Get JLabel size (designed from GUI builder)
+                int width = imageLbl.getWidth();
+                int height = imageLbl.getHeight();
+
+                // Default size safety check (in case label not ready)
+                if (width == 0 || height == 0) {
+                    width = 150;
+                    height = 150;
+                }
+
+                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
+                imageLbl.setIcon(new ImageIcon(image));
+                imageLbl.repaint(); // Refresh label to show updated image
+            }
+        } catch (Exception e) {
+            System.out.println("Error in showProfilePicture: " + e.getMessage());
             e.printStackTrace();
         }
     }
+
+    public void deleteProfilePicture(JLabel imageLbl) {
+        Connection con = DatabaseConnection.connect();
+        try{
+            String sql = "UPDATE User SET Profile_pic = NULL WHERE UserName = ?";
+            PreparedStatement pst = con.prepareStatement(sql);
+            pst.setString(1, Session.loggedInUsername);
+
+            int result = pst.executeUpdate();
+
+            if (result > 0) {
+                // Set default image after deletion
+                String path = "user_Pro_Pic/default.png";
+
+                // Get label size
+                int width = imageLbl.getWidth();
+                int height = imageLbl.getHeight();
+
+                if (width == 0 || height == 0) {
+                    width = 150;
+                    height = 150;
+                }
+
+                ImageIcon imageIcon = new ImageIcon(path);
+                Image image = imageIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
+                imageLbl.setIcon(new ImageIcon(image));
+                imageLbl.repaint();  // Refresh label
+
+                System.out.println("Profile picture deleted successfully.");
+            } else {
+                System.out.println("No profile picture was found or username invalid.");
+            }
+
+        } catch (Exception e) {
+            System.out.println("Error in deleteProfilePicture: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+
+//    public static void main(String[] args) {
+//        new toHome();
+//    }
 }
Index: src/Admin/ProfileUpdate.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<form xmlns=\"http://www.intellij.com/uidesigner/form/\" version=\"1\" bind-to-class=\"Admin.ProfileUpdate\">\n  <grid id=\"27dc6\" binding=\"MainPanel\" layout-manager=\"GridLayoutManager\" row-count=\"2\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n    <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n    <constraints>\n      <xy x=\"20\" y=\"20\" width=\"572\" height=\"679\"/>\n    </constraints>\n    <properties>\n      <foreground color=\"-66049\"/>\n    </properties>\n    <border type=\"none\"/>\n    <children>\n      <component id=\"1012f\" class=\"javax.swing.JLabel\">\n        <constraints>\n          <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n        </constraints>\n        <properties>\n          <font size=\"36\" style=\"1\"/>\n          <foreground color=\"-16758099\"/>\n          <text value=\"Update Profile\"/>\n        </properties>\n      </component>\n      <grid id=\"6f173\" binding=\"DetailPanel\" layout-manager=\"GridLayoutManager\" row-count=\"13\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n        <margin top=\"30\" left=\"30\" bottom=\"30\" right=\"30\"/>\n        <constraints>\n          <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"2\" indent=\"0\" use-parent-layout=\"false\">\n            <maximum-size width=\"900\" height=\"900\"/>\n          </grid>\n        </constraints>\n        <properties>\n          <background color=\"-16758099\"/>\n        </properties>\n        <border type=\"none\"/>\n        <children>\n          <component id=\"cf214\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"User Name\"/>\n            </properties>\n          </component>\n          <component id=\"9aff2\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"First Name\"/>\n            </properties>\n          </component>\n          <component id=\"d30f4\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Last Name\"/>\n            </properties>\n          </component>\n          <component id=\"12970\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Date Of Birth\"/>\n            </properties>\n          </component>\n          <component id=\"c930a\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Role\"/>\n            </properties>\n          </component>\n          <component id=\"1d45e\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"5\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Entrolment Date\"/>\n            </properties>\n          </component>\n          <component id=\"7719d\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"6\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Adress\"/>\n            </properties>\n          </component>\n          <component id=\"c5aac\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"7\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Email\"/>\n            </properties>\n          </component>\n          <component id=\"cdda\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"8\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Phone Number\"/>\n            </properties>\n          </component>\n          <component id=\"9979a\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"9\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"PassWord\"/>\n            </properties>\n          </component>\n          <component id=\"7cbe5\" class=\"javax.swing.JTextField\" binding=\"textField1\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"18508\" class=\"javax.swing.JTextField\" binding=\"textField2\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"d204f\" class=\"javax.swing.JTextField\" binding=\"textField3\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"2\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"2bdca\" class=\"javax.swing.JTextField\" binding=\"textField4\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"3\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"bc7e8\" class=\"javax.swing.JTextField\" binding=\"textField5\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"4\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"1d989\" class=\"javax.swing.JTextField\" binding=\"textField6\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"5\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"a7002\" class=\"javax.swing.JTextField\" binding=\"textField7\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"6\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"1ef3f\" class=\"javax.swing.JTextField\" binding=\"textField8\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"7\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"11e4b\" class=\"javax.swing.JTextField\" binding=\"textField9\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"8\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"22462\" class=\"javax.swing.JTextField\" binding=\"textField10\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"9\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"b4988\" class=\"javax.swing.JButton\" binding=\"updateProfileButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"11\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"20\" style=\"1\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Update Profile\"/>\n            </properties>\n          </component>\n          <component id=\"f893a\" class=\"javax.swing.JButton\" binding=\"clearButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"12\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"20\" style=\"1\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Clear\"/>\n            </properties>\n          </component>\n          <component id=\"c0bbc\" class=\"javax.swing.JTextField\" binding=\"textField11\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"10\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n                <preferred-size width=\"150\" height=\"30\"/>\n              </grid>\n            </constraints>\n            <properties/>\n          </component>\n          <component id=\"c6986\" class=\"javax.swing.JLabel\">\n            <constraints>\n              <grid row=\"10\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"16\" style=\"1\"/>\n              <foreground color=\"-66049\"/>\n              <text value=\"Profile\"/>\n            </properties>\n          </component>\n          <component id=\"dffaa\" class=\"javax.swing.JButton\" binding=\"addPhotoButton\" default-binding=\"true\">\n            <constraints>\n              <grid row=\"10\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\n            </constraints>\n            <properties>\n              <font size=\"14\" style=\"1\"/>\n              <foreground color=\"-16758099\"/>\n              <text value=\"Add Photo\"/>\n            </properties>\n          </component>\n        </children>\n      </grid>\n    </children>\n  </grid>\n</form>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Admin/ProfileUpdate.form b/src/Admin/ProfileUpdate.form
--- a/src/Admin/ProfileUpdate.form	(revision 11c6cdbd1e02f6792b5b67a6443a037c5cc1fd54)
+++ b/src/Admin/ProfileUpdate.form	(date 1745345788338)
@@ -3,7 +3,7 @@
   <grid id="27dc6" binding="MainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
     <margin top="30" left="30" bottom="30" right="30"/>
     <constraints>
-      <xy x="20" y="20" width="572" height="679"/>
+      <xy x="20" y="20" width="699" height="758"/>
     </constraints>
     <properties>
       <foreground color="-66049"/>
@@ -20,7 +20,7 @@
           <text value="Update Profile"/>
         </properties>
       </component>
-      <grid id="6f173" binding="DetailPanel" layout-manager="GridLayoutManager" row-count="13" column-count="3" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+      <grid id="6f173" binding="DetailPanel" layout-manager="GridLayoutManager" row-count="14" column-count="4" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
         <margin top="30" left="30" bottom="30" right="30"/>
         <constraints>
           <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="2" indent="0" use-parent-layout="false">
@@ -258,6 +258,14 @@
               <font size="14" style="1"/>
               <foreground color="-16758099"/>
               <text value="Add Photo"/>
+            </properties>
+          </component>
+          <component id="415c3" class="javax.swing.JButton" binding="exitBtn">
+            <constraints>
+              <grid row="13" column="3" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="4" fill="0" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <text value="Exit"/>
             </properties>
           </component>
         </children>
